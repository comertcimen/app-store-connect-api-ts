// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type OptionsLegacyParser } from '@hey-api/client-fetch';
import { type ActorsGetCollectionData, type ActorsGetCollectionError, type ActorsGetCollectionResponse, type ActorsGetInstanceData, type ActorsGetInstanceError, type ActorsGetInstanceResponse, type AgeRatingDeclarationsUpdateInstanceData, type AgeRatingDeclarationsUpdateInstanceError, type AgeRatingDeclarationsUpdateInstanceResponse, type AlternativeDistributionDomainsGetCollectionData, type AlternativeDistributionDomainsGetCollectionError, type AlternativeDistributionDomainsGetCollectionResponse, type AlternativeDistributionDomainsCreateInstanceData, type AlternativeDistributionDomainsCreateInstanceError, type AlternativeDistributionDomainsCreateInstanceResponse, type AlternativeDistributionDomainsGetInstanceData, type AlternativeDistributionDomainsGetInstanceError, type AlternativeDistributionDomainsGetInstanceResponse, type AlternativeDistributionDomainsDeleteInstanceData, type AlternativeDistributionDomainsDeleteInstanceError, type AlternativeDistributionDomainsDeleteInstanceResponse, type AlternativeDistributionKeysGetCollectionData, type AlternativeDistributionKeysGetCollectionError, type AlternativeDistributionKeysGetCollectionResponse, type AlternativeDistributionKeysCreateInstanceData, type AlternativeDistributionKeysCreateInstanceError, type AlternativeDistributionKeysCreateInstanceResponse, type AlternativeDistributionKeysGetInstanceData, type AlternativeDistributionKeysGetInstanceError, type AlternativeDistributionKeysGetInstanceResponse, type AlternativeDistributionKeysDeleteInstanceData, type AlternativeDistributionKeysDeleteInstanceError, type AlternativeDistributionKeysDeleteInstanceResponse, type AlternativeDistributionPackageDeltasGetInstanceData, type AlternativeDistributionPackageDeltasGetInstanceError, type AlternativeDistributionPackageDeltasGetInstanceResponse, type AlternativeDistributionPackageVariantsGetInstanceData, type AlternativeDistributionPackageVariantsGetInstanceError, type AlternativeDistributionPackageVariantsGetInstanceResponse, type AlternativeDistributionPackageVersionsGetInstanceData, type AlternativeDistributionPackageVersionsGetInstanceError, type AlternativeDistributionPackageVersionsGetInstanceResponse, type AlternativeDistributionPackagesCreateInstanceData, type AlternativeDistributionPackagesCreateInstanceError, type AlternativeDistributionPackagesCreateInstanceResponse, type AlternativeDistributionPackagesGetInstanceData, type AlternativeDistributionPackagesGetInstanceError, type AlternativeDistributionPackagesGetInstanceResponse, type AnalyticsReportInstancesGetInstanceData, type AnalyticsReportInstancesGetInstanceError, type AnalyticsReportInstancesGetInstanceResponse, type AnalyticsReportRequestsCreateInstanceData, type AnalyticsReportRequestsCreateInstanceError, type AnalyticsReportRequestsCreateInstanceResponse, type AnalyticsReportRequestsGetInstanceData, type AnalyticsReportRequestsGetInstanceError, type AnalyticsReportRequestsGetInstanceResponse, type AnalyticsReportRequestsDeleteInstanceData, type AnalyticsReportRequestsDeleteInstanceError, type AnalyticsReportRequestsDeleteInstanceResponse, type AnalyticsReportSegmentsGetInstanceData, type AnalyticsReportSegmentsGetInstanceError, type AnalyticsReportSegmentsGetInstanceResponse, type AnalyticsReportsGetInstanceData, type AnalyticsReportsGetInstanceError, type AnalyticsReportsGetInstanceResponse, type AppAvailabilitiesV2CreateInstanceData, type AppAvailabilitiesV2CreateInstanceError, type AppAvailabilitiesV2CreateInstanceResponse, type AppAvailabilitiesV2GetInstanceData, type AppAvailabilitiesV2GetInstanceError, type AppAvailabilitiesV2GetInstanceResponse, type AppCategoriesGetCollectionData, type AppCategoriesGetCollectionError, type AppCategoriesGetCollectionResponse, type AppCategoriesGetInstanceData, type AppCategoriesGetInstanceError, type AppCategoriesGetInstanceResponse, type AppClipAdvancedExperienceImagesCreateInstanceData, type AppClipAdvancedExperienceImagesCreateInstanceError, type AppClipAdvancedExperienceImagesCreateInstanceResponse, type AppClipAdvancedExperienceImagesGetInstanceData, type AppClipAdvancedExperienceImagesGetInstanceError, type AppClipAdvancedExperienceImagesGetInstanceResponse, type AppClipAdvancedExperienceImagesUpdateInstanceData, type AppClipAdvancedExperienceImagesUpdateInstanceError, type AppClipAdvancedExperienceImagesUpdateInstanceResponse, type AppClipAdvancedExperiencesCreateInstanceData, type AppClipAdvancedExperiencesCreateInstanceError, type AppClipAdvancedExperiencesCreateInstanceResponse, type AppClipAdvancedExperiencesGetInstanceData, type AppClipAdvancedExperiencesGetInstanceError, type AppClipAdvancedExperiencesGetInstanceResponse, type AppClipAdvancedExperiencesUpdateInstanceData, type AppClipAdvancedExperiencesUpdateInstanceError, type AppClipAdvancedExperiencesUpdateInstanceResponse, type AppClipAppStoreReviewDetailsCreateInstanceData, type AppClipAppStoreReviewDetailsCreateInstanceError, type AppClipAppStoreReviewDetailsCreateInstanceResponse, type AppClipAppStoreReviewDetailsGetInstanceData, type AppClipAppStoreReviewDetailsGetInstanceError, type AppClipAppStoreReviewDetailsGetInstanceResponse, type AppClipAppStoreReviewDetailsUpdateInstanceData, type AppClipAppStoreReviewDetailsUpdateInstanceError, type AppClipAppStoreReviewDetailsUpdateInstanceResponse, type AppClipDefaultExperienceLocalizationsCreateInstanceData, type AppClipDefaultExperienceLocalizationsCreateInstanceError, type AppClipDefaultExperienceLocalizationsCreateInstanceResponse, type AppClipDefaultExperienceLocalizationsGetInstanceData, type AppClipDefaultExperienceLocalizationsGetInstanceError, type AppClipDefaultExperienceLocalizationsGetInstanceResponse, type AppClipDefaultExperienceLocalizationsUpdateInstanceData, type AppClipDefaultExperienceLocalizationsUpdateInstanceError, type AppClipDefaultExperienceLocalizationsUpdateInstanceResponse, type AppClipDefaultExperienceLocalizationsDeleteInstanceData, type AppClipDefaultExperienceLocalizationsDeleteInstanceError, type AppClipDefaultExperienceLocalizationsDeleteInstanceResponse, type AppClipDefaultExperiencesCreateInstanceData, type AppClipDefaultExperiencesCreateInstanceError, type AppClipDefaultExperiencesCreateInstanceResponse, type AppClipDefaultExperiencesGetInstanceData, type AppClipDefaultExperiencesGetInstanceError, type AppClipDefaultExperiencesGetInstanceResponse, type AppClipDefaultExperiencesUpdateInstanceData, type AppClipDefaultExperiencesUpdateInstanceError, type AppClipDefaultExperiencesUpdateInstanceResponse, type AppClipDefaultExperiencesDeleteInstanceData, type AppClipDefaultExperiencesDeleteInstanceError, type AppClipDefaultExperiencesDeleteInstanceResponse, type AppClipHeaderImagesCreateInstanceData, type AppClipHeaderImagesCreateInstanceError, type AppClipHeaderImagesCreateInstanceResponse, type AppClipHeaderImagesGetInstanceData, type AppClipHeaderImagesGetInstanceError, type AppClipHeaderImagesGetInstanceResponse, type AppClipHeaderImagesUpdateInstanceData, type AppClipHeaderImagesUpdateInstanceError, type AppClipHeaderImagesUpdateInstanceResponse, type AppClipHeaderImagesDeleteInstanceData, type AppClipHeaderImagesDeleteInstanceError, type AppClipHeaderImagesDeleteInstanceResponse, type AppClipsGetInstanceData, type AppClipsGetInstanceError, type AppClipsGetInstanceResponse, type AppCustomProductPageLocalizationsCreateInstanceData, type AppCustomProductPageLocalizationsCreateInstanceError, type AppCustomProductPageLocalizationsCreateInstanceResponse, type AppCustomProductPageLocalizationsGetInstanceData, type AppCustomProductPageLocalizationsGetInstanceError, type AppCustomProductPageLocalizationsGetInstanceResponse, type AppCustomProductPageLocalizationsUpdateInstanceData, type AppCustomProductPageLocalizationsUpdateInstanceError, type AppCustomProductPageLocalizationsUpdateInstanceResponse, type AppCustomProductPageLocalizationsDeleteInstanceData, type AppCustomProductPageLocalizationsDeleteInstanceError, type AppCustomProductPageLocalizationsDeleteInstanceResponse, type AppCustomProductPageVersionsCreateInstanceData, type AppCustomProductPageVersionsCreateInstanceError, type AppCustomProductPageVersionsCreateInstanceResponse, type AppCustomProductPageVersionsGetInstanceData, type AppCustomProductPageVersionsGetInstanceError, type AppCustomProductPageVersionsGetInstanceResponse, type AppCustomProductPageVersionsUpdateInstanceData, type AppCustomProductPageVersionsUpdateInstanceError, type AppCustomProductPageVersionsUpdateInstanceResponse, type AppCustomProductPagesCreateInstanceData, type AppCustomProductPagesCreateInstanceError, type AppCustomProductPagesCreateInstanceResponse, type AppCustomProductPagesGetInstanceData, type AppCustomProductPagesGetInstanceError, type AppCustomProductPagesGetInstanceResponse, type AppCustomProductPagesUpdateInstanceData, type AppCustomProductPagesUpdateInstanceError, type AppCustomProductPagesUpdateInstanceResponse, type AppCustomProductPagesDeleteInstanceData, type AppCustomProductPagesDeleteInstanceError, type AppCustomProductPagesDeleteInstanceResponse, type AppEncryptionDeclarationDocumentsCreateInstanceData, type AppEncryptionDeclarationDocumentsCreateInstanceError, type AppEncryptionDeclarationDocumentsCreateInstanceResponse, type AppEncryptionDeclarationDocumentsGetInstanceData, type AppEncryptionDeclarationDocumentsGetInstanceError, type AppEncryptionDeclarationDocumentsGetInstanceResponse, type AppEncryptionDeclarationDocumentsUpdateInstanceData, type AppEncryptionDeclarationDocumentsUpdateInstanceError, type AppEncryptionDeclarationDocumentsUpdateInstanceResponse, type AppEncryptionDeclarationsGetCollectionData, type AppEncryptionDeclarationsGetCollectionError, type AppEncryptionDeclarationsGetCollectionResponse, type AppEncryptionDeclarationsCreateInstanceData, type AppEncryptionDeclarationsCreateInstanceError, type AppEncryptionDeclarationsCreateInstanceResponse, type AppEncryptionDeclarationsGetInstanceData, type AppEncryptionDeclarationsGetInstanceError, type AppEncryptionDeclarationsGetInstanceResponse, type AppEventLocalizationsCreateInstanceData, type AppEventLocalizationsCreateInstanceError, type AppEventLocalizationsCreateInstanceResponse, type AppEventLocalizationsGetInstanceData, type AppEventLocalizationsGetInstanceError, type AppEventLocalizationsGetInstanceResponse, type AppEventLocalizationsUpdateInstanceData, type AppEventLocalizationsUpdateInstanceError, type AppEventLocalizationsUpdateInstanceResponse, type AppEventLocalizationsDeleteInstanceData, type AppEventLocalizationsDeleteInstanceError, type AppEventLocalizationsDeleteInstanceResponse, type AppEventScreenshotsCreateInstanceData, type AppEventScreenshotsCreateInstanceError, type AppEventScreenshotsCreateInstanceResponse, type AppEventScreenshotsGetInstanceData, type AppEventScreenshotsGetInstanceError, type AppEventScreenshotsGetInstanceResponse, type AppEventScreenshotsUpdateInstanceData, type AppEventScreenshotsUpdateInstanceError, type AppEventScreenshotsUpdateInstanceResponse, type AppEventScreenshotsDeleteInstanceData, type AppEventScreenshotsDeleteInstanceError, type AppEventScreenshotsDeleteInstanceResponse, type AppEventVideoClipsCreateInstanceData, type AppEventVideoClipsCreateInstanceError, type AppEventVideoClipsCreateInstanceResponse, type AppEventVideoClipsGetInstanceData, type AppEventVideoClipsGetInstanceError, type AppEventVideoClipsGetInstanceResponse, type AppEventVideoClipsUpdateInstanceData, type AppEventVideoClipsUpdateInstanceError, type AppEventVideoClipsUpdateInstanceResponse, type AppEventVideoClipsDeleteInstanceData, type AppEventVideoClipsDeleteInstanceError, type AppEventVideoClipsDeleteInstanceResponse, type AppEventsCreateInstanceData, type AppEventsCreateInstanceError, type AppEventsCreateInstanceResponse, type AppEventsGetInstanceData, type AppEventsGetInstanceError, type AppEventsGetInstanceResponse, type AppEventsUpdateInstanceData, type AppEventsUpdateInstanceError, type AppEventsUpdateInstanceResponse, type AppEventsDeleteInstanceData, type AppEventsDeleteInstanceError, type AppEventsDeleteInstanceResponse, type AppInfoLocalizationsCreateInstanceData, type AppInfoLocalizationsCreateInstanceError, type AppInfoLocalizationsCreateInstanceResponse, type AppInfoLocalizationsGetInstanceData, type AppInfoLocalizationsGetInstanceError, type AppInfoLocalizationsGetInstanceResponse, type AppInfoLocalizationsUpdateInstanceData, type AppInfoLocalizationsUpdateInstanceError, type AppInfoLocalizationsUpdateInstanceResponse, type AppInfoLocalizationsDeleteInstanceData, type AppInfoLocalizationsDeleteInstanceError, type AppInfoLocalizationsDeleteInstanceResponse, type AppInfosGetInstanceData, type AppInfosGetInstanceError, type AppInfosGetInstanceResponse, type AppInfosUpdateInstanceData, type AppInfosUpdateInstanceError, type AppInfosUpdateInstanceResponse, type AppPreviewSetsCreateInstanceData, type AppPreviewSetsCreateInstanceError, type AppPreviewSetsCreateInstanceResponse, type AppPreviewSetsGetInstanceData, type AppPreviewSetsGetInstanceError, type AppPreviewSetsGetInstanceResponse, type AppPreviewSetsDeleteInstanceData, type AppPreviewSetsDeleteInstanceError, type AppPreviewSetsDeleteInstanceResponse, type AppPreviewsCreateInstanceData, type AppPreviewsCreateInstanceError, type AppPreviewsCreateInstanceResponse, type AppPreviewsGetInstanceData, type AppPreviewsGetInstanceError, type AppPreviewsGetInstanceResponse, type AppPreviewsUpdateInstanceData, type AppPreviewsUpdateInstanceError, type AppPreviewsUpdateInstanceResponse, type AppPreviewsDeleteInstanceData, type AppPreviewsDeleteInstanceError, type AppPreviewsDeleteInstanceResponse, type AppPricePointsV3GetInstanceData, type AppPricePointsV3GetInstanceError, type AppPricePointsV3GetInstanceResponse, type AppPriceSchedulesCreateInstanceData, type AppPriceSchedulesCreateInstanceError, type AppPriceSchedulesCreateInstanceResponse, type AppPriceSchedulesGetInstanceData, type AppPriceSchedulesGetInstanceError, type AppPriceSchedulesGetInstanceResponse, type AppScreenshotSetsCreateInstanceData, type AppScreenshotSetsCreateInstanceError, type AppScreenshotSetsCreateInstanceResponse, type AppScreenshotSetsGetInstanceData, type AppScreenshotSetsGetInstanceError, type AppScreenshotSetsGetInstanceResponse, type AppScreenshotSetsDeleteInstanceData, type AppScreenshotSetsDeleteInstanceError, type AppScreenshotSetsDeleteInstanceResponse, type AppScreenshotsCreateInstanceData, type AppScreenshotsCreateInstanceError, type AppScreenshotsCreateInstanceResponse, type AppScreenshotsGetInstanceData, type AppScreenshotsGetInstanceError, type AppScreenshotsGetInstanceResponse, type AppScreenshotsUpdateInstanceData, type AppScreenshotsUpdateInstanceError, type AppScreenshotsUpdateInstanceResponse, type AppScreenshotsDeleteInstanceData, type AppScreenshotsDeleteInstanceError, type AppScreenshotsDeleteInstanceResponse, type AppStoreReviewAttachmentsCreateInstanceData, type AppStoreReviewAttachmentsCreateInstanceError, type AppStoreReviewAttachmentsCreateInstanceResponse, type AppStoreReviewAttachmentsGetInstanceData, type AppStoreReviewAttachmentsGetInstanceError, type AppStoreReviewAttachmentsGetInstanceResponse, type AppStoreReviewAttachmentsUpdateInstanceData, type AppStoreReviewAttachmentsUpdateInstanceError, type AppStoreReviewAttachmentsUpdateInstanceResponse, type AppStoreReviewAttachmentsDeleteInstanceData, type AppStoreReviewAttachmentsDeleteInstanceError, type AppStoreReviewAttachmentsDeleteInstanceResponse, type AppStoreReviewDetailsCreateInstanceData, type AppStoreReviewDetailsCreateInstanceError, type AppStoreReviewDetailsCreateInstanceResponse, type AppStoreReviewDetailsGetInstanceData, type AppStoreReviewDetailsGetInstanceError, type AppStoreReviewDetailsGetInstanceResponse, type AppStoreReviewDetailsUpdateInstanceData, type AppStoreReviewDetailsUpdateInstanceError, type AppStoreReviewDetailsUpdateInstanceResponse, type AppStoreVersionExperimentTreatmentLocalizationsCreateInstanceData, type AppStoreVersionExperimentTreatmentLocalizationsCreateInstanceError, type AppStoreVersionExperimentTreatmentLocalizationsCreateInstanceResponse, type AppStoreVersionExperimentTreatmentLocalizationsGetInstanceData, type AppStoreVersionExperimentTreatmentLocalizationsGetInstanceError, type AppStoreVersionExperimentTreatmentLocalizationsGetInstanceResponse, type AppStoreVersionExperimentTreatmentLocalizationsDeleteInstanceData, type AppStoreVersionExperimentTreatmentLocalizationsDeleteInstanceError, type AppStoreVersionExperimentTreatmentLocalizationsDeleteInstanceResponse, type AppStoreVersionExperimentTreatmentsCreateInstanceData, type AppStoreVersionExperimentTreatmentsCreateInstanceError, type AppStoreVersionExperimentTreatmentsCreateInstanceResponse, type AppStoreVersionExperimentTreatmentsGetInstanceData, type AppStoreVersionExperimentTreatmentsGetInstanceError, type AppStoreVersionExperimentTreatmentsGetInstanceResponse, type AppStoreVersionExperimentTreatmentsUpdateInstanceData, type AppStoreVersionExperimentTreatmentsUpdateInstanceError, type AppStoreVersionExperimentTreatmentsUpdateInstanceResponse, type AppStoreVersionExperimentTreatmentsDeleteInstanceData, type AppStoreVersionExperimentTreatmentsDeleteInstanceError, type AppStoreVersionExperimentTreatmentsDeleteInstanceResponse, type AppStoreVersionExperimentsV2CreateInstanceData, type AppStoreVersionExperimentsV2CreateInstanceError, type AppStoreVersionExperimentsV2CreateInstanceResponse, type AppStoreVersionExperimentsV2GetInstanceData, type AppStoreVersionExperimentsV2GetInstanceError, type AppStoreVersionExperimentsV2GetInstanceResponse, type AppStoreVersionExperimentsV2UpdateInstanceData, type AppStoreVersionExperimentsV2UpdateInstanceError, type AppStoreVersionExperimentsV2UpdateInstanceResponse, type AppStoreVersionExperimentsV2DeleteInstanceData, type AppStoreVersionExperimentsV2DeleteInstanceError, type AppStoreVersionExperimentsV2DeleteInstanceResponse, type AppStoreVersionExperimentsCreateInstanceData, type AppStoreVersionExperimentsCreateInstanceError, type AppStoreVersionExperimentsCreateInstanceResponse, type AppStoreVersionExperimentsGetInstanceData, type AppStoreVersionExperimentsGetInstanceError, type AppStoreVersionExperimentsGetInstanceResponse, type AppStoreVersionExperimentsUpdateInstanceData, type AppStoreVersionExperimentsUpdateInstanceError, type AppStoreVersionExperimentsUpdateInstanceResponse, type AppStoreVersionExperimentsDeleteInstanceData, type AppStoreVersionExperimentsDeleteInstanceError, type AppStoreVersionExperimentsDeleteInstanceResponse, type AppStoreVersionLocalizationsCreateInstanceData, type AppStoreVersionLocalizationsCreateInstanceError, type AppStoreVersionLocalizationsCreateInstanceResponse, type AppStoreVersionLocalizationsGetInstanceData, type AppStoreVersionLocalizationsGetInstanceError, type AppStoreVersionLocalizationsGetInstanceResponse, type AppStoreVersionLocalizationsUpdateInstanceData, type AppStoreVersionLocalizationsUpdateInstanceError, type AppStoreVersionLocalizationsUpdateInstanceResponse, type AppStoreVersionLocalizationsDeleteInstanceData, type AppStoreVersionLocalizationsDeleteInstanceError, type AppStoreVersionLocalizationsDeleteInstanceResponse, type AppStoreVersionPhasedReleasesCreateInstanceData, type AppStoreVersionPhasedReleasesCreateInstanceError, type AppStoreVersionPhasedReleasesCreateInstanceResponse, type AppStoreVersionPhasedReleasesUpdateInstanceData, type AppStoreVersionPhasedReleasesUpdateInstanceError, type AppStoreVersionPhasedReleasesUpdateInstanceResponse, type AppStoreVersionPhasedReleasesDeleteInstanceData, type AppStoreVersionPhasedReleasesDeleteInstanceError, type AppStoreVersionPhasedReleasesDeleteInstanceResponse, type AppStoreVersionPromotionsCreateInstanceData, type AppStoreVersionPromotionsCreateInstanceError, type AppStoreVersionPromotionsCreateInstanceResponse, type AppStoreVersionReleaseRequestsCreateInstanceData, type AppStoreVersionReleaseRequestsCreateInstanceError, type AppStoreVersionReleaseRequestsCreateInstanceResponse, type AppStoreVersionSubmissionsCreateInstanceData, type AppStoreVersionSubmissionsCreateInstanceError, type AppStoreVersionSubmissionsCreateInstanceResponse, type AppStoreVersionSubmissionsDeleteInstanceData, type AppStoreVersionSubmissionsDeleteInstanceError, type AppStoreVersionSubmissionsDeleteInstanceResponse, type AppStoreVersionsCreateInstanceData, type AppStoreVersionsCreateInstanceError, type AppStoreVersionsCreateInstanceResponse, type AppStoreVersionsGetInstanceData, type AppStoreVersionsGetInstanceError, type AppStoreVersionsGetInstanceResponse, type AppStoreVersionsUpdateInstanceData, type AppStoreVersionsUpdateInstanceError, type AppStoreVersionsUpdateInstanceResponse, type AppStoreVersionsDeleteInstanceData, type AppStoreVersionsDeleteInstanceError, type AppStoreVersionsDeleteInstanceResponse, type AppsGetCollectionData, type AppsGetCollectionError, type AppsGetCollectionResponse, type AppsGetInstanceData, type AppsGetInstanceError, type AppsGetInstanceResponse, type AppsUpdateInstanceData, type AppsUpdateInstanceError, type AppsUpdateInstanceResponse, type BetaAppClipInvocationLocalizationsCreateInstanceData, type BetaAppClipInvocationLocalizationsCreateInstanceError, type BetaAppClipInvocationLocalizationsCreateInstanceResponse, type BetaAppClipInvocationLocalizationsUpdateInstanceData, type BetaAppClipInvocationLocalizationsUpdateInstanceError, type BetaAppClipInvocationLocalizationsUpdateInstanceResponse, type BetaAppClipInvocationLocalizationsDeleteInstanceData, type BetaAppClipInvocationLocalizationsDeleteInstanceError, type BetaAppClipInvocationLocalizationsDeleteInstanceResponse, type BetaAppClipInvocationsCreateInstanceData, type BetaAppClipInvocationsCreateInstanceError, type BetaAppClipInvocationsCreateInstanceResponse, type BetaAppClipInvocationsGetInstanceData, type BetaAppClipInvocationsGetInstanceError, type BetaAppClipInvocationsGetInstanceResponse, type BetaAppClipInvocationsUpdateInstanceData, type BetaAppClipInvocationsUpdateInstanceError, type BetaAppClipInvocationsUpdateInstanceResponse, type BetaAppClipInvocationsDeleteInstanceData, type BetaAppClipInvocationsDeleteInstanceError, type BetaAppClipInvocationsDeleteInstanceResponse, type BetaAppLocalizationsGetCollectionData, type BetaAppLocalizationsGetCollectionError, type BetaAppLocalizationsGetCollectionResponse, type BetaAppLocalizationsCreateInstanceData, type BetaAppLocalizationsCreateInstanceError, type BetaAppLocalizationsCreateInstanceResponse, type BetaAppLocalizationsGetInstanceData, type BetaAppLocalizationsGetInstanceError, type BetaAppLocalizationsGetInstanceResponse, type BetaAppLocalizationsUpdateInstanceData, type BetaAppLocalizationsUpdateInstanceError, type BetaAppLocalizationsUpdateInstanceResponse, type BetaAppLocalizationsDeleteInstanceData, type BetaAppLocalizationsDeleteInstanceError, type BetaAppLocalizationsDeleteInstanceResponse, type BetaAppReviewDetailsGetCollectionData, type BetaAppReviewDetailsGetCollectionError, type BetaAppReviewDetailsGetCollectionResponse, type BetaAppReviewDetailsGetInstanceData, type BetaAppReviewDetailsGetInstanceError, type BetaAppReviewDetailsGetInstanceResponse, type BetaAppReviewDetailsUpdateInstanceData, type BetaAppReviewDetailsUpdateInstanceError, type BetaAppReviewDetailsUpdateInstanceResponse, type BetaAppReviewSubmissionsGetCollectionData, type BetaAppReviewSubmissionsGetCollectionError, type BetaAppReviewSubmissionsGetCollectionResponse, type BetaAppReviewSubmissionsCreateInstanceData, type BetaAppReviewSubmissionsCreateInstanceError, type BetaAppReviewSubmissionsCreateInstanceResponse, type BetaAppReviewSubmissionsGetInstanceData, type BetaAppReviewSubmissionsGetInstanceError, type BetaAppReviewSubmissionsGetInstanceResponse, type BetaBuildLocalizationsGetCollectionData, type BetaBuildLocalizationsGetCollectionError, type BetaBuildLocalizationsGetCollectionResponse, type BetaBuildLocalizationsCreateInstanceData, type BetaBuildLocalizationsCreateInstanceError, type BetaBuildLocalizationsCreateInstanceResponse, type BetaBuildLocalizationsGetInstanceData, type BetaBuildLocalizationsGetInstanceError, type BetaBuildLocalizationsGetInstanceResponse, type BetaBuildLocalizationsUpdateInstanceData, type BetaBuildLocalizationsUpdateInstanceError, type BetaBuildLocalizationsUpdateInstanceResponse, type BetaBuildLocalizationsDeleteInstanceData, type BetaBuildLocalizationsDeleteInstanceError, type BetaBuildLocalizationsDeleteInstanceResponse, type BetaGroupsGetCollectionData, type BetaGroupsGetCollectionError, type BetaGroupsGetCollectionResponse, type BetaGroupsCreateInstanceData, type BetaGroupsCreateInstanceError, type BetaGroupsCreateInstanceResponse, type BetaGroupsGetInstanceData, type BetaGroupsGetInstanceError, type BetaGroupsGetInstanceResponse, type BetaGroupsUpdateInstanceData, type BetaGroupsUpdateInstanceError, type BetaGroupsUpdateInstanceResponse, type BetaGroupsDeleteInstanceData, type BetaGroupsDeleteInstanceError, type BetaGroupsDeleteInstanceResponse, type BetaLicenseAgreementsGetCollectionData, type BetaLicenseAgreementsGetCollectionError, type BetaLicenseAgreementsGetCollectionResponse, type BetaLicenseAgreementsGetInstanceData, type BetaLicenseAgreementsGetInstanceError, type BetaLicenseAgreementsGetInstanceResponse, type BetaLicenseAgreementsUpdateInstanceData, type BetaLicenseAgreementsUpdateInstanceError, type BetaLicenseAgreementsUpdateInstanceResponse, type BetaRecruitmentCriteriaCreateInstanceData, type BetaRecruitmentCriteriaCreateInstanceError, type BetaRecruitmentCriteriaCreateInstanceResponse, type BetaRecruitmentCriteriaUpdateInstanceData, type BetaRecruitmentCriteriaUpdateInstanceError, type BetaRecruitmentCriteriaUpdateInstanceResponse, type BetaRecruitmentCriteriaDeleteInstanceData, type BetaRecruitmentCriteriaDeleteInstanceError, type BetaRecruitmentCriteriaDeleteInstanceResponse, type BetaRecruitmentCriterionOptionsGetCollectionData, type BetaRecruitmentCriterionOptionsGetCollectionError, type BetaRecruitmentCriterionOptionsGetCollectionResponse, type BetaTesterInvitationsCreateInstanceData, type BetaTesterInvitationsCreateInstanceError, type BetaTesterInvitationsCreateInstanceResponse, type BetaTestersGetCollectionData, type BetaTestersGetCollectionError, type BetaTestersGetCollectionResponse, type BetaTestersCreateInstanceData, type BetaTestersCreateInstanceError, type BetaTestersCreateInstanceResponse, type BetaTestersGetInstanceData, type BetaTestersGetInstanceError, type BetaTestersGetInstanceResponse, type BetaTestersDeleteInstanceData, type BetaTestersDeleteInstanceError, type BetaTestersDeleteInstanceResponse, type BuildBetaDetailsGetCollectionData, type BuildBetaDetailsGetCollectionError, type BuildBetaDetailsGetCollectionResponse, type BuildBetaDetailsGetInstanceData, type BuildBetaDetailsGetInstanceError, type BuildBetaDetailsGetInstanceResponse, type BuildBetaDetailsUpdateInstanceData, type BuildBetaDetailsUpdateInstanceError, type BuildBetaDetailsUpdateInstanceResponse, type BuildBetaNotificationsCreateInstanceData, type BuildBetaNotificationsCreateInstanceError, type BuildBetaNotificationsCreateInstanceResponse, type BuildsGetCollectionData, type BuildsGetCollectionError, type BuildsGetCollectionResponse, type BuildsGetInstanceData, type BuildsGetInstanceError, type BuildsGetInstanceResponse, type BuildsUpdateInstanceData, type BuildsUpdateInstanceError, type BuildsUpdateInstanceResponse, type BundleIdCapabilitiesCreateInstanceData, type BundleIdCapabilitiesCreateInstanceError, type BundleIdCapabilitiesCreateInstanceResponse, type BundleIdCapabilitiesUpdateInstanceData, type BundleIdCapabilitiesUpdateInstanceError, type BundleIdCapabilitiesUpdateInstanceResponse, type BundleIdCapabilitiesDeleteInstanceData, type BundleIdCapabilitiesDeleteInstanceError, type BundleIdCapabilitiesDeleteInstanceResponse, type BundleIdsGetCollectionData, type BundleIdsGetCollectionError, type BundleIdsGetCollectionResponse, type BundleIdsCreateInstanceData, type BundleIdsCreateInstanceError, type BundleIdsCreateInstanceResponse, type BundleIdsGetInstanceData, type BundleIdsGetInstanceError, type BundleIdsGetInstanceResponse, type BundleIdsUpdateInstanceData, type BundleIdsUpdateInstanceError, type BundleIdsUpdateInstanceResponse, type BundleIdsDeleteInstanceData, type BundleIdsDeleteInstanceError, type BundleIdsDeleteInstanceResponse, type CertificatesGetCollectionData, type CertificatesGetCollectionError, type CertificatesGetCollectionResponse, type CertificatesCreateInstanceData, type CertificatesCreateInstanceError, type CertificatesCreateInstanceResponse, type CertificatesGetInstanceData, type CertificatesGetInstanceError, type CertificatesGetInstanceResponse, type CertificatesUpdateInstanceData, type CertificatesUpdateInstanceError, type CertificatesUpdateInstanceResponse, type CertificatesDeleteInstanceData, type CertificatesDeleteInstanceError, type CertificatesDeleteInstanceResponse, type CiArtifactsGetInstanceData, type CiArtifactsGetInstanceError, type CiArtifactsGetInstanceResponse, type CiBuildActionsGetInstanceData, type CiBuildActionsGetInstanceError, type CiBuildActionsGetInstanceResponse, type CiBuildRunsCreateInstanceData, type CiBuildRunsCreateInstanceError, type CiBuildRunsCreateInstanceResponse, type CiBuildRunsGetInstanceData, type CiBuildRunsGetInstanceError, type CiBuildRunsGetInstanceResponse, type CiIssuesGetInstanceData, type CiIssuesGetInstanceError, type CiIssuesGetInstanceResponse, type CiMacOsVersionsGetCollectionData, type CiMacOsVersionsGetCollectionError, type CiMacOsVersionsGetCollectionResponse, type CiMacOsVersionsGetInstanceData, type CiMacOsVersionsGetInstanceError, type CiMacOsVersionsGetInstanceResponse, type CiProductsGetCollectionData, type CiProductsGetCollectionError, type CiProductsGetCollectionResponse, type CiProductsGetInstanceData, type CiProductsGetInstanceError, type CiProductsGetInstanceResponse, type CiProductsDeleteInstanceData, type CiProductsDeleteInstanceError, type CiProductsDeleteInstanceResponse, type CiTestResultsGetInstanceData, type CiTestResultsGetInstanceError, type CiTestResultsGetInstanceResponse, type CiWorkflowsCreateInstanceData, type CiWorkflowsCreateInstanceError, type CiWorkflowsCreateInstanceResponse, type CiWorkflowsGetInstanceData, type CiWorkflowsGetInstanceError, type CiWorkflowsGetInstanceResponse, type CiWorkflowsUpdateInstanceData, type CiWorkflowsUpdateInstanceError, type CiWorkflowsUpdateInstanceResponse, type CiWorkflowsDeleteInstanceData, type CiWorkflowsDeleteInstanceError, type CiWorkflowsDeleteInstanceResponse, type CiXcodeVersionsGetCollectionData, type CiXcodeVersionsGetCollectionError, type CiXcodeVersionsGetCollectionResponse, type CiXcodeVersionsGetInstanceData, type CiXcodeVersionsGetInstanceError, type CiXcodeVersionsGetInstanceResponse, type CustomerReviewResponsesCreateInstanceData, type CustomerReviewResponsesCreateInstanceError, type CustomerReviewResponsesCreateInstanceResponse, type CustomerReviewResponsesGetInstanceData, type CustomerReviewResponsesGetInstanceError, type CustomerReviewResponsesGetInstanceResponse, type CustomerReviewResponsesDeleteInstanceData, type CustomerReviewResponsesDeleteInstanceError, type CustomerReviewResponsesDeleteInstanceResponse, type CustomerReviewsGetInstanceData, type CustomerReviewsGetInstanceError, type CustomerReviewsGetInstanceResponse, type DevicesGetCollectionData, type DevicesGetCollectionError, type DevicesGetCollectionResponse, type DevicesCreateInstanceData, type DevicesCreateInstanceError, type DevicesCreateInstanceResponse, type DevicesGetInstanceData, type DevicesGetInstanceError, type DevicesGetInstanceResponse, type DevicesUpdateInstanceData, type DevicesUpdateInstanceError, type DevicesUpdateInstanceResponse, type EndAppAvailabilityPreOrdersCreateInstanceData, type EndAppAvailabilityPreOrdersCreateInstanceError, type EndAppAvailabilityPreOrdersCreateInstanceResponse, type EndUserLicenseAgreementsCreateInstanceData, type EndUserLicenseAgreementsCreateInstanceError, type EndUserLicenseAgreementsCreateInstanceResponse, type EndUserLicenseAgreementsGetInstanceData, type EndUserLicenseAgreementsGetInstanceError, type EndUserLicenseAgreementsGetInstanceResponse, type EndUserLicenseAgreementsUpdateInstanceData, type EndUserLicenseAgreementsUpdateInstanceError, type EndUserLicenseAgreementsUpdateInstanceResponse, type EndUserLicenseAgreementsDeleteInstanceData, type EndUserLicenseAgreementsDeleteInstanceError, type EndUserLicenseAgreementsDeleteInstanceResponse, type FinanceReportsGetCollectionData, type FinanceReportsGetCollectionError, type FinanceReportsGetCollectionResponse, type GameCenterAchievementImagesCreateInstanceData, type GameCenterAchievementImagesCreateInstanceError, type GameCenterAchievementImagesCreateInstanceResponse, type GameCenterAchievementImagesGetInstanceData, type GameCenterAchievementImagesGetInstanceError, type GameCenterAchievementImagesGetInstanceResponse, type GameCenterAchievementImagesUpdateInstanceData, type GameCenterAchievementImagesUpdateInstanceError, type GameCenterAchievementImagesUpdateInstanceResponse, type GameCenterAchievementImagesDeleteInstanceData, type GameCenterAchievementImagesDeleteInstanceError, type GameCenterAchievementImagesDeleteInstanceResponse, type GameCenterAchievementLocalizationsCreateInstanceData, type GameCenterAchievementLocalizationsCreateInstanceError, type GameCenterAchievementLocalizationsCreateInstanceResponse, type GameCenterAchievementLocalizationsGetInstanceData, type GameCenterAchievementLocalizationsGetInstanceError, type GameCenterAchievementLocalizationsGetInstanceResponse, type GameCenterAchievementLocalizationsUpdateInstanceData, type GameCenterAchievementLocalizationsUpdateInstanceError, type GameCenterAchievementLocalizationsUpdateInstanceResponse, type GameCenterAchievementLocalizationsDeleteInstanceData, type GameCenterAchievementLocalizationsDeleteInstanceError, type GameCenterAchievementLocalizationsDeleteInstanceResponse, type GameCenterAchievementReleasesCreateInstanceData, type GameCenterAchievementReleasesCreateInstanceError, type GameCenterAchievementReleasesCreateInstanceResponse, type GameCenterAchievementReleasesGetInstanceData, type GameCenterAchievementReleasesGetInstanceError, type GameCenterAchievementReleasesGetInstanceResponse, type GameCenterAchievementReleasesDeleteInstanceData, type GameCenterAchievementReleasesDeleteInstanceError, type GameCenterAchievementReleasesDeleteInstanceResponse, type GameCenterAchievementsCreateInstanceData, type GameCenterAchievementsCreateInstanceError, type GameCenterAchievementsCreateInstanceResponse, type GameCenterAchievementsGetInstanceData, type GameCenterAchievementsGetInstanceError, type GameCenterAchievementsGetInstanceResponse, type GameCenterAchievementsUpdateInstanceData, type GameCenterAchievementsUpdateInstanceError, type GameCenterAchievementsUpdateInstanceResponse, type GameCenterAchievementsDeleteInstanceData, type GameCenterAchievementsDeleteInstanceError, type GameCenterAchievementsDeleteInstanceResponse, type GameCenterAppVersionsCreateInstanceData, type GameCenterAppVersionsCreateInstanceError, type GameCenterAppVersionsCreateInstanceResponse, type GameCenterAppVersionsGetInstanceData, type GameCenterAppVersionsGetInstanceError, type GameCenterAppVersionsGetInstanceResponse, type GameCenterAppVersionsUpdateInstanceData, type GameCenterAppVersionsUpdateInstanceError, type GameCenterAppVersionsUpdateInstanceResponse, type GameCenterDetailsCreateInstanceData, type GameCenterDetailsCreateInstanceError, type GameCenterDetailsCreateInstanceResponse, type GameCenterDetailsGetInstanceData, type GameCenterDetailsGetInstanceError, type GameCenterDetailsGetInstanceResponse, type GameCenterDetailsUpdateInstanceData, type GameCenterDetailsUpdateInstanceError, type GameCenterDetailsUpdateInstanceResponse, type GameCenterGroupsGetCollectionData, type GameCenterGroupsGetCollectionError, type GameCenterGroupsGetCollectionResponse, type GameCenterGroupsCreateInstanceData, type GameCenterGroupsCreateInstanceError, type GameCenterGroupsCreateInstanceResponse, type GameCenterGroupsGetInstanceData, type GameCenterGroupsGetInstanceError, type GameCenterGroupsGetInstanceResponse, type GameCenterGroupsUpdateInstanceData, type GameCenterGroupsUpdateInstanceError, type GameCenterGroupsUpdateInstanceResponse, type GameCenterGroupsDeleteInstanceData, type GameCenterGroupsDeleteInstanceError, type GameCenterGroupsDeleteInstanceResponse, type GameCenterLeaderboardEntrySubmissionsCreateInstanceData, type GameCenterLeaderboardEntrySubmissionsCreateInstanceError, type GameCenterLeaderboardEntrySubmissionsCreateInstanceResponse, type GameCenterLeaderboardImagesCreateInstanceData, type GameCenterLeaderboardImagesCreateInstanceError, type GameCenterLeaderboardImagesCreateInstanceResponse, type GameCenterLeaderboardImagesGetInstanceData, type GameCenterLeaderboardImagesGetInstanceError, type GameCenterLeaderboardImagesGetInstanceResponse, type GameCenterLeaderboardImagesUpdateInstanceData, type GameCenterLeaderboardImagesUpdateInstanceError, type GameCenterLeaderboardImagesUpdateInstanceResponse, type GameCenterLeaderboardImagesDeleteInstanceData, type GameCenterLeaderboardImagesDeleteInstanceError, type GameCenterLeaderboardImagesDeleteInstanceResponse, type GameCenterLeaderboardLocalizationsCreateInstanceData, type GameCenterLeaderboardLocalizationsCreateInstanceError, type GameCenterLeaderboardLocalizationsCreateInstanceResponse, type GameCenterLeaderboardLocalizationsGetInstanceData, type GameCenterLeaderboardLocalizationsGetInstanceError, type GameCenterLeaderboardLocalizationsGetInstanceResponse, type GameCenterLeaderboardLocalizationsUpdateInstanceData, type GameCenterLeaderboardLocalizationsUpdateInstanceError, type GameCenterLeaderboardLocalizationsUpdateInstanceResponse, type GameCenterLeaderboardLocalizationsDeleteInstanceData, type GameCenterLeaderboardLocalizationsDeleteInstanceError, type GameCenterLeaderboardLocalizationsDeleteInstanceResponse, type GameCenterLeaderboardReleasesCreateInstanceData, type GameCenterLeaderboardReleasesCreateInstanceError, type GameCenterLeaderboardReleasesCreateInstanceResponse, type GameCenterLeaderboardReleasesGetInstanceData, type GameCenterLeaderboardReleasesGetInstanceError, type GameCenterLeaderboardReleasesGetInstanceResponse, type GameCenterLeaderboardReleasesDeleteInstanceData, type GameCenterLeaderboardReleasesDeleteInstanceError, type GameCenterLeaderboardReleasesDeleteInstanceResponse, type GameCenterLeaderboardSetImagesCreateInstanceData, type GameCenterLeaderboardSetImagesCreateInstanceError, type GameCenterLeaderboardSetImagesCreateInstanceResponse, type GameCenterLeaderboardSetImagesGetInstanceData, type GameCenterLeaderboardSetImagesGetInstanceError, type GameCenterLeaderboardSetImagesGetInstanceResponse, type GameCenterLeaderboardSetImagesUpdateInstanceData, type GameCenterLeaderboardSetImagesUpdateInstanceError, type GameCenterLeaderboardSetImagesUpdateInstanceResponse, type GameCenterLeaderboardSetImagesDeleteInstanceData, type GameCenterLeaderboardSetImagesDeleteInstanceError, type GameCenterLeaderboardSetImagesDeleteInstanceResponse, type GameCenterLeaderboardSetLocalizationsCreateInstanceData, type GameCenterLeaderboardSetLocalizationsCreateInstanceError, type GameCenterLeaderboardSetLocalizationsCreateInstanceResponse, type GameCenterLeaderboardSetLocalizationsGetInstanceData, type GameCenterLeaderboardSetLocalizationsGetInstanceError, type GameCenterLeaderboardSetLocalizationsGetInstanceResponse, type GameCenterLeaderboardSetLocalizationsUpdateInstanceData, type GameCenterLeaderboardSetLocalizationsUpdateInstanceError, type GameCenterLeaderboardSetLocalizationsUpdateInstanceResponse, type GameCenterLeaderboardSetLocalizationsDeleteInstanceData, type GameCenterLeaderboardSetLocalizationsDeleteInstanceError, type GameCenterLeaderboardSetLocalizationsDeleteInstanceResponse, type GameCenterLeaderboardSetMemberLocalizationsGetCollectionData, type GameCenterLeaderboardSetMemberLocalizationsGetCollectionError, type GameCenterLeaderboardSetMemberLocalizationsGetCollectionResponse, type GameCenterLeaderboardSetMemberLocalizationsCreateInstanceData, type GameCenterLeaderboardSetMemberLocalizationsCreateInstanceError, type GameCenterLeaderboardSetMemberLocalizationsCreateInstanceResponse, type GameCenterLeaderboardSetMemberLocalizationsUpdateInstanceData, type GameCenterLeaderboardSetMemberLocalizationsUpdateInstanceError, type GameCenterLeaderboardSetMemberLocalizationsUpdateInstanceResponse, type GameCenterLeaderboardSetMemberLocalizationsDeleteInstanceData, type GameCenterLeaderboardSetMemberLocalizationsDeleteInstanceError, type GameCenterLeaderboardSetMemberLocalizationsDeleteInstanceResponse, type GameCenterLeaderboardSetReleasesCreateInstanceData, type GameCenterLeaderboardSetReleasesCreateInstanceError, type GameCenterLeaderboardSetReleasesCreateInstanceResponse, type GameCenterLeaderboardSetReleasesGetInstanceData, type GameCenterLeaderboardSetReleasesGetInstanceError, type GameCenterLeaderboardSetReleasesGetInstanceResponse, type GameCenterLeaderboardSetReleasesDeleteInstanceData, type GameCenterLeaderboardSetReleasesDeleteInstanceError, type GameCenterLeaderboardSetReleasesDeleteInstanceResponse, type GameCenterLeaderboardSetsCreateInstanceData, type GameCenterLeaderboardSetsCreateInstanceError, type GameCenterLeaderboardSetsCreateInstanceResponse, type GameCenterLeaderboardSetsGetInstanceData, type GameCenterLeaderboardSetsGetInstanceError, type GameCenterLeaderboardSetsGetInstanceResponse, type GameCenterLeaderboardSetsUpdateInstanceData, type GameCenterLeaderboardSetsUpdateInstanceError, type GameCenterLeaderboardSetsUpdateInstanceResponse, type GameCenterLeaderboardSetsDeleteInstanceData, type GameCenterLeaderboardSetsDeleteInstanceError, type GameCenterLeaderboardSetsDeleteInstanceResponse, type GameCenterLeaderboardsCreateInstanceData, type GameCenterLeaderboardsCreateInstanceError, type GameCenterLeaderboardsCreateInstanceResponse, type GameCenterLeaderboardsGetInstanceData, type GameCenterLeaderboardsGetInstanceError, type GameCenterLeaderboardsGetInstanceResponse, type GameCenterLeaderboardsUpdateInstanceData, type GameCenterLeaderboardsUpdateInstanceError, type GameCenterLeaderboardsUpdateInstanceResponse, type GameCenterLeaderboardsDeleteInstanceData, type GameCenterLeaderboardsDeleteInstanceError, type GameCenterLeaderboardsDeleteInstanceResponse, type GameCenterMatchmakingQueuesGetCollectionData, type GameCenterMatchmakingQueuesGetCollectionError, type GameCenterMatchmakingQueuesGetCollectionResponse, type GameCenterMatchmakingQueuesCreateInstanceData, type GameCenterMatchmakingQueuesCreateInstanceError, type GameCenterMatchmakingQueuesCreateInstanceResponse, type GameCenterMatchmakingQueuesGetInstanceData, type GameCenterMatchmakingQueuesGetInstanceError, type GameCenterMatchmakingQueuesGetInstanceResponse, type GameCenterMatchmakingQueuesUpdateInstanceData, type GameCenterMatchmakingQueuesUpdateInstanceError, type GameCenterMatchmakingQueuesUpdateInstanceResponse, type GameCenterMatchmakingQueuesDeleteInstanceData, type GameCenterMatchmakingQueuesDeleteInstanceError, type GameCenterMatchmakingQueuesDeleteInstanceResponse, type GameCenterMatchmakingRuleSetTestsCreateInstanceData, type GameCenterMatchmakingRuleSetTestsCreateInstanceError, type GameCenterMatchmakingRuleSetTestsCreateInstanceResponse, type GameCenterMatchmakingRuleSetsGetCollectionData, type GameCenterMatchmakingRuleSetsGetCollectionError, type GameCenterMatchmakingRuleSetsGetCollectionResponse, type GameCenterMatchmakingRuleSetsCreateInstanceData, type GameCenterMatchmakingRuleSetsCreateInstanceError, type GameCenterMatchmakingRuleSetsCreateInstanceResponse, type GameCenterMatchmakingRuleSetsGetInstanceData, type GameCenterMatchmakingRuleSetsGetInstanceError, type GameCenterMatchmakingRuleSetsGetInstanceResponse, type GameCenterMatchmakingRuleSetsUpdateInstanceData, type GameCenterMatchmakingRuleSetsUpdateInstanceError, type GameCenterMatchmakingRuleSetsUpdateInstanceResponse, type GameCenterMatchmakingRuleSetsDeleteInstanceData, type GameCenterMatchmakingRuleSetsDeleteInstanceError, type GameCenterMatchmakingRuleSetsDeleteInstanceResponse, type GameCenterMatchmakingRulesCreateInstanceData, type GameCenterMatchmakingRulesCreateInstanceError, type GameCenterMatchmakingRulesCreateInstanceResponse, type GameCenterMatchmakingRulesUpdateInstanceData, type GameCenterMatchmakingRulesUpdateInstanceError, type GameCenterMatchmakingRulesUpdateInstanceResponse, type GameCenterMatchmakingRulesDeleteInstanceData, type GameCenterMatchmakingRulesDeleteInstanceError, type GameCenterMatchmakingRulesDeleteInstanceResponse, type GameCenterMatchmakingTeamsCreateInstanceData, type GameCenterMatchmakingTeamsCreateInstanceError, type GameCenterMatchmakingTeamsCreateInstanceResponse, type GameCenterMatchmakingTeamsUpdateInstanceData, type GameCenterMatchmakingTeamsUpdateInstanceError, type GameCenterMatchmakingTeamsUpdateInstanceResponse, type GameCenterMatchmakingTeamsDeleteInstanceData, type GameCenterMatchmakingTeamsDeleteInstanceError, type GameCenterMatchmakingTeamsDeleteInstanceResponse, type GameCenterPlayerAchievementSubmissionsCreateInstanceData, type GameCenterPlayerAchievementSubmissionsCreateInstanceError, type GameCenterPlayerAchievementSubmissionsCreateInstanceResponse, type InAppPurchaseAppStoreReviewScreenshotsCreateInstanceData, type InAppPurchaseAppStoreReviewScreenshotsCreateInstanceError, type InAppPurchaseAppStoreReviewScreenshotsCreateInstanceResponse, type InAppPurchaseAppStoreReviewScreenshotsGetInstanceData, type InAppPurchaseAppStoreReviewScreenshotsGetInstanceError, type InAppPurchaseAppStoreReviewScreenshotsGetInstanceResponse, type InAppPurchaseAppStoreReviewScreenshotsUpdateInstanceData, type InAppPurchaseAppStoreReviewScreenshotsUpdateInstanceError, type InAppPurchaseAppStoreReviewScreenshotsUpdateInstanceResponse, type InAppPurchaseAppStoreReviewScreenshotsDeleteInstanceData, type InAppPurchaseAppStoreReviewScreenshotsDeleteInstanceError, type InAppPurchaseAppStoreReviewScreenshotsDeleteInstanceResponse, type InAppPurchaseAvailabilitiesCreateInstanceData, type InAppPurchaseAvailabilitiesCreateInstanceError, type InAppPurchaseAvailabilitiesCreateInstanceResponse, type InAppPurchaseAvailabilitiesGetInstanceData, type InAppPurchaseAvailabilitiesGetInstanceError, type InAppPurchaseAvailabilitiesGetInstanceResponse, type InAppPurchaseContentsGetInstanceData, type InAppPurchaseContentsGetInstanceError, type InAppPurchaseContentsGetInstanceResponse, type InAppPurchaseImagesCreateInstanceData, type InAppPurchaseImagesCreateInstanceError, type InAppPurchaseImagesCreateInstanceResponse, type InAppPurchaseImagesGetInstanceData, type InAppPurchaseImagesGetInstanceError, type InAppPurchaseImagesGetInstanceResponse, type InAppPurchaseImagesUpdateInstanceData, type InAppPurchaseImagesUpdateInstanceError, type InAppPurchaseImagesUpdateInstanceResponse, type InAppPurchaseImagesDeleteInstanceData, type InAppPurchaseImagesDeleteInstanceError, type InAppPurchaseImagesDeleteInstanceResponse, type InAppPurchaseLocalizationsCreateInstanceData, type InAppPurchaseLocalizationsCreateInstanceError, type InAppPurchaseLocalizationsCreateInstanceResponse, type InAppPurchaseLocalizationsGetInstanceData, type InAppPurchaseLocalizationsGetInstanceError, type InAppPurchaseLocalizationsGetInstanceResponse, type InAppPurchaseLocalizationsUpdateInstanceData, type InAppPurchaseLocalizationsUpdateInstanceError, type InAppPurchaseLocalizationsUpdateInstanceResponse, type InAppPurchaseLocalizationsDeleteInstanceData, type InAppPurchaseLocalizationsDeleteInstanceError, type InAppPurchaseLocalizationsDeleteInstanceResponse, type InAppPurchasePriceSchedulesCreateInstanceData, type InAppPurchasePriceSchedulesCreateInstanceError, type InAppPurchasePriceSchedulesCreateInstanceResponse, type InAppPurchasePriceSchedulesGetInstanceData, type InAppPurchasePriceSchedulesGetInstanceError, type InAppPurchasePriceSchedulesGetInstanceResponse, type InAppPurchaseSubmissionsCreateInstanceData, type InAppPurchaseSubmissionsCreateInstanceError, type InAppPurchaseSubmissionsCreateInstanceResponse, type InAppPurchasesGetInstanceData, type InAppPurchasesGetInstanceError, type InAppPurchasesGetInstanceResponse, type InAppPurchasesV2CreateInstanceData, type InAppPurchasesV2CreateInstanceError, type InAppPurchasesV2CreateInstanceResponse, type InAppPurchasesV2GetInstanceData, type InAppPurchasesV2GetInstanceError, type InAppPurchasesV2GetInstanceResponse, type InAppPurchasesV2UpdateInstanceData, type InAppPurchasesV2UpdateInstanceError, type InAppPurchasesV2UpdateInstanceResponse, type InAppPurchasesV2DeleteInstanceData, type InAppPurchasesV2DeleteInstanceError, type InAppPurchasesV2DeleteInstanceResponse, type MarketplaceDomainsGetCollectionData, type MarketplaceDomainsGetCollectionError, type MarketplaceDomainsGetCollectionResponse, type MarketplaceDomainsCreateInstanceData, type MarketplaceDomainsCreateInstanceError, type MarketplaceDomainsCreateInstanceResponse, type MarketplaceDomainsGetInstanceData, type MarketplaceDomainsGetInstanceError, type MarketplaceDomainsGetInstanceResponse, type MarketplaceDomainsDeleteInstanceData, type MarketplaceDomainsDeleteInstanceError, type MarketplaceDomainsDeleteInstanceResponse, type MarketplaceSearchDetailsCreateInstanceData, type MarketplaceSearchDetailsCreateInstanceError, type MarketplaceSearchDetailsCreateInstanceResponse, type MarketplaceSearchDetailsUpdateInstanceData, type MarketplaceSearchDetailsUpdateInstanceError, type MarketplaceSearchDetailsUpdateInstanceResponse, type MarketplaceSearchDetailsDeleteInstanceData, type MarketplaceSearchDetailsDeleteInstanceError, type MarketplaceSearchDetailsDeleteInstanceResponse, type MarketplaceWebhooksGetCollectionData, type MarketplaceWebhooksGetCollectionError, type MarketplaceWebhooksGetCollectionResponse, type MarketplaceWebhooksCreateInstanceData, type MarketplaceWebhooksCreateInstanceError, type MarketplaceWebhooksCreateInstanceResponse, type MarketplaceWebhooksUpdateInstanceData, type MarketplaceWebhooksUpdateInstanceError, type MarketplaceWebhooksUpdateInstanceResponse, type MarketplaceWebhooksDeleteInstanceData, type MarketplaceWebhooksDeleteInstanceError, type MarketplaceWebhooksDeleteInstanceResponse, type MerchantIdsGetCollectionData, type MerchantIdsGetCollectionError, type MerchantIdsGetCollectionResponse, type MerchantIdsCreateInstanceData, type MerchantIdsCreateInstanceError, type MerchantIdsCreateInstanceResponse, type MerchantIdsGetInstanceData, type MerchantIdsGetInstanceError, type MerchantIdsGetInstanceResponse, type MerchantIdsUpdateInstanceData, type MerchantIdsUpdateInstanceError, type MerchantIdsUpdateInstanceResponse, type MerchantIdsDeleteInstanceData, type MerchantIdsDeleteInstanceError, type MerchantIdsDeleteInstanceResponse, type NominationsGetCollectionData, type NominationsGetCollectionError, type NominationsGetCollectionResponse, type NominationsCreateInstanceData, type NominationsCreateInstanceError, type NominationsCreateInstanceResponse, type NominationsGetInstanceData, type NominationsGetInstanceError, type NominationsGetInstanceResponse, type NominationsUpdateInstanceData, type NominationsUpdateInstanceError, type NominationsUpdateInstanceResponse, type NominationsDeleteInstanceData, type NominationsDeleteInstanceError, type NominationsDeleteInstanceResponse, type PreReleaseVersionsGetCollectionData, type PreReleaseVersionsGetCollectionError, type PreReleaseVersionsGetCollectionResponse, type PreReleaseVersionsGetInstanceData, type PreReleaseVersionsGetInstanceError, type PreReleaseVersionsGetInstanceResponse, type ProfilesGetCollectionData, type ProfilesGetCollectionError, type ProfilesGetCollectionResponse, type ProfilesCreateInstanceData, type ProfilesCreateInstanceError, type ProfilesCreateInstanceResponse, type ProfilesGetInstanceData, type ProfilesGetInstanceError, type ProfilesGetInstanceResponse, type ProfilesDeleteInstanceData, type ProfilesDeleteInstanceError, type ProfilesDeleteInstanceResponse, type PromotedPurchasesCreateInstanceData, type PromotedPurchasesCreateInstanceError, type PromotedPurchasesCreateInstanceResponse, type PromotedPurchasesGetInstanceData, type PromotedPurchasesGetInstanceError, type PromotedPurchasesGetInstanceResponse, type PromotedPurchasesUpdateInstanceData, type PromotedPurchasesUpdateInstanceError, type PromotedPurchasesUpdateInstanceResponse, type PromotedPurchasesDeleteInstanceData, type PromotedPurchasesDeleteInstanceError, type PromotedPurchasesDeleteInstanceResponse, type ReviewSubmissionItemsCreateInstanceData, type ReviewSubmissionItemsCreateInstanceError, type ReviewSubmissionItemsCreateInstanceResponse, type ReviewSubmissionItemsUpdateInstanceData, type ReviewSubmissionItemsUpdateInstanceError, type ReviewSubmissionItemsUpdateInstanceResponse, type ReviewSubmissionItemsDeleteInstanceData, type ReviewSubmissionItemsDeleteInstanceError, type ReviewSubmissionItemsDeleteInstanceResponse, type ReviewSubmissionsGetCollectionData, type ReviewSubmissionsGetCollectionError, type ReviewSubmissionsGetCollectionResponse, type ReviewSubmissionsCreateInstanceData, type ReviewSubmissionsCreateInstanceError, type ReviewSubmissionsCreateInstanceResponse, type ReviewSubmissionsGetInstanceData, type ReviewSubmissionsGetInstanceError, type ReviewSubmissionsGetInstanceResponse, type ReviewSubmissionsUpdateInstanceData, type ReviewSubmissionsUpdateInstanceError, type ReviewSubmissionsUpdateInstanceResponse, type RoutingAppCoveragesCreateInstanceData, type RoutingAppCoveragesCreateInstanceError, type RoutingAppCoveragesCreateInstanceResponse, type RoutingAppCoveragesGetInstanceData, type RoutingAppCoveragesGetInstanceError, type RoutingAppCoveragesGetInstanceResponse, type RoutingAppCoveragesUpdateInstanceData, type RoutingAppCoveragesUpdateInstanceError, type RoutingAppCoveragesUpdateInstanceResponse, type RoutingAppCoveragesDeleteInstanceData, type RoutingAppCoveragesDeleteInstanceError, type RoutingAppCoveragesDeleteInstanceResponse, type SalesReportsGetCollectionData, type SalesReportsGetCollectionError, type SalesReportsGetCollectionResponse, type SandboxTestersV2GetCollectionData, type SandboxTestersV2GetCollectionError, type SandboxTestersV2GetCollectionResponse, type SandboxTestersV2UpdateInstanceData, type SandboxTestersV2UpdateInstanceError, type SandboxTestersV2UpdateInstanceResponse, type SandboxTestersClearPurchaseHistoryRequestV2CreateInstanceData, type SandboxTestersClearPurchaseHistoryRequestV2CreateInstanceError, type SandboxTestersClearPurchaseHistoryRequestV2CreateInstanceResponse, type ScmGitReferencesGetInstanceData, type ScmGitReferencesGetInstanceError, type ScmGitReferencesGetInstanceResponse, type ScmProvidersGetCollectionData, type ScmProvidersGetCollectionError, type ScmProvidersGetCollectionResponse, type ScmProvidersGetInstanceData, type ScmProvidersGetInstanceError, type ScmProvidersGetInstanceResponse, type ScmPullRequestsGetInstanceData, type ScmPullRequestsGetInstanceError, type ScmPullRequestsGetInstanceResponse, type ScmRepositoriesGetCollectionData, type ScmRepositoriesGetCollectionError, type ScmRepositoriesGetCollectionResponse, type ScmRepositoriesGetInstanceData, type ScmRepositoriesGetInstanceError, type ScmRepositoriesGetInstanceResponse, type SubscriptionAppStoreReviewScreenshotsCreateInstanceData, type SubscriptionAppStoreReviewScreenshotsCreateInstanceError, type SubscriptionAppStoreReviewScreenshotsCreateInstanceResponse, type SubscriptionAppStoreReviewScreenshotsGetInstanceData, type SubscriptionAppStoreReviewScreenshotsGetInstanceError, type SubscriptionAppStoreReviewScreenshotsGetInstanceResponse, type SubscriptionAppStoreReviewScreenshotsUpdateInstanceData, type SubscriptionAppStoreReviewScreenshotsUpdateInstanceError, type SubscriptionAppStoreReviewScreenshotsUpdateInstanceResponse, type SubscriptionAppStoreReviewScreenshotsDeleteInstanceData, type SubscriptionAppStoreReviewScreenshotsDeleteInstanceError, type SubscriptionAppStoreReviewScreenshotsDeleteInstanceResponse, type SubscriptionAvailabilitiesCreateInstanceData, type SubscriptionAvailabilitiesCreateInstanceError, type SubscriptionAvailabilitiesCreateInstanceResponse, type SubscriptionAvailabilitiesGetInstanceData, type SubscriptionAvailabilitiesGetInstanceError, type SubscriptionAvailabilitiesGetInstanceResponse, type SubscriptionGracePeriodsGetInstanceData, type SubscriptionGracePeriodsGetInstanceError, type SubscriptionGracePeriodsGetInstanceResponse, type SubscriptionGracePeriodsUpdateInstanceData, type SubscriptionGracePeriodsUpdateInstanceError, type SubscriptionGracePeriodsUpdateInstanceResponse, type SubscriptionGroupLocalizationsCreateInstanceData, type SubscriptionGroupLocalizationsCreateInstanceError, type SubscriptionGroupLocalizationsCreateInstanceResponse, type SubscriptionGroupLocalizationsGetInstanceData, type SubscriptionGroupLocalizationsGetInstanceError, type SubscriptionGroupLocalizationsGetInstanceResponse, type SubscriptionGroupLocalizationsUpdateInstanceData, type SubscriptionGroupLocalizationsUpdateInstanceError, type SubscriptionGroupLocalizationsUpdateInstanceResponse, type SubscriptionGroupLocalizationsDeleteInstanceData, type SubscriptionGroupLocalizationsDeleteInstanceError, type SubscriptionGroupLocalizationsDeleteInstanceResponse, type SubscriptionGroupSubmissionsCreateInstanceData, type SubscriptionGroupSubmissionsCreateInstanceError, type SubscriptionGroupSubmissionsCreateInstanceResponse, type SubscriptionGroupsCreateInstanceData, type SubscriptionGroupsCreateInstanceError, type SubscriptionGroupsCreateInstanceResponse, type SubscriptionGroupsGetInstanceData, type SubscriptionGroupsGetInstanceError, type SubscriptionGroupsGetInstanceResponse, type SubscriptionGroupsUpdateInstanceData, type SubscriptionGroupsUpdateInstanceError, type SubscriptionGroupsUpdateInstanceResponse, type SubscriptionGroupsDeleteInstanceData, type SubscriptionGroupsDeleteInstanceError, type SubscriptionGroupsDeleteInstanceResponse, type SubscriptionImagesCreateInstanceData, type SubscriptionImagesCreateInstanceError, type SubscriptionImagesCreateInstanceResponse, type SubscriptionImagesGetInstanceData, type SubscriptionImagesGetInstanceError, type SubscriptionImagesGetInstanceResponse, type SubscriptionImagesUpdateInstanceData, type SubscriptionImagesUpdateInstanceError, type SubscriptionImagesUpdateInstanceResponse, type SubscriptionImagesDeleteInstanceData, type SubscriptionImagesDeleteInstanceError, type SubscriptionImagesDeleteInstanceResponse, type SubscriptionIntroductoryOffersCreateInstanceData, type SubscriptionIntroductoryOffersCreateInstanceError, type SubscriptionIntroductoryOffersCreateInstanceResponse, type SubscriptionIntroductoryOffersUpdateInstanceData, type SubscriptionIntroductoryOffersUpdateInstanceError, type SubscriptionIntroductoryOffersUpdateInstanceResponse, type SubscriptionIntroductoryOffersDeleteInstanceData, type SubscriptionIntroductoryOffersDeleteInstanceError, type SubscriptionIntroductoryOffersDeleteInstanceResponse, type SubscriptionLocalizationsCreateInstanceData, type SubscriptionLocalizationsCreateInstanceError, type SubscriptionLocalizationsCreateInstanceResponse, type SubscriptionLocalizationsGetInstanceData, type SubscriptionLocalizationsGetInstanceError, type SubscriptionLocalizationsGetInstanceResponse, type SubscriptionLocalizationsUpdateInstanceData, type SubscriptionLocalizationsUpdateInstanceError, type SubscriptionLocalizationsUpdateInstanceResponse, type SubscriptionLocalizationsDeleteInstanceData, type SubscriptionLocalizationsDeleteInstanceError, type SubscriptionLocalizationsDeleteInstanceResponse, type SubscriptionOfferCodeCustomCodesCreateInstanceData, type SubscriptionOfferCodeCustomCodesCreateInstanceError, type SubscriptionOfferCodeCustomCodesCreateInstanceResponse, type SubscriptionOfferCodeCustomCodesGetInstanceData, type SubscriptionOfferCodeCustomCodesGetInstanceError, type SubscriptionOfferCodeCustomCodesGetInstanceResponse, type SubscriptionOfferCodeCustomCodesUpdateInstanceData, type SubscriptionOfferCodeCustomCodesUpdateInstanceError, type SubscriptionOfferCodeCustomCodesUpdateInstanceResponse, type SubscriptionOfferCodeOneTimeUseCodesCreateInstanceData, type SubscriptionOfferCodeOneTimeUseCodesCreateInstanceError, type SubscriptionOfferCodeOneTimeUseCodesCreateInstanceResponse, type SubscriptionOfferCodeOneTimeUseCodesGetInstanceData, type SubscriptionOfferCodeOneTimeUseCodesGetInstanceError, type SubscriptionOfferCodeOneTimeUseCodesGetInstanceResponse, type SubscriptionOfferCodeOneTimeUseCodesUpdateInstanceData, type SubscriptionOfferCodeOneTimeUseCodesUpdateInstanceError, type SubscriptionOfferCodeOneTimeUseCodesUpdateInstanceResponse, type SubscriptionOfferCodesCreateInstanceData, type SubscriptionOfferCodesCreateInstanceError, type SubscriptionOfferCodesCreateInstanceResponse, type SubscriptionOfferCodesGetInstanceData, type SubscriptionOfferCodesGetInstanceError, type SubscriptionOfferCodesGetInstanceResponse, type SubscriptionOfferCodesUpdateInstanceData, type SubscriptionOfferCodesUpdateInstanceError, type SubscriptionOfferCodesUpdateInstanceResponse, type SubscriptionPricePointsGetInstanceData, type SubscriptionPricePointsGetInstanceError, type SubscriptionPricePointsGetInstanceResponse, type SubscriptionPricesCreateInstanceData, type SubscriptionPricesCreateInstanceError, type SubscriptionPricesCreateInstanceResponse, type SubscriptionPricesDeleteInstanceData, type SubscriptionPricesDeleteInstanceError, type SubscriptionPricesDeleteInstanceResponse, type SubscriptionPromotionalOffersCreateInstanceData, type SubscriptionPromotionalOffersCreateInstanceError, type SubscriptionPromotionalOffersCreateInstanceResponse, type SubscriptionPromotionalOffersGetInstanceData, type SubscriptionPromotionalOffersGetInstanceError, type SubscriptionPromotionalOffersGetInstanceResponse, type SubscriptionPromotionalOffersUpdateInstanceData, type SubscriptionPromotionalOffersUpdateInstanceError, type SubscriptionPromotionalOffersUpdateInstanceResponse, type SubscriptionPromotionalOffersDeleteInstanceData, type SubscriptionPromotionalOffersDeleteInstanceError, type SubscriptionPromotionalOffersDeleteInstanceResponse, type SubscriptionSubmissionsCreateInstanceData, type SubscriptionSubmissionsCreateInstanceError, type SubscriptionSubmissionsCreateInstanceResponse, type SubscriptionsCreateInstanceData, type SubscriptionsCreateInstanceError, type SubscriptionsCreateInstanceResponse, type SubscriptionsGetInstanceData, type SubscriptionsGetInstanceError, type SubscriptionsGetInstanceResponse, type SubscriptionsUpdateInstanceData, type SubscriptionsUpdateInstanceError, type SubscriptionsUpdateInstanceResponse, type SubscriptionsDeleteInstanceData, type SubscriptionsDeleteInstanceError, type SubscriptionsDeleteInstanceResponse, type TerritoriesGetCollectionData, type TerritoriesGetCollectionError, type TerritoriesGetCollectionResponse, type TerritoryAvailabilitiesUpdateInstanceData, type TerritoryAvailabilitiesUpdateInstanceError, type TerritoryAvailabilitiesUpdateInstanceResponse, type UserInvitationsGetCollectionData, type UserInvitationsGetCollectionError, type UserInvitationsGetCollectionResponse, type UserInvitationsCreateInstanceData, type UserInvitationsCreateInstanceError, type UserInvitationsCreateInstanceResponse, type UserInvitationsGetInstanceData, type UserInvitationsGetInstanceError, type UserInvitationsGetInstanceResponse, type UserInvitationsDeleteInstanceData, type UserInvitationsDeleteInstanceError, type UserInvitationsDeleteInstanceResponse, type UsersGetCollectionData, type UsersGetCollectionError, type UsersGetCollectionResponse, type UsersGetInstanceData, type UsersGetInstanceError, type UsersGetInstanceResponse, type UsersUpdateInstanceData, type UsersUpdateInstanceError, type UsersUpdateInstanceResponse, type UsersDeleteInstanceData, type UsersDeleteInstanceError, type UsersDeleteInstanceResponse, type WinBackOffersCreateInstanceData, type WinBackOffersCreateInstanceError, type WinBackOffersCreateInstanceResponse, type WinBackOffersGetInstanceData, type WinBackOffersGetInstanceError, type WinBackOffersGetInstanceResponse, type WinBackOffersUpdateInstanceData, type WinBackOffersUpdateInstanceError, type WinBackOffersUpdateInstanceResponse, type WinBackOffersDeleteInstanceData, type WinBackOffersDeleteInstanceError, type WinBackOffersDeleteInstanceResponse, type AlternativeDistributionPackageVersionsDeltasGetToManyRelatedData, type AlternativeDistributionPackageVersionsDeltasGetToManyRelatedError, type AlternativeDistributionPackageVersionsDeltasGetToManyRelatedResponse, type AlternativeDistributionPackageVersionsVariantsGetToManyRelatedData, type AlternativeDistributionPackageVersionsVariantsGetToManyRelatedError, type AlternativeDistributionPackageVersionsVariantsGetToManyRelatedResponse, type AlternativeDistributionPackagesVersionsGetToManyRelatedData, type AlternativeDistributionPackagesVersionsGetToManyRelatedError, type AlternativeDistributionPackagesVersionsGetToManyRelatedResponse, type AnalyticsReportInstancesSegmentsGetToManyRelatedData, type AnalyticsReportInstancesSegmentsGetToManyRelatedError, type AnalyticsReportInstancesSegmentsGetToManyRelatedResponse, type AnalyticsReportRequestsReportsGetToManyRelatedData, type AnalyticsReportRequestsReportsGetToManyRelatedError, type AnalyticsReportRequestsReportsGetToManyRelatedResponse, type AnalyticsReportsInstancesGetToManyRelatedData, type AnalyticsReportsInstancesGetToManyRelatedError, type AnalyticsReportsInstancesGetToManyRelatedResponse, type AppAvailabilitiesV2TerritoryAvailabilitiesGetToManyRelatedData, type AppAvailabilitiesV2TerritoryAvailabilitiesGetToManyRelatedError, type AppAvailabilitiesV2TerritoryAvailabilitiesGetToManyRelatedResponse, type AppCategoriesParentGetToOneRelatedData, type AppCategoriesParentGetToOneRelatedError, type AppCategoriesParentGetToOneRelatedResponse, type AppCategoriesSubcategoriesGetToManyRelatedData, type AppCategoriesSubcategoriesGetToManyRelatedError, type AppCategoriesSubcategoriesGetToManyRelatedResponse, type AppClipDefaultExperienceLocalizationsAppClipHeaderImageGetToOneRelatedData, type AppClipDefaultExperienceLocalizationsAppClipHeaderImageGetToOneRelatedError, type AppClipDefaultExperienceLocalizationsAppClipHeaderImageGetToOneRelatedResponse, type AppClipDefaultExperiencesAppClipAppStoreReviewDetailGetToOneRelatedData, type AppClipDefaultExperiencesAppClipAppStoreReviewDetailGetToOneRelatedError, type AppClipDefaultExperiencesAppClipAppStoreReviewDetailGetToOneRelatedResponse, type AppClipDefaultExperiencesAppClipDefaultExperienceLocalizationsGetToManyRelatedData, type AppClipDefaultExperiencesAppClipDefaultExperienceLocalizationsGetToManyRelatedError, type AppClipDefaultExperiencesAppClipDefaultExperienceLocalizationsGetToManyRelatedResponse, type AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelationshipData, type AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelationshipError, type AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelationshipResponse, type AppClipDefaultExperiencesReleaseWithAppStoreVersionUpdateToOneRelationshipData, type AppClipDefaultExperiencesReleaseWithAppStoreVersionUpdateToOneRelationshipError, type AppClipDefaultExperiencesReleaseWithAppStoreVersionUpdateToOneRelationshipResponse, type AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelatedData, type AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelatedError, type AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelatedResponse, type AppClipsAppClipAdvancedExperiencesGetToManyRelatedData, type AppClipsAppClipAdvancedExperiencesGetToManyRelatedError, type AppClipsAppClipAdvancedExperiencesGetToManyRelatedResponse, type AppClipsAppClipDefaultExperiencesGetToManyRelatedData, type AppClipsAppClipDefaultExperiencesGetToManyRelatedError, type AppClipsAppClipDefaultExperiencesGetToManyRelatedResponse, type AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedData, type AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedError, type AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedResponse, type AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedData, type AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedError, type AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedResponse, type AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedData, type AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedError, type AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedResponse, type AppCustomProductPagesAppCustomProductPageVersionsGetToManyRelatedData, type AppCustomProductPagesAppCustomProductPageVersionsGetToManyRelatedError, type AppCustomProductPagesAppCustomProductPageVersionsGetToManyRelatedResponse, type AppEncryptionDeclarationsAppGetToOneRelatedData, type AppEncryptionDeclarationsAppGetToOneRelatedError, type AppEncryptionDeclarationsAppGetToOneRelatedResponse, type AppEncryptionDeclarationsAppEncryptionDeclarationDocumentGetToOneRelatedData, type AppEncryptionDeclarationsAppEncryptionDeclarationDocumentGetToOneRelatedError, type AppEncryptionDeclarationsAppEncryptionDeclarationDocumentGetToOneRelatedResponse, type AppEncryptionDeclarationsBuildsCreateToManyRelationshipData, type AppEncryptionDeclarationsBuildsCreateToManyRelationshipError, type AppEncryptionDeclarationsBuildsCreateToManyRelationshipResponse, type AppEventLocalizationsAppEventScreenshotsGetToManyRelatedData, type AppEventLocalizationsAppEventScreenshotsGetToManyRelatedError, type AppEventLocalizationsAppEventScreenshotsGetToManyRelatedResponse, type AppEventLocalizationsAppEventVideoClipsGetToManyRelatedData, type AppEventLocalizationsAppEventVideoClipsGetToManyRelatedError, type AppEventLocalizationsAppEventVideoClipsGetToManyRelatedResponse, type AppEventsLocalizationsGetToManyRelatedData, type AppEventsLocalizationsGetToManyRelatedError, type AppEventsLocalizationsGetToManyRelatedResponse, type AppInfosAgeRatingDeclarationGetToOneRelatedData, type AppInfosAgeRatingDeclarationGetToOneRelatedError, type AppInfosAgeRatingDeclarationGetToOneRelatedResponse, type AppInfosAppInfoLocalizationsGetToManyRelatedData, type AppInfosAppInfoLocalizationsGetToManyRelatedError, type AppInfosAppInfoLocalizationsGetToManyRelatedResponse, type AppInfosPrimaryCategoryGetToOneRelatedData, type AppInfosPrimaryCategoryGetToOneRelatedError, type AppInfosPrimaryCategoryGetToOneRelatedResponse, type AppInfosPrimarySubcategoryOneGetToOneRelatedData, type AppInfosPrimarySubcategoryOneGetToOneRelatedError, type AppInfosPrimarySubcategoryOneGetToOneRelatedResponse, type AppInfosPrimarySubcategoryTwoGetToOneRelatedData, type AppInfosPrimarySubcategoryTwoGetToOneRelatedError, type AppInfosPrimarySubcategoryTwoGetToOneRelatedResponse, type AppInfosSecondaryCategoryGetToOneRelatedData, type AppInfosSecondaryCategoryGetToOneRelatedError, type AppInfosSecondaryCategoryGetToOneRelatedResponse, type AppInfosSecondarySubcategoryOneGetToOneRelatedData, type AppInfosSecondarySubcategoryOneGetToOneRelatedError, type AppInfosSecondarySubcategoryOneGetToOneRelatedResponse, type AppInfosSecondarySubcategoryTwoGetToOneRelatedData, type AppInfosSecondarySubcategoryTwoGetToOneRelatedError, type AppInfosSecondarySubcategoryTwoGetToOneRelatedResponse, type AppPreviewSetsAppPreviewsGetToManyRelationshipData, type AppPreviewSetsAppPreviewsGetToManyRelationshipError, type AppPreviewSetsAppPreviewsGetToManyRelationshipResponse, type AppPreviewSetsAppPreviewsReplaceToManyRelationshipData, type AppPreviewSetsAppPreviewsReplaceToManyRelationshipError, type AppPreviewSetsAppPreviewsReplaceToManyRelationshipResponse, type AppPreviewSetsAppPreviewsGetToManyRelatedData, type AppPreviewSetsAppPreviewsGetToManyRelatedError, type AppPreviewSetsAppPreviewsGetToManyRelatedResponse, type AppPricePointsV3EqualizationsGetToManyRelatedData, type AppPricePointsV3EqualizationsGetToManyRelatedError, type AppPricePointsV3EqualizationsGetToManyRelatedResponse, type AppPriceSchedulesAutomaticPricesGetToManyRelatedData, type AppPriceSchedulesAutomaticPricesGetToManyRelatedError, type AppPriceSchedulesAutomaticPricesGetToManyRelatedResponse, type AppPriceSchedulesBaseTerritoryGetToOneRelatedData, type AppPriceSchedulesBaseTerritoryGetToOneRelatedError, type AppPriceSchedulesBaseTerritoryGetToOneRelatedResponse, type AppPriceSchedulesManualPricesGetToManyRelatedData, type AppPriceSchedulesManualPricesGetToManyRelatedError, type AppPriceSchedulesManualPricesGetToManyRelatedResponse, type AppScreenshotSetsAppScreenshotsGetToManyRelationshipData, type AppScreenshotSetsAppScreenshotsGetToManyRelationshipError, type AppScreenshotSetsAppScreenshotsGetToManyRelationshipResponse, type AppScreenshotSetsAppScreenshotsReplaceToManyRelationshipData, type AppScreenshotSetsAppScreenshotsReplaceToManyRelationshipError, type AppScreenshotSetsAppScreenshotsReplaceToManyRelationshipResponse, type AppScreenshotSetsAppScreenshotsGetToManyRelatedData, type AppScreenshotSetsAppScreenshotsGetToManyRelatedError, type AppScreenshotSetsAppScreenshotsGetToManyRelatedResponse, type AppStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelatedData, type AppStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelatedError, type AppStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelatedResponse, type AppStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelatedData, type AppStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelatedError, type AppStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelatedResponse, type AppStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelatedData, type AppStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelatedError, type AppStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelatedResponse, type AppStoreVersionExperimentTreatmentsAppStoreVersionExperimentTreatmentLocalizationsGetToManyRelatedData, type AppStoreVersionExperimentTreatmentsAppStoreVersionExperimentTreatmentLocalizationsGetToManyRelatedError, type AppStoreVersionExperimentTreatmentsAppStoreVersionExperimentTreatmentLocalizationsGetToManyRelatedResponse, type AppStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelatedData, type AppStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelatedError, type AppStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelatedResponse, type AppStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelatedData, type AppStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelatedError, type AppStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelatedResponse, type AppStoreVersionLocalizationsAppPreviewSetsGetToManyRelatedData, type AppStoreVersionLocalizationsAppPreviewSetsGetToManyRelatedError, type AppStoreVersionLocalizationsAppPreviewSetsGetToManyRelatedResponse, type AppStoreVersionLocalizationsAppScreenshotSetsGetToManyRelatedData, type AppStoreVersionLocalizationsAppScreenshotSetsGetToManyRelatedError, type AppStoreVersionLocalizationsAppScreenshotSetsGetToManyRelatedResponse, type AppStoreVersionsAgeRatingDeclarationGetToOneRelatedData, type AppStoreVersionsAgeRatingDeclarationGetToOneRelatedError, type AppStoreVersionsAgeRatingDeclarationGetToOneRelatedResponse, type AppStoreVersionsAlternativeDistributionPackageGetToOneRelatedData, type AppStoreVersionsAlternativeDistributionPackageGetToOneRelatedError, type AppStoreVersionsAlternativeDistributionPackageGetToOneRelatedResponse, type AppStoreVersionsAppClipDefaultExperienceGetToOneRelationshipData, type AppStoreVersionsAppClipDefaultExperienceGetToOneRelationshipError, type AppStoreVersionsAppClipDefaultExperienceGetToOneRelationshipResponse, type AppStoreVersionsAppClipDefaultExperienceUpdateToOneRelationshipData, type AppStoreVersionsAppClipDefaultExperienceUpdateToOneRelationshipError, type AppStoreVersionsAppClipDefaultExperienceUpdateToOneRelationshipResponse, type AppStoreVersionsAppClipDefaultExperienceGetToOneRelatedData, type AppStoreVersionsAppClipDefaultExperienceGetToOneRelatedError, type AppStoreVersionsAppClipDefaultExperienceGetToOneRelatedResponse, type AppStoreVersionsAppStoreReviewDetailGetToOneRelatedData, type AppStoreVersionsAppStoreReviewDetailGetToOneRelatedError, type AppStoreVersionsAppStoreReviewDetailGetToOneRelatedResponse, type AppStoreVersionsAppStoreVersionExperimentsGetToManyRelatedData, type AppStoreVersionsAppStoreVersionExperimentsGetToManyRelatedError, type AppStoreVersionsAppStoreVersionExperimentsGetToManyRelatedResponse, type AppStoreVersionsAppStoreVersionExperimentsV2GetToManyRelatedData, type AppStoreVersionsAppStoreVersionExperimentsV2GetToManyRelatedError, type AppStoreVersionsAppStoreVersionExperimentsV2GetToManyRelatedResponse, type AppStoreVersionsAppStoreVersionLocalizationsGetToManyRelatedData, type AppStoreVersionsAppStoreVersionLocalizationsGetToManyRelatedError, type AppStoreVersionsAppStoreVersionLocalizationsGetToManyRelatedResponse, type AppStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelatedData, type AppStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelatedError, type AppStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelatedResponse, type AppStoreVersionsAppStoreVersionSubmissionGetToOneRelatedData, type AppStoreVersionsAppStoreVersionSubmissionGetToOneRelatedError, type AppStoreVersionsAppStoreVersionSubmissionGetToOneRelatedResponse, type AppStoreVersionsBuildGetToOneRelationshipData, type AppStoreVersionsBuildGetToOneRelationshipError, type AppStoreVersionsBuildGetToOneRelationshipResponse, type AppStoreVersionsBuildUpdateToOneRelationshipData, type AppStoreVersionsBuildUpdateToOneRelationshipError, type AppStoreVersionsBuildUpdateToOneRelationshipResponse, type AppStoreVersionsBuildGetToOneRelatedData, type AppStoreVersionsBuildGetToOneRelatedError, type AppStoreVersionsBuildGetToOneRelatedResponse, type AppStoreVersionsCustomerReviewsGetToManyRelatedData, type AppStoreVersionsCustomerReviewsGetToManyRelatedError, type AppStoreVersionsCustomerReviewsGetToManyRelatedResponse, type AppStoreVersionsGameCenterAppVersionGetToOneRelatedData, type AppStoreVersionsGameCenterAppVersionGetToOneRelatedError, type AppStoreVersionsGameCenterAppVersionGetToOneRelatedResponse, type AppStoreVersionsRoutingAppCoverageGetToOneRelatedData, type AppStoreVersionsRoutingAppCoverageGetToOneRelatedError, type AppStoreVersionsRoutingAppCoverageGetToOneRelatedResponse, type AppsAlternativeDistributionKeyGetToOneRelatedData, type AppsAlternativeDistributionKeyGetToOneRelatedError, type AppsAlternativeDistributionKeyGetToOneRelatedResponse, type AppsAnalyticsReportRequestsGetToManyRelatedData, type AppsAnalyticsReportRequestsGetToManyRelatedError, type AppsAnalyticsReportRequestsGetToManyRelatedResponse, type AppsAppAvailabilityV2GetToOneRelatedData, type AppsAppAvailabilityV2GetToOneRelatedError, type AppsAppAvailabilityV2GetToOneRelatedResponse, type AppsAppClipsGetToManyRelatedData, type AppsAppClipsGetToManyRelatedError, type AppsAppClipsGetToManyRelatedResponse, type AppsAppCustomProductPagesGetToManyRelatedData, type AppsAppCustomProductPagesGetToManyRelatedError, type AppsAppCustomProductPagesGetToManyRelatedResponse, type AppsAppEncryptionDeclarationsGetToManyRelatedData, type AppsAppEncryptionDeclarationsGetToManyRelatedError, type AppsAppEncryptionDeclarationsGetToManyRelatedResponse, type AppsAppEventsGetToManyRelatedData, type AppsAppEventsGetToManyRelatedError, type AppsAppEventsGetToManyRelatedResponse, type AppsAppInfosGetToManyRelatedData, type AppsAppInfosGetToManyRelatedError, type AppsAppInfosGetToManyRelatedResponse, type AppsAppPricePointsGetToManyRelatedData, type AppsAppPricePointsGetToManyRelatedError, type AppsAppPricePointsGetToManyRelatedResponse, type AppsAppPriceScheduleGetToOneRelatedData, type AppsAppPriceScheduleGetToOneRelatedError, type AppsAppPriceScheduleGetToOneRelatedResponse, type AppsAppStoreVersionExperimentsV2GetToManyRelatedData, type AppsAppStoreVersionExperimentsV2GetToManyRelatedError, type AppsAppStoreVersionExperimentsV2GetToManyRelatedResponse, type AppsAppStoreVersionsGetToManyRelatedData, type AppsAppStoreVersionsGetToManyRelatedError, type AppsAppStoreVersionsGetToManyRelatedResponse, type AppsBetaAppLocalizationsGetToManyRelatedData, type AppsBetaAppLocalizationsGetToManyRelatedError, type AppsBetaAppLocalizationsGetToManyRelatedResponse, type AppsBetaAppReviewDetailGetToOneRelatedData, type AppsBetaAppReviewDetailGetToOneRelatedError, type AppsBetaAppReviewDetailGetToOneRelatedResponse, type AppsBetaGroupsGetToManyRelatedData, type AppsBetaGroupsGetToManyRelatedError, type AppsBetaGroupsGetToManyRelatedResponse, type AppsBetaLicenseAgreementGetToOneRelatedData, type AppsBetaLicenseAgreementGetToOneRelatedError, type AppsBetaLicenseAgreementGetToOneRelatedResponse, type AppsBetaTestersDeleteToManyRelationshipData, type AppsBetaTestersDeleteToManyRelationshipError, type AppsBetaTestersDeleteToManyRelationshipResponse, type AppsBuildsGetToManyRelatedData, type AppsBuildsGetToManyRelatedError, type AppsBuildsGetToManyRelatedResponse, type AppsCiProductGetToOneRelatedData, type AppsCiProductGetToOneRelatedError, type AppsCiProductGetToOneRelatedResponse, type AppsCustomerReviewsGetToManyRelatedData, type AppsCustomerReviewsGetToManyRelatedError, type AppsCustomerReviewsGetToManyRelatedResponse, type AppsEndUserLicenseAgreementGetToOneRelatedData, type AppsEndUserLicenseAgreementGetToOneRelatedError, type AppsEndUserLicenseAgreementGetToOneRelatedResponse, type AppsGameCenterDetailGetToOneRelatedData, type AppsGameCenterDetailGetToOneRelatedError, type AppsGameCenterDetailGetToOneRelatedResponse, type AppsGameCenterEnabledVersionsGetToManyRelatedData, type AppsGameCenterEnabledVersionsGetToManyRelatedError, type AppsGameCenterEnabledVersionsGetToManyRelatedResponse, type AppsInAppPurchasesGetToManyRelatedData, type AppsInAppPurchasesGetToManyRelatedError, type AppsInAppPurchasesGetToManyRelatedResponse, type AppsInAppPurchasesV2GetToManyRelatedData, type AppsInAppPurchasesV2GetToManyRelatedError, type AppsInAppPurchasesV2GetToManyRelatedResponse, type AppsMarketplaceSearchDetailGetToOneRelatedData, type AppsMarketplaceSearchDetailGetToOneRelatedError, type AppsMarketplaceSearchDetailGetToOneRelatedResponse, type AppsPerfPowerMetricsGetToManyRelatedData, type AppsPerfPowerMetricsGetToManyRelatedError, type AppsPerfPowerMetricsGetToManyRelatedResponse, type AppsPreReleaseVersionsGetToManyRelatedData, type AppsPreReleaseVersionsGetToManyRelatedError, type AppsPreReleaseVersionsGetToManyRelatedResponse, type AppsPromotedPurchasesGetToManyRelationshipData, type AppsPromotedPurchasesGetToManyRelationshipError, type AppsPromotedPurchasesGetToManyRelationshipResponse, type AppsPromotedPurchasesReplaceToManyRelationshipData, type AppsPromotedPurchasesReplaceToManyRelationshipError, type AppsPromotedPurchasesReplaceToManyRelationshipResponse, type AppsPromotedPurchasesGetToManyRelatedData, type AppsPromotedPurchasesGetToManyRelatedError, type AppsPromotedPurchasesGetToManyRelatedResponse, type AppsReviewSubmissionsGetToManyRelatedData, type AppsReviewSubmissionsGetToManyRelatedError, type AppsReviewSubmissionsGetToManyRelatedResponse, type AppsSubscriptionGracePeriodGetToOneRelatedData, type AppsSubscriptionGracePeriodGetToOneRelatedError, type AppsSubscriptionGracePeriodGetToOneRelatedResponse, type AppsSubscriptionGroupsGetToManyRelatedData, type AppsSubscriptionGroupsGetToManyRelatedError, type AppsSubscriptionGroupsGetToManyRelatedResponse, type BetaAppLocalizationsAppGetToOneRelatedData, type BetaAppLocalizationsAppGetToOneRelatedError, type BetaAppLocalizationsAppGetToOneRelatedResponse, type BetaAppReviewDetailsAppGetToOneRelatedData, type BetaAppReviewDetailsAppGetToOneRelatedError, type BetaAppReviewDetailsAppGetToOneRelatedResponse, type BetaAppReviewSubmissionsBuildGetToOneRelatedData, type BetaAppReviewSubmissionsBuildGetToOneRelatedError, type BetaAppReviewSubmissionsBuildGetToOneRelatedResponse, type BetaBuildLocalizationsBuildGetToOneRelatedData, type BetaBuildLocalizationsBuildGetToOneRelatedError, type BetaBuildLocalizationsBuildGetToOneRelatedResponse, type BetaGroupsAppGetToOneRelatedData, type BetaGroupsAppGetToOneRelatedError, type BetaGroupsAppGetToOneRelatedResponse, type BetaGroupsBetaRecruitmentCriteriaGetToOneRelatedData, type BetaGroupsBetaRecruitmentCriteriaGetToOneRelatedError, type BetaGroupsBetaRecruitmentCriteriaGetToOneRelatedResponse, type BetaGroupsBetaRecruitmentCriterionCompatibleBuildCheckGetToOneRelatedData, type BetaGroupsBetaRecruitmentCriterionCompatibleBuildCheckGetToOneRelatedError, type BetaGroupsBetaRecruitmentCriterionCompatibleBuildCheckGetToOneRelatedResponse, type BetaGroupsBetaTestersGetToManyRelationshipData, type BetaGroupsBetaTestersGetToManyRelationshipError, type BetaGroupsBetaTestersGetToManyRelationshipResponse, type BetaGroupsBetaTestersCreateToManyRelationshipData, type BetaGroupsBetaTestersCreateToManyRelationshipError, type BetaGroupsBetaTestersCreateToManyRelationshipResponse, type BetaGroupsBetaTestersDeleteToManyRelationshipData, type BetaGroupsBetaTestersDeleteToManyRelationshipError, type BetaGroupsBetaTestersDeleteToManyRelationshipResponse, type BetaGroupsBetaTestersGetToManyRelatedData, type BetaGroupsBetaTestersGetToManyRelatedError, type BetaGroupsBetaTestersGetToManyRelatedResponse, type BetaGroupsBuildsGetToManyRelationshipData, type BetaGroupsBuildsGetToManyRelationshipError, type BetaGroupsBuildsGetToManyRelationshipResponse, type BetaGroupsBuildsCreateToManyRelationshipData, type BetaGroupsBuildsCreateToManyRelationshipError, type BetaGroupsBuildsCreateToManyRelationshipResponse, type BetaGroupsBuildsDeleteToManyRelationshipData, type BetaGroupsBuildsDeleteToManyRelationshipError, type BetaGroupsBuildsDeleteToManyRelationshipResponse, type BetaGroupsBuildsGetToManyRelatedData, type BetaGroupsBuildsGetToManyRelatedError, type BetaGroupsBuildsGetToManyRelatedResponse, type BetaLicenseAgreementsAppGetToOneRelatedData, type BetaLicenseAgreementsAppGetToOneRelatedError, type BetaLicenseAgreementsAppGetToOneRelatedResponse, type BetaTestersAppsGetToManyRelationshipData, type BetaTestersAppsGetToManyRelationshipError, type BetaTestersAppsGetToManyRelationshipResponse, type BetaTestersAppsDeleteToManyRelationshipData, type BetaTestersAppsDeleteToManyRelationshipError, type BetaTestersAppsDeleteToManyRelationshipResponse, type BetaTestersAppsGetToManyRelatedData, type BetaTestersAppsGetToManyRelatedError, type BetaTestersAppsGetToManyRelatedResponse, type BetaTestersBetaGroupsGetToManyRelationshipData, type BetaTestersBetaGroupsGetToManyRelationshipError, type BetaTestersBetaGroupsGetToManyRelationshipResponse, type BetaTestersBetaGroupsCreateToManyRelationshipData, type BetaTestersBetaGroupsCreateToManyRelationshipError, type BetaTestersBetaGroupsCreateToManyRelationshipResponse, type BetaTestersBetaGroupsDeleteToManyRelationshipData, type BetaTestersBetaGroupsDeleteToManyRelationshipError, type BetaTestersBetaGroupsDeleteToManyRelationshipResponse, type BetaTestersBetaGroupsGetToManyRelatedData, type BetaTestersBetaGroupsGetToManyRelatedError, type BetaTestersBetaGroupsGetToManyRelatedResponse, type BetaTestersBuildsGetToManyRelationshipData, type BetaTestersBuildsGetToManyRelationshipError, type BetaTestersBuildsGetToManyRelationshipResponse, type BetaTestersBuildsCreateToManyRelationshipData, type BetaTestersBuildsCreateToManyRelationshipError, type BetaTestersBuildsCreateToManyRelationshipResponse, type BetaTestersBuildsDeleteToManyRelationshipData, type BetaTestersBuildsDeleteToManyRelationshipError, type BetaTestersBuildsDeleteToManyRelationshipResponse, type BetaTestersBuildsGetToManyRelatedData, type BetaTestersBuildsGetToManyRelatedError, type BetaTestersBuildsGetToManyRelatedResponse, type BuildBetaDetailsBuildGetToOneRelatedData, type BuildBetaDetailsBuildGetToOneRelatedError, type BuildBetaDetailsBuildGetToOneRelatedResponse, type BuildBundlesAppClipDomainCacheStatusGetToOneRelatedData, type BuildBundlesAppClipDomainCacheStatusGetToOneRelatedError, type BuildBundlesAppClipDomainCacheStatusGetToOneRelatedResponse, type BuildBundlesAppClipDomainDebugStatusGetToOneRelatedData, type BuildBundlesAppClipDomainDebugStatusGetToOneRelatedError, type BuildBundlesAppClipDomainDebugStatusGetToOneRelatedResponse, type BuildBundlesBetaAppClipInvocationsGetToManyRelatedData, type BuildBundlesBetaAppClipInvocationsGetToManyRelatedError, type BuildBundlesBetaAppClipInvocationsGetToManyRelatedResponse, type BuildBundlesBuildBundleFileSizesGetToManyRelatedData, type BuildBundlesBuildBundleFileSizesGetToManyRelatedError, type BuildBundlesBuildBundleFileSizesGetToManyRelatedResponse, type BuildsAppGetToOneRelatedData, type BuildsAppGetToOneRelatedError, type BuildsAppGetToOneRelatedResponse, type BuildsAppEncryptionDeclarationGetToOneRelationshipData, type BuildsAppEncryptionDeclarationGetToOneRelationshipError, type BuildsAppEncryptionDeclarationGetToOneRelationshipResponse, type BuildsAppEncryptionDeclarationUpdateToOneRelationshipData, type BuildsAppEncryptionDeclarationUpdateToOneRelationshipError, type BuildsAppEncryptionDeclarationUpdateToOneRelationshipResponse, type BuildsAppEncryptionDeclarationGetToOneRelatedData, type BuildsAppEncryptionDeclarationGetToOneRelatedError, type BuildsAppEncryptionDeclarationGetToOneRelatedResponse, type BuildsAppStoreVersionGetToOneRelatedData, type BuildsAppStoreVersionGetToOneRelatedError, type BuildsAppStoreVersionGetToOneRelatedResponse, type BuildsBetaAppReviewSubmissionGetToOneRelatedData, type BuildsBetaAppReviewSubmissionGetToOneRelatedError, type BuildsBetaAppReviewSubmissionGetToOneRelatedResponse, type BuildsBetaBuildLocalizationsGetToManyRelatedData, type BuildsBetaBuildLocalizationsGetToManyRelatedError, type BuildsBetaBuildLocalizationsGetToManyRelatedResponse, type BuildsBetaGroupsCreateToManyRelationshipData, type BuildsBetaGroupsCreateToManyRelationshipError, type BuildsBetaGroupsCreateToManyRelationshipResponse, type BuildsBetaGroupsDeleteToManyRelationshipData, type BuildsBetaGroupsDeleteToManyRelationshipError, type BuildsBetaGroupsDeleteToManyRelationshipResponse, type BuildsBuildBetaDetailGetToOneRelatedData, type BuildsBuildBetaDetailGetToOneRelatedError, type BuildsBuildBetaDetailGetToOneRelatedResponse, type BuildsDiagnosticSignaturesGetToManyRelatedData, type BuildsDiagnosticSignaturesGetToManyRelatedError, type BuildsDiagnosticSignaturesGetToManyRelatedResponse, type BuildsIconsGetToManyRelatedData, type BuildsIconsGetToManyRelatedError, type BuildsIconsGetToManyRelatedResponse, type BuildsIndividualTestersGetToManyRelationshipData, type BuildsIndividualTestersGetToManyRelationshipError, type BuildsIndividualTestersGetToManyRelationshipResponse, type BuildsIndividualTestersCreateToManyRelationshipData, type BuildsIndividualTestersCreateToManyRelationshipError, type BuildsIndividualTestersCreateToManyRelationshipResponse, type BuildsIndividualTestersDeleteToManyRelationshipData, type BuildsIndividualTestersDeleteToManyRelationshipError, type BuildsIndividualTestersDeleteToManyRelationshipResponse, type BuildsIndividualTestersGetToManyRelatedData, type BuildsIndividualTestersGetToManyRelatedError, type BuildsIndividualTestersGetToManyRelatedResponse, type BuildsPerfPowerMetricsGetToManyRelatedData, type BuildsPerfPowerMetricsGetToManyRelatedError, type BuildsPerfPowerMetricsGetToManyRelatedResponse, type BuildsPreReleaseVersionGetToOneRelatedData, type BuildsPreReleaseVersionGetToOneRelatedError, type BuildsPreReleaseVersionGetToOneRelatedResponse, type BundleIdsAppGetToOneRelatedData, type BundleIdsAppGetToOneRelatedError, type BundleIdsAppGetToOneRelatedResponse, type BundleIdsBundleIdCapabilitiesGetToManyRelatedData, type BundleIdsBundleIdCapabilitiesGetToManyRelatedError, type BundleIdsBundleIdCapabilitiesGetToManyRelatedResponse, type BundleIdsProfilesGetToManyRelatedData, type BundleIdsProfilesGetToManyRelatedError, type BundleIdsProfilesGetToManyRelatedResponse, type CiBuildActionsArtifactsGetToManyRelatedData, type CiBuildActionsArtifactsGetToManyRelatedError, type CiBuildActionsArtifactsGetToManyRelatedResponse, type CiBuildActionsBuildRunGetToOneRelatedData, type CiBuildActionsBuildRunGetToOneRelatedError, type CiBuildActionsBuildRunGetToOneRelatedResponse, type CiBuildActionsIssuesGetToManyRelatedData, type CiBuildActionsIssuesGetToManyRelatedError, type CiBuildActionsIssuesGetToManyRelatedResponse, type CiBuildActionsTestResultsGetToManyRelatedData, type CiBuildActionsTestResultsGetToManyRelatedError, type CiBuildActionsTestResultsGetToManyRelatedResponse, type CiBuildRunsActionsGetToManyRelatedData, type CiBuildRunsActionsGetToManyRelatedError, type CiBuildRunsActionsGetToManyRelatedResponse, type CiBuildRunsBuildsGetToManyRelatedData, type CiBuildRunsBuildsGetToManyRelatedError, type CiBuildRunsBuildsGetToManyRelatedResponse, type CiMacOsVersionsXcodeVersionsGetToManyRelatedData, type CiMacOsVersionsXcodeVersionsGetToManyRelatedError, type CiMacOsVersionsXcodeVersionsGetToManyRelatedResponse, type CiProductsAdditionalRepositoriesGetToManyRelatedData, type CiProductsAdditionalRepositoriesGetToManyRelatedError, type CiProductsAdditionalRepositoriesGetToManyRelatedResponse, type CiProductsAppGetToOneRelatedData, type CiProductsAppGetToOneRelatedError, type CiProductsAppGetToOneRelatedResponse, type CiProductsBuildRunsGetToManyRelatedData, type CiProductsBuildRunsGetToManyRelatedError, type CiProductsBuildRunsGetToManyRelatedResponse, type CiProductsPrimaryRepositoriesGetToManyRelatedData, type CiProductsPrimaryRepositoriesGetToManyRelatedError, type CiProductsPrimaryRepositoriesGetToManyRelatedResponse, type CiProductsWorkflowsGetToManyRelatedData, type CiProductsWorkflowsGetToManyRelatedError, type CiProductsWorkflowsGetToManyRelatedResponse, type CiWorkflowsBuildRunsGetToManyRelatedData, type CiWorkflowsBuildRunsGetToManyRelatedError, type CiWorkflowsBuildRunsGetToManyRelatedResponse, type CiWorkflowsRepositoryGetToOneRelatedData, type CiWorkflowsRepositoryGetToOneRelatedError, type CiWorkflowsRepositoryGetToOneRelatedResponse, type CiXcodeVersionsMacOsVersionsGetToManyRelatedData, type CiXcodeVersionsMacOsVersionsGetToManyRelatedError, type CiXcodeVersionsMacOsVersionsGetToManyRelatedResponse, type CustomerReviewsResponseGetToOneRelatedData, type CustomerReviewsResponseGetToOneRelatedError, type CustomerReviewsResponseGetToOneRelatedResponse, type DiagnosticSignaturesLogsGetToManyRelatedData, type DiagnosticSignaturesLogsGetToManyRelatedError, type DiagnosticSignaturesLogsGetToManyRelatedResponse, type EndUserLicenseAgreementsTerritoriesGetToManyRelatedData, type EndUserLicenseAgreementsTerritoriesGetToManyRelatedError, type EndUserLicenseAgreementsTerritoriesGetToManyRelatedResponse, type GameCenterAchievementLocalizationsGameCenterAchievementGetToOneRelatedData, type GameCenterAchievementLocalizationsGameCenterAchievementGetToOneRelatedError, type GameCenterAchievementLocalizationsGameCenterAchievementGetToOneRelatedResponse, type GameCenterAchievementLocalizationsGameCenterAchievementImageGetToOneRelatedData, type GameCenterAchievementLocalizationsGameCenterAchievementImageGetToOneRelatedError, type GameCenterAchievementLocalizationsGameCenterAchievementImageGetToOneRelatedResponse, type GameCenterAchievementsGroupAchievementGetToOneRelationshipData, type GameCenterAchievementsGroupAchievementGetToOneRelationshipError, type GameCenterAchievementsGroupAchievementGetToOneRelationshipResponse, type GameCenterAchievementsGroupAchievementUpdateToOneRelationshipData, type GameCenterAchievementsGroupAchievementUpdateToOneRelationshipError, type GameCenterAchievementsGroupAchievementUpdateToOneRelationshipResponse, type GameCenterAchievementsGroupAchievementGetToOneRelatedData, type GameCenterAchievementsGroupAchievementGetToOneRelatedError, type GameCenterAchievementsGroupAchievementGetToOneRelatedResponse, type GameCenterAchievementsLocalizationsGetToManyRelatedData, type GameCenterAchievementsLocalizationsGetToManyRelatedError, type GameCenterAchievementsLocalizationsGetToManyRelatedResponse, type GameCenterAchievementsReleasesGetToManyRelatedData, type GameCenterAchievementsReleasesGetToManyRelatedError, type GameCenterAchievementsReleasesGetToManyRelatedResponse, type GameCenterAppVersionsAppStoreVersionGetToOneRelatedData, type GameCenterAppVersionsAppStoreVersionGetToOneRelatedError, type GameCenterAppVersionsAppStoreVersionGetToOneRelatedResponse, type GameCenterAppVersionsCompatibilityVersionsGetToManyRelationshipData, type GameCenterAppVersionsCompatibilityVersionsGetToManyRelationshipError, type GameCenterAppVersionsCompatibilityVersionsGetToManyRelationshipResponse, type GameCenterAppVersionsCompatibilityVersionsCreateToManyRelationshipData, type GameCenterAppVersionsCompatibilityVersionsCreateToManyRelationshipError, type GameCenterAppVersionsCompatibilityVersionsCreateToManyRelationshipResponse, type GameCenterAppVersionsCompatibilityVersionsDeleteToManyRelationshipData, type GameCenterAppVersionsCompatibilityVersionsDeleteToManyRelationshipError, type GameCenterAppVersionsCompatibilityVersionsDeleteToManyRelationshipResponse, type GameCenterAppVersionsCompatibilityVersionsGetToManyRelatedData, type GameCenterAppVersionsCompatibilityVersionsGetToManyRelatedError, type GameCenterAppVersionsCompatibilityVersionsGetToManyRelatedResponse, type GameCenterDetailsAchievementReleasesGetToManyRelatedData, type GameCenterDetailsAchievementReleasesGetToManyRelatedError, type GameCenterDetailsAchievementReleasesGetToManyRelatedResponse, type GameCenterDetailsGameCenterAchievementsGetToManyRelationshipData, type GameCenterDetailsGameCenterAchievementsGetToManyRelationshipError, type GameCenterDetailsGameCenterAchievementsGetToManyRelationshipResponse, type GameCenterDetailsGameCenterAchievementsReplaceToManyRelationshipData, type GameCenterDetailsGameCenterAchievementsReplaceToManyRelationshipError, type GameCenterDetailsGameCenterAchievementsReplaceToManyRelationshipResponse, type GameCenterDetailsGameCenterAchievementsGetToManyRelatedData, type GameCenterDetailsGameCenterAchievementsGetToManyRelatedError, type GameCenterDetailsGameCenterAchievementsGetToManyRelatedResponse, type GameCenterDetailsGameCenterAppVersionsGetToManyRelatedData, type GameCenterDetailsGameCenterAppVersionsGetToManyRelatedError, type GameCenterDetailsGameCenterAppVersionsGetToManyRelatedResponse, type GameCenterDetailsGameCenterGroupGetToOneRelatedData, type GameCenterDetailsGameCenterGroupGetToOneRelatedError, type GameCenterDetailsGameCenterGroupGetToOneRelatedResponse, type GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelationshipData, type GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelationshipError, type GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelationshipResponse, type GameCenterDetailsGameCenterLeaderboardSetsReplaceToManyRelationshipData, type GameCenterDetailsGameCenterLeaderboardSetsReplaceToManyRelationshipError, type GameCenterDetailsGameCenterLeaderboardSetsReplaceToManyRelationshipResponse, type GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedData, type GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedError, type GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedResponse, type GameCenterDetailsGameCenterLeaderboardsGetToManyRelationshipData, type GameCenterDetailsGameCenterLeaderboardsGetToManyRelationshipError, type GameCenterDetailsGameCenterLeaderboardsGetToManyRelationshipResponse, type GameCenterDetailsGameCenterLeaderboardsReplaceToManyRelationshipData, type GameCenterDetailsGameCenterLeaderboardsReplaceToManyRelationshipError, type GameCenterDetailsGameCenterLeaderboardsReplaceToManyRelationshipResponse, type GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedData, type GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedError, type GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedResponse, type GameCenterDetailsLeaderboardReleasesGetToManyRelatedData, type GameCenterDetailsLeaderboardReleasesGetToManyRelatedError, type GameCenterDetailsLeaderboardReleasesGetToManyRelatedResponse, type GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedData, type GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedError, type GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedResponse, type GameCenterEnabledVersionsCompatibleVersionsGetToManyRelationshipData, type GameCenterEnabledVersionsCompatibleVersionsGetToManyRelationshipError, type GameCenterEnabledVersionsCompatibleVersionsGetToManyRelationshipResponse, type GameCenterEnabledVersionsCompatibleVersionsCreateToManyRelationshipData, type GameCenterEnabledVersionsCompatibleVersionsCreateToManyRelationshipError, type GameCenterEnabledVersionsCompatibleVersionsCreateToManyRelationshipResponse, type GameCenterEnabledVersionsCompatibleVersionsReplaceToManyRelationshipData, type GameCenterEnabledVersionsCompatibleVersionsReplaceToManyRelationshipError, type GameCenterEnabledVersionsCompatibleVersionsReplaceToManyRelationshipResponse, type GameCenterEnabledVersionsCompatibleVersionsDeleteToManyRelationshipData, type GameCenterEnabledVersionsCompatibleVersionsDeleteToManyRelationshipError, type GameCenterEnabledVersionsCompatibleVersionsDeleteToManyRelationshipResponse, type GameCenterEnabledVersionsCompatibleVersionsGetToManyRelatedData, type GameCenterEnabledVersionsCompatibleVersionsGetToManyRelatedError, type GameCenterEnabledVersionsCompatibleVersionsGetToManyRelatedResponse, type GameCenterGroupsGameCenterAchievementsGetToManyRelationshipData, type GameCenterGroupsGameCenterAchievementsGetToManyRelationshipError, type GameCenterGroupsGameCenterAchievementsGetToManyRelationshipResponse, type GameCenterGroupsGameCenterAchievementsReplaceToManyRelationshipData, type GameCenterGroupsGameCenterAchievementsReplaceToManyRelationshipError, type GameCenterGroupsGameCenterAchievementsReplaceToManyRelationshipResponse, type GameCenterGroupsGameCenterAchievementsGetToManyRelatedData, type GameCenterGroupsGameCenterAchievementsGetToManyRelatedError, type GameCenterGroupsGameCenterAchievementsGetToManyRelatedResponse, type GameCenterGroupsGameCenterDetailsGetToManyRelatedData, type GameCenterGroupsGameCenterDetailsGetToManyRelatedError, type GameCenterGroupsGameCenterDetailsGetToManyRelatedResponse, type GameCenterGroupsGameCenterLeaderboardSetsGetToManyRelationshipData, type GameCenterGroupsGameCenterLeaderboardSetsGetToManyRelationshipError, type GameCenterGroupsGameCenterLeaderboardSetsGetToManyRelationshipResponse, type GameCenterGroupsGameCenterLeaderboardSetsReplaceToManyRelationshipData, type GameCenterGroupsGameCenterLeaderboardSetsReplaceToManyRelationshipError, type GameCenterGroupsGameCenterLeaderboardSetsReplaceToManyRelationshipResponse, type GameCenterGroupsGameCenterLeaderboardSetsGetToManyRelatedData, type GameCenterGroupsGameCenterLeaderboardSetsGetToManyRelatedError, type GameCenterGroupsGameCenterLeaderboardSetsGetToManyRelatedResponse, type GameCenterGroupsGameCenterLeaderboardsGetToManyRelationshipData, type GameCenterGroupsGameCenterLeaderboardsGetToManyRelationshipError, type GameCenterGroupsGameCenterLeaderboardsGetToManyRelationshipResponse, type GameCenterGroupsGameCenterLeaderboardsReplaceToManyRelationshipData, type GameCenterGroupsGameCenterLeaderboardsReplaceToManyRelationshipError, type GameCenterGroupsGameCenterLeaderboardsReplaceToManyRelationshipResponse, type GameCenterGroupsGameCenterLeaderboardsGetToManyRelatedData, type GameCenterGroupsGameCenterLeaderboardsGetToManyRelatedError, type GameCenterGroupsGameCenterLeaderboardsGetToManyRelatedResponse, type GameCenterLeaderboardLocalizationsGameCenterLeaderboardImageGetToOneRelatedData, type GameCenterLeaderboardLocalizationsGameCenterLeaderboardImageGetToOneRelatedError, type GameCenterLeaderboardLocalizationsGameCenterLeaderboardImageGetToOneRelatedResponse, type GameCenterLeaderboardSetLocalizationsGameCenterLeaderboardSetImageGetToOneRelatedData, type GameCenterLeaderboardSetLocalizationsGameCenterLeaderboardSetImageGetToOneRelatedError, type GameCenterLeaderboardSetLocalizationsGameCenterLeaderboardSetImageGetToOneRelatedResponse, type GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedData, type GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedError, type GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedResponse, type GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedData, type GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedError, type GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedResponse, type GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelationshipData, type GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelationshipError, type GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelationshipResponse, type GameCenterLeaderboardSetsGameCenterLeaderboardsCreateToManyRelationshipData, type GameCenterLeaderboardSetsGameCenterLeaderboardsCreateToManyRelationshipError, type GameCenterLeaderboardSetsGameCenterLeaderboardsCreateToManyRelationshipResponse, type GameCenterLeaderboardSetsGameCenterLeaderboardsReplaceToManyRelationshipData, type GameCenterLeaderboardSetsGameCenterLeaderboardsReplaceToManyRelationshipError, type GameCenterLeaderboardSetsGameCenterLeaderboardsReplaceToManyRelationshipResponse, type GameCenterLeaderboardSetsGameCenterLeaderboardsDeleteToManyRelationshipData, type GameCenterLeaderboardSetsGameCenterLeaderboardsDeleteToManyRelationshipError, type GameCenterLeaderboardSetsGameCenterLeaderboardsDeleteToManyRelationshipResponse, type GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelatedData, type GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelatedError, type GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelatedResponse, type GameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelationshipData, type GameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelationshipError, type GameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelationshipResponse, type GameCenterLeaderboardSetsGroupLeaderboardSetUpdateToOneRelationshipData, type GameCenterLeaderboardSetsGroupLeaderboardSetUpdateToOneRelationshipError, type GameCenterLeaderboardSetsGroupLeaderboardSetUpdateToOneRelationshipResponse, type GameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelatedData, type GameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelatedError, type GameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelatedResponse, type GameCenterLeaderboardSetsLocalizationsGetToManyRelatedData, type GameCenterLeaderboardSetsLocalizationsGetToManyRelatedError, type GameCenterLeaderboardSetsLocalizationsGetToManyRelatedResponse, type GameCenterLeaderboardSetsReleasesGetToManyRelatedData, type GameCenterLeaderboardSetsReleasesGetToManyRelatedError, type GameCenterLeaderboardSetsReleasesGetToManyRelatedResponse, type GameCenterLeaderboardsGroupLeaderboardGetToOneRelationshipData, type GameCenterLeaderboardsGroupLeaderboardGetToOneRelationshipError, type GameCenterLeaderboardsGroupLeaderboardGetToOneRelationshipResponse, type GameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationshipData, type GameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationshipError, type GameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationshipResponse, type GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedData, type GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedError, type GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedResponse, type GameCenterLeaderboardsLocalizationsGetToManyRelatedData, type GameCenterLeaderboardsLocalizationsGetToManyRelatedError, type GameCenterLeaderboardsLocalizationsGetToManyRelatedResponse, type GameCenterLeaderboardsReleasesGetToManyRelatedData, type GameCenterLeaderboardsReleasesGetToManyRelatedError, type GameCenterLeaderboardsReleasesGetToManyRelatedResponse, type GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedData, type GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedError, type GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedResponse, type GameCenterMatchmakingRuleSetsRulesGetToManyRelatedData, type GameCenterMatchmakingRuleSetsRulesGetToManyRelatedError, type GameCenterMatchmakingRuleSetsRulesGetToManyRelatedResponse, type GameCenterMatchmakingRuleSetsTeamsGetToManyRelatedData, type GameCenterMatchmakingRuleSetsTeamsGetToManyRelatedError, type GameCenterMatchmakingRuleSetsTeamsGetToManyRelatedResponse, type InAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelatedData, type InAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelatedError, type InAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelatedResponse, type InAppPurchasePricePointsEqualizationsGetToManyRelatedData, type InAppPurchasePricePointsEqualizationsGetToManyRelatedError, type InAppPurchasePricePointsEqualizationsGetToManyRelatedResponse, type InAppPurchasePriceSchedulesAutomaticPricesGetToManyRelatedData, type InAppPurchasePriceSchedulesAutomaticPricesGetToManyRelatedError, type InAppPurchasePriceSchedulesAutomaticPricesGetToManyRelatedResponse, type InAppPurchasePriceSchedulesBaseTerritoryGetToOneRelatedData, type InAppPurchasePriceSchedulesBaseTerritoryGetToOneRelatedError, type InAppPurchasePriceSchedulesBaseTerritoryGetToOneRelatedResponse, type InAppPurchasePriceSchedulesManualPricesGetToManyRelatedData, type InAppPurchasePriceSchedulesManualPricesGetToManyRelatedError, type InAppPurchasePriceSchedulesManualPricesGetToManyRelatedResponse, type InAppPurchasesV2AppStoreReviewScreenshotGetToOneRelatedData, type InAppPurchasesV2AppStoreReviewScreenshotGetToOneRelatedError, type InAppPurchasesV2AppStoreReviewScreenshotGetToOneRelatedResponse, type InAppPurchasesV2ContentGetToOneRelatedData, type InAppPurchasesV2ContentGetToOneRelatedError, type InAppPurchasesV2ContentGetToOneRelatedResponse, type InAppPurchasesV2IapPriceScheduleGetToOneRelatedData, type InAppPurchasesV2IapPriceScheduleGetToOneRelatedError, type InAppPurchasesV2IapPriceScheduleGetToOneRelatedResponse, type InAppPurchasesV2ImagesGetToManyRelatedData, type InAppPurchasesV2ImagesGetToManyRelatedError, type InAppPurchasesV2ImagesGetToManyRelatedResponse, type InAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelatedData, type InAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelatedError, type InAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelatedResponse, type InAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelatedData, type InAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelatedError, type InAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelatedResponse, type InAppPurchasesV2PricePointsGetToManyRelatedData, type InAppPurchasesV2PricePointsGetToManyRelatedError, type InAppPurchasesV2PricePointsGetToManyRelatedResponse, type InAppPurchasesV2PromotedPurchaseGetToOneRelatedData, type InAppPurchasesV2PromotedPurchaseGetToOneRelatedError, type InAppPurchasesV2PromotedPurchaseGetToOneRelatedResponse, type MerchantIdsCertificatesGetToManyRelatedData, type MerchantIdsCertificatesGetToManyRelatedError, type MerchantIdsCertificatesGetToManyRelatedResponse, type PreReleaseVersionsAppGetToOneRelatedData, type PreReleaseVersionsAppGetToOneRelatedError, type PreReleaseVersionsAppGetToOneRelatedResponse, type PreReleaseVersionsBuildsGetToManyRelatedData, type PreReleaseVersionsBuildsGetToManyRelatedError, type PreReleaseVersionsBuildsGetToManyRelatedResponse, type ProfilesBundleIdGetToOneRelatedData, type ProfilesBundleIdGetToOneRelatedError, type ProfilesBundleIdGetToOneRelatedResponse, type ProfilesCertificatesGetToManyRelatedData, type ProfilesCertificatesGetToManyRelatedError, type ProfilesCertificatesGetToManyRelatedResponse, type ProfilesDevicesGetToManyRelatedData, type ProfilesDevicesGetToManyRelatedError, type ProfilesDevicesGetToManyRelatedResponse, type ReviewSubmissionsItemsGetToManyRelatedData, type ReviewSubmissionsItemsGetToManyRelatedError, type ReviewSubmissionsItemsGetToManyRelatedResponse, type ScmProvidersRepositoriesGetToManyRelatedData, type ScmProvidersRepositoriesGetToManyRelatedError, type ScmProvidersRepositoriesGetToManyRelatedResponse, type ScmRepositoriesGitReferencesGetToManyRelatedData, type ScmRepositoriesGitReferencesGetToManyRelatedError, type ScmRepositoriesGitReferencesGetToManyRelatedResponse, type ScmRepositoriesPullRequestsGetToManyRelatedData, type ScmRepositoriesPullRequestsGetToManyRelatedError, type ScmRepositoriesPullRequestsGetToManyRelatedResponse, type SubscriptionAvailabilitiesAvailableTerritoriesGetToManyRelatedData, type SubscriptionAvailabilitiesAvailableTerritoriesGetToManyRelatedError, type SubscriptionAvailabilitiesAvailableTerritoriesGetToManyRelatedResponse, type SubscriptionGroupsSubscriptionGroupLocalizationsGetToManyRelatedData, type SubscriptionGroupsSubscriptionGroupLocalizationsGetToManyRelatedError, type SubscriptionGroupsSubscriptionGroupLocalizationsGetToManyRelatedResponse, type SubscriptionGroupsSubscriptionsGetToManyRelatedData, type SubscriptionGroupsSubscriptionsGetToManyRelatedError, type SubscriptionGroupsSubscriptionsGetToManyRelatedResponse, type SubscriptionOfferCodeOneTimeUseCodesValuesGetToOneRelatedData, type SubscriptionOfferCodeOneTimeUseCodesValuesGetToOneRelatedError, type SubscriptionOfferCodeOneTimeUseCodesValuesGetToOneRelatedResponse, type SubscriptionOfferCodesCustomCodesGetToManyRelatedData, type SubscriptionOfferCodesCustomCodesGetToManyRelatedError, type SubscriptionOfferCodesCustomCodesGetToManyRelatedResponse, type SubscriptionOfferCodesOneTimeUseCodesGetToManyRelatedData, type SubscriptionOfferCodesOneTimeUseCodesGetToManyRelatedError, type SubscriptionOfferCodesOneTimeUseCodesGetToManyRelatedResponse, type SubscriptionOfferCodesPricesGetToManyRelatedData, type SubscriptionOfferCodesPricesGetToManyRelatedError, type SubscriptionOfferCodesPricesGetToManyRelatedResponse, type SubscriptionPricePointsEqualizationsGetToManyRelatedData, type SubscriptionPricePointsEqualizationsGetToManyRelatedError, type SubscriptionPricePointsEqualizationsGetToManyRelatedResponse, type SubscriptionPromotionalOffersPricesGetToManyRelatedData, type SubscriptionPromotionalOffersPricesGetToManyRelatedError, type SubscriptionPromotionalOffersPricesGetToManyRelatedResponse, type SubscriptionsAppStoreReviewScreenshotGetToOneRelatedData, type SubscriptionsAppStoreReviewScreenshotGetToOneRelatedError, type SubscriptionsAppStoreReviewScreenshotGetToOneRelatedResponse, type SubscriptionsImagesGetToManyRelatedData, type SubscriptionsImagesGetToManyRelatedError, type SubscriptionsImagesGetToManyRelatedResponse, type SubscriptionsIntroductoryOffersGetToManyRelationshipData, type SubscriptionsIntroductoryOffersGetToManyRelationshipError, type SubscriptionsIntroductoryOffersGetToManyRelationshipResponse, type SubscriptionsIntroductoryOffersDeleteToManyRelationshipData, type SubscriptionsIntroductoryOffersDeleteToManyRelationshipError, type SubscriptionsIntroductoryOffersDeleteToManyRelationshipResponse, type SubscriptionsIntroductoryOffersGetToManyRelatedData, type SubscriptionsIntroductoryOffersGetToManyRelatedError, type SubscriptionsIntroductoryOffersGetToManyRelatedResponse, type SubscriptionsOfferCodesGetToManyRelatedData, type SubscriptionsOfferCodesGetToManyRelatedError, type SubscriptionsOfferCodesGetToManyRelatedResponse, type SubscriptionsPricePointsGetToManyRelatedData, type SubscriptionsPricePointsGetToManyRelatedError, type SubscriptionsPricePointsGetToManyRelatedResponse, type SubscriptionsPricesGetToManyRelationshipData, type SubscriptionsPricesGetToManyRelationshipError, type SubscriptionsPricesGetToManyRelationshipResponse, type SubscriptionsPricesDeleteToManyRelationshipData, type SubscriptionsPricesDeleteToManyRelationshipError, type SubscriptionsPricesDeleteToManyRelationshipResponse, type SubscriptionsPricesGetToManyRelatedData, type SubscriptionsPricesGetToManyRelatedError, type SubscriptionsPricesGetToManyRelatedResponse, type SubscriptionsPromotedPurchaseGetToOneRelatedData, type SubscriptionsPromotedPurchaseGetToOneRelatedError, type SubscriptionsPromotedPurchaseGetToOneRelatedResponse, type SubscriptionsPromotionalOffersGetToManyRelatedData, type SubscriptionsPromotionalOffersGetToManyRelatedError, type SubscriptionsPromotionalOffersGetToManyRelatedResponse, type SubscriptionsSubscriptionAvailabilityGetToOneRelatedData, type SubscriptionsSubscriptionAvailabilityGetToOneRelatedError, type SubscriptionsSubscriptionAvailabilityGetToOneRelatedResponse, type SubscriptionsSubscriptionLocalizationsGetToManyRelatedData, type SubscriptionsSubscriptionLocalizationsGetToManyRelatedError, type SubscriptionsSubscriptionLocalizationsGetToManyRelatedResponse, type SubscriptionsWinBackOffersGetToManyRelatedData, type SubscriptionsWinBackOffersGetToManyRelatedError, type SubscriptionsWinBackOffersGetToManyRelatedResponse, type UserInvitationsVisibleAppsGetToManyRelatedData, type UserInvitationsVisibleAppsGetToManyRelatedError, type UserInvitationsVisibleAppsGetToManyRelatedResponse, type UsersVisibleAppsGetToManyRelationshipData, type UsersVisibleAppsGetToManyRelationshipError, type UsersVisibleAppsGetToManyRelationshipResponse, type UsersVisibleAppsCreateToManyRelationshipData, type UsersVisibleAppsCreateToManyRelationshipError, type UsersVisibleAppsCreateToManyRelationshipResponse, type UsersVisibleAppsReplaceToManyRelationshipData, type UsersVisibleAppsReplaceToManyRelationshipError, type UsersVisibleAppsReplaceToManyRelationshipResponse, type UsersVisibleAppsDeleteToManyRelationshipData, type UsersVisibleAppsDeleteToManyRelationshipError, type UsersVisibleAppsDeleteToManyRelationshipResponse, type UsersVisibleAppsGetToManyRelatedData, type UsersVisibleAppsGetToManyRelatedError, type UsersVisibleAppsGetToManyRelatedResponse, type WinBackOffersPricesGetToManyRelatedData, type WinBackOffersPricesGetToManyRelatedError, type WinBackOffersPricesGetToManyRelatedResponse, type AppsBetaTesterUsagesGetMetricsData, type AppsBetaTesterUsagesGetMetricsError, type AppsBetaTesterUsagesGetMetricsResponse, type BetaGroupsBetaTesterUsagesGetMetricsData, type BetaGroupsBetaTesterUsagesGetMetricsError, type BetaGroupsBetaTesterUsagesGetMetricsResponse, type BetaGroupsPublicLinkUsagesGetMetricsData, type BetaGroupsPublicLinkUsagesGetMetricsError, type BetaGroupsPublicLinkUsagesGetMetricsResponse, type BetaTestersBetaTesterUsagesGetMetricsData, type BetaTestersBetaTesterUsagesGetMetricsError, type BetaTestersBetaTesterUsagesGetMetricsResponse, type BuildsBetaBuildUsagesGetMetricsData, type BuildsBetaBuildUsagesGetMetricsError, type BuildsBetaBuildUsagesGetMetricsResponse, type GameCenterDetailsClassicMatchmakingRequestsGetMetricsData, type GameCenterDetailsClassicMatchmakingRequestsGetMetricsError, type GameCenterDetailsClassicMatchmakingRequestsGetMetricsResponse, type GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsData, type GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsError, type GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsResponse, type GameCenterMatchmakingQueuesExperimentMatchmakingQueueSizesGetMetricsData, type GameCenterMatchmakingQueuesExperimentMatchmakingQueueSizesGetMetricsError, type GameCenterMatchmakingQueuesExperimentMatchmakingQueueSizesGetMetricsResponse, type GameCenterMatchmakingQueuesExperimentMatchmakingRequestsGetMetricsData, type GameCenterMatchmakingQueuesExperimentMatchmakingRequestsGetMetricsError, type GameCenterMatchmakingQueuesExperimentMatchmakingRequestsGetMetricsResponse, type GameCenterMatchmakingQueuesMatchmakingQueueSizesGetMetricsData, type GameCenterMatchmakingQueuesMatchmakingQueueSizesGetMetricsError, type GameCenterMatchmakingQueuesMatchmakingQueueSizesGetMetricsResponse, type GameCenterMatchmakingQueuesMatchmakingRequestsGetMetricsData, type GameCenterMatchmakingQueuesMatchmakingRequestsGetMetricsError, type GameCenterMatchmakingQueuesMatchmakingRequestsGetMetricsResponse, type GameCenterMatchmakingQueuesMatchmakingSessionsGetMetricsData, type GameCenterMatchmakingQueuesMatchmakingSessionsGetMetricsError, type GameCenterMatchmakingQueuesMatchmakingSessionsGetMetricsResponse, type GameCenterMatchmakingRulesMatchmakingBooleanRuleResultsGetMetricsData, type GameCenterMatchmakingRulesMatchmakingBooleanRuleResultsGetMetricsError, type GameCenterMatchmakingRulesMatchmakingBooleanRuleResultsGetMetricsResponse, type GameCenterMatchmakingRulesMatchmakingNumberRuleResultsGetMetricsData, type GameCenterMatchmakingRulesMatchmakingNumberRuleResultsGetMetricsError, type GameCenterMatchmakingRulesMatchmakingNumberRuleResultsGetMetricsResponse, type GameCenterMatchmakingRulesMatchmakingRuleErrorsGetMetricsData, type GameCenterMatchmakingRulesMatchmakingRuleErrorsGetMetricsError, type GameCenterMatchmakingRulesMatchmakingRuleErrorsGetMetricsResponse, AlternativeDistributionDomainsGetCollectionResponseTransformer, AlternativeDistributionDomainsCreateInstanceResponseTransformer, AlternativeDistributionDomainsGetInstanceResponseTransformer, AlternativeDistributionPackageDeltasGetInstanceResponseTransformer, AlternativeDistributionPackageVariantsGetInstanceResponseTransformer, AlternativeDistributionPackageVersionsGetInstanceResponseTransformer, AlternativeDistributionPackagesCreateInstanceResponseTransformer, AlternativeDistributionPackagesGetInstanceResponseTransformer, AnalyticsReportInstancesGetInstanceResponseTransformer, AppAvailabilitiesV2CreateInstanceResponseTransformer, AppAvailabilitiesV2GetInstanceResponseTransformer, AppEncryptionDeclarationsGetCollectionResponseTransformer, AppEncryptionDeclarationsCreateInstanceResponseTransformer, AppEncryptionDeclarationsGetInstanceResponseTransformer, AppStoreVersionExperimentTreatmentsCreateInstanceResponseTransformer, AppStoreVersionExperimentTreatmentsGetInstanceResponseTransformer, AppStoreVersionExperimentTreatmentsUpdateInstanceResponseTransformer, AppStoreVersionExperimentsV2CreateInstanceResponseTransformer, AppStoreVersionExperimentsV2GetInstanceResponseTransformer, AppStoreVersionExperimentsV2UpdateInstanceResponseTransformer, AppStoreVersionExperimentsCreateInstanceResponseTransformer, AppStoreVersionExperimentsGetInstanceResponseTransformer, AppStoreVersionExperimentsUpdateInstanceResponseTransformer, AppStoreVersionPhasedReleasesCreateInstanceResponseTransformer, AppStoreVersionPhasedReleasesUpdateInstanceResponseTransformer, AppStoreVersionSubmissionsCreateInstanceResponseTransformer, AppStoreVersionsCreateInstanceResponseTransformer, AppStoreVersionsGetInstanceResponseTransformer, AppStoreVersionsUpdateInstanceResponseTransformer, BetaAppReviewSubmissionsGetCollectionResponseTransformer, BetaAppReviewSubmissionsCreateInstanceResponseTransformer, BetaAppReviewSubmissionsGetInstanceResponseTransformer, BetaBuildLocalizationsGetCollectionResponseTransformer, BetaBuildLocalizationsCreateInstanceResponseTransformer, BetaBuildLocalizationsGetInstanceResponseTransformer, BetaBuildLocalizationsUpdateInstanceResponseTransformer, BetaGroupsGetCollectionResponseTransformer, BetaGroupsCreateInstanceResponseTransformer, BetaGroupsGetInstanceResponseTransformer, BetaGroupsUpdateInstanceResponseTransformer, BetaRecruitmentCriteriaCreateInstanceResponseTransformer, BetaRecruitmentCriteriaUpdateInstanceResponseTransformer, BuildBetaDetailsGetCollectionResponseTransformer, BuildBetaDetailsGetInstanceResponseTransformer, BuildBetaDetailsUpdateInstanceResponseTransformer, BuildsGetCollectionResponseTransformer, BuildsGetInstanceResponseTransformer, BuildsUpdateInstanceResponseTransformer, CertificatesGetCollectionResponseTransformer, CertificatesCreateInstanceResponseTransformer, CertificatesGetInstanceResponseTransformer, CertificatesUpdateInstanceResponseTransformer, CiBuildActionsGetInstanceResponseTransformer, CiBuildRunsCreateInstanceResponseTransformer, CiBuildRunsGetInstanceResponseTransformer, CiProductsGetCollectionResponseTransformer, CiProductsGetInstanceResponseTransformer, CiWorkflowsCreateInstanceResponseTransformer, CiWorkflowsGetInstanceResponseTransformer, CiWorkflowsUpdateInstanceResponseTransformer, CustomerReviewResponsesCreateInstanceResponseTransformer, CustomerReviewResponsesGetInstanceResponseTransformer, CustomerReviewsGetInstanceResponseTransformer, DevicesGetCollectionResponseTransformer, DevicesCreateInstanceResponseTransformer, DevicesGetInstanceResponseTransformer, DevicesUpdateInstanceResponseTransformer, GameCenterLeaderboardEntrySubmissionsCreateInstanceResponseTransformer, GameCenterLeaderboardsCreateInstanceResponseTransformer, GameCenterLeaderboardsGetInstanceResponseTransformer, GameCenterLeaderboardsUpdateInstanceResponseTransformer, GameCenterPlayerAchievementSubmissionsCreateInstanceResponseTransformer, InAppPurchaseContentsGetInstanceResponseTransformer, MarketplaceDomainsGetCollectionResponseTransformer, MarketplaceDomainsCreateInstanceResponseTransformer, MarketplaceDomainsGetInstanceResponseTransformer, MerchantIdsGetCollectionResponseTransformer, MerchantIdsCreateInstanceResponseTransformer, MerchantIdsGetInstanceResponseTransformer, MerchantIdsUpdateInstanceResponseTransformer, NominationsGetCollectionResponseTransformer, NominationsCreateInstanceResponseTransformer, NominationsGetInstanceResponseTransformer, NominationsUpdateInstanceResponseTransformer, ProfilesGetCollectionResponseTransformer, ProfilesCreateInstanceResponseTransformer, ProfilesGetInstanceResponseTransformer, ReviewSubmissionsGetCollectionResponseTransformer, ReviewSubmissionsCreateInstanceResponseTransformer, ReviewSubmissionsGetInstanceResponseTransformer, ReviewSubmissionsUpdateInstanceResponseTransformer, RoutingAppCoveragesCreateInstanceResponseTransformer, RoutingAppCoveragesGetInstanceResponseTransformer, RoutingAppCoveragesUpdateInstanceResponseTransformer, ScmGitReferencesGetInstanceResponseTransformer, ScmPullRequestsGetInstanceResponseTransformer, ScmRepositoriesGetCollectionResponseTransformer, ScmRepositoriesGetInstanceResponseTransformer, SubscriptionIntroductoryOffersCreateInstanceResponseTransformer, SubscriptionIntroductoryOffersUpdateInstanceResponseTransformer, SubscriptionOfferCodeCustomCodesCreateInstanceResponseTransformer, SubscriptionOfferCodeCustomCodesGetInstanceResponseTransformer, SubscriptionOfferCodeCustomCodesUpdateInstanceResponseTransformer, SubscriptionOfferCodeOneTimeUseCodesCreateInstanceResponseTransformer, SubscriptionOfferCodeOneTimeUseCodesGetInstanceResponseTransformer, SubscriptionOfferCodeOneTimeUseCodesUpdateInstanceResponseTransformer, SubscriptionPricesCreateInstanceResponseTransformer, TerritoryAvailabilitiesUpdateInstanceResponseTransformer, UserInvitationsGetCollectionResponseTransformer, UserInvitationsCreateInstanceResponseTransformer, UserInvitationsGetInstanceResponseTransformer, WinBackOffersCreateInstanceResponseTransformer, WinBackOffersGetInstanceResponseTransformer, WinBackOffersUpdateInstanceResponseTransformer, AlternativeDistributionPackageVersionsDeltasGetToManyRelatedResponseTransformer, AlternativeDistributionPackageVersionsVariantsGetToManyRelatedResponseTransformer, AlternativeDistributionPackagesVersionsGetToManyRelatedResponseTransformer, AnalyticsReportsInstancesGetToManyRelatedResponseTransformer, AppAvailabilitiesV2TerritoryAvailabilitiesGetToManyRelatedResponseTransformer, AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelatedResponseTransformer, AppPriceSchedulesAutomaticPricesGetToManyRelatedResponseTransformer, AppPriceSchedulesManualPricesGetToManyRelatedResponseTransformer, AppStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelatedResponseTransformer, AppStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelatedResponseTransformer, AppStoreVersionsAlternativeDistributionPackageGetToOneRelatedResponseTransformer, AppStoreVersionsAppStoreVersionExperimentsGetToManyRelatedResponseTransformer, AppStoreVersionsAppStoreVersionExperimentsV2GetToManyRelatedResponseTransformer, AppStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelatedResponseTransformer, AppStoreVersionsAppStoreVersionSubmissionGetToOneRelatedResponseTransformer, AppStoreVersionsBuildGetToOneRelatedResponseTransformer, AppStoreVersionsCustomerReviewsGetToManyRelatedResponseTransformer, AppsAppAvailabilityV2GetToOneRelatedResponseTransformer, AppsAppEncryptionDeclarationsGetToManyRelatedResponseTransformer, AppsAppStoreVersionExperimentsV2GetToManyRelatedResponseTransformer, AppsAppStoreVersionsGetToManyRelatedResponseTransformer, AppsBetaGroupsGetToManyRelatedResponseTransformer, AppsBuildsGetToManyRelatedResponseTransformer, AppsCiProductGetToOneRelatedResponseTransformer, AppsCustomerReviewsGetToManyRelatedResponseTransformer, AppsReviewSubmissionsGetToManyRelatedResponseTransformer, BetaAppReviewSubmissionsBuildGetToOneRelatedResponseTransformer, BetaBuildLocalizationsBuildGetToOneRelatedResponseTransformer, BetaGroupsBetaRecruitmentCriteriaGetToOneRelatedResponseTransformer, BetaGroupsBuildsGetToManyRelatedResponseTransformer, BetaTestersBetaGroupsGetToManyRelatedResponseTransformer, BetaTestersBuildsGetToManyRelatedResponseTransformer, BuildBetaDetailsBuildGetToOneRelatedResponseTransformer, BuildBundlesAppClipDomainCacheStatusGetToOneRelatedResponseTransformer, BuildBundlesAppClipDomainDebugStatusGetToOneRelatedResponseTransformer, BuildsAppEncryptionDeclarationGetToOneRelatedResponseTransformer, BuildsAppStoreVersionGetToOneRelatedResponseTransformer, BuildsBetaAppReviewSubmissionGetToOneRelatedResponseTransformer, BuildsBuildBetaDetailGetToOneRelatedResponseTransformer, BundleIdsProfilesGetToManyRelatedResponseTransformer, CiBuildActionsBuildRunGetToOneRelatedResponseTransformer, CiBuildRunsActionsGetToManyRelatedResponseTransformer, CiBuildRunsBuildsGetToManyRelatedResponseTransformer, CiProductsAdditionalRepositoriesGetToManyRelatedResponseTransformer, CiProductsBuildRunsGetToManyRelatedResponseTransformer, CiProductsPrimaryRepositoriesGetToManyRelatedResponseTransformer, CiProductsWorkflowsGetToManyRelatedResponseTransformer, CiWorkflowsBuildRunsGetToManyRelatedResponseTransformer, CiWorkflowsRepositoryGetToOneRelatedResponseTransformer, CustomerReviewsResponseGetToOneRelatedResponseTransformer, DiagnosticSignaturesLogsGetToManyRelatedResponseTransformer, GameCenterAppVersionsAppStoreVersionGetToOneRelatedResponseTransformer, GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedResponseTransformer, GameCenterGroupsGameCenterLeaderboardsGetToManyRelatedResponseTransformer, GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedResponseTransformer, GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelatedResponseTransformer, GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedResponseTransformer, InAppPurchasePriceSchedulesAutomaticPricesGetToManyRelatedResponseTransformer, InAppPurchasePriceSchedulesManualPricesGetToManyRelatedResponseTransformer, InAppPurchasesV2ContentGetToOneRelatedResponseTransformer, MerchantIdsCertificatesGetToManyRelatedResponseTransformer, PreReleaseVersionsBuildsGetToManyRelatedResponseTransformer, ProfilesCertificatesGetToManyRelatedResponseTransformer, ProfilesDevicesGetToManyRelatedResponseTransformer, ScmProvidersRepositoriesGetToManyRelatedResponseTransformer, ScmRepositoriesGitReferencesGetToManyRelatedResponseTransformer, ScmRepositoriesPullRequestsGetToManyRelatedResponseTransformer, SubscriptionOfferCodesCustomCodesGetToManyRelatedResponseTransformer, SubscriptionOfferCodesOneTimeUseCodesGetToManyRelatedResponseTransformer, SubscriptionsIntroductoryOffersGetToManyRelatedResponseTransformer, SubscriptionsPricesGetToManyRelatedResponseTransformer, SubscriptionsWinBackOffersGetToManyRelatedResponseTransformer } from './types.gen';

export const client = createClient(createConfig());

export const actorsGetCollection = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ActorsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<ActorsGetCollectionResponse, ActorsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/actors'
    });
};

export const actorsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ActorsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<ActorsGetInstanceResponse, ActorsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/actors/{id}'
    });
};

export const ageRatingDeclarationsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AgeRatingDeclarationsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AgeRatingDeclarationsUpdateInstanceResponse, AgeRatingDeclarationsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/ageRatingDeclarations/{id}'
    });
};

export const alternativeDistributionDomainsGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<AlternativeDistributionDomainsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<AlternativeDistributionDomainsGetCollectionResponse, AlternativeDistributionDomainsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/alternativeDistributionDomains',
        responseTransformer: AlternativeDistributionDomainsGetCollectionResponseTransformer
    });
};

export const alternativeDistributionDomainsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AlternativeDistributionDomainsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AlternativeDistributionDomainsCreateInstanceResponse, AlternativeDistributionDomainsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/alternativeDistributionDomains',
        responseTransformer: AlternativeDistributionDomainsCreateInstanceResponseTransformer
    });
};

export const alternativeDistributionDomainsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AlternativeDistributionDomainsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AlternativeDistributionDomainsGetInstanceResponse, AlternativeDistributionDomainsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/alternativeDistributionDomains/{id}',
        responseTransformer: AlternativeDistributionDomainsGetInstanceResponseTransformer
    });
};

export const alternativeDistributionDomainsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AlternativeDistributionDomainsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AlternativeDistributionDomainsDeleteInstanceResponse, AlternativeDistributionDomainsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/alternativeDistributionDomains/{id}'
    });
};

export const alternativeDistributionKeysGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<AlternativeDistributionKeysGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<AlternativeDistributionKeysGetCollectionResponse, AlternativeDistributionKeysGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/alternativeDistributionKeys'
    });
};

export const alternativeDistributionKeysCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AlternativeDistributionKeysCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AlternativeDistributionKeysCreateInstanceResponse, AlternativeDistributionKeysCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/alternativeDistributionKeys'
    });
};

export const alternativeDistributionKeysGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AlternativeDistributionKeysGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AlternativeDistributionKeysGetInstanceResponse, AlternativeDistributionKeysGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/alternativeDistributionKeys/{id}'
    });
};

export const alternativeDistributionKeysDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AlternativeDistributionKeysDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AlternativeDistributionKeysDeleteInstanceResponse, AlternativeDistributionKeysDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/alternativeDistributionKeys/{id}'
    });
};

export const alternativeDistributionPackageDeltasGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AlternativeDistributionPackageDeltasGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AlternativeDistributionPackageDeltasGetInstanceResponse, AlternativeDistributionPackageDeltasGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/alternativeDistributionPackageDeltas/{id}',
        responseTransformer: AlternativeDistributionPackageDeltasGetInstanceResponseTransformer
    });
};

export const alternativeDistributionPackageVariantsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AlternativeDistributionPackageVariantsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AlternativeDistributionPackageVariantsGetInstanceResponse, AlternativeDistributionPackageVariantsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/alternativeDistributionPackageVariants/{id}',
        responseTransformer: AlternativeDistributionPackageVariantsGetInstanceResponseTransformer
    });
};

export const alternativeDistributionPackageVersionsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AlternativeDistributionPackageVersionsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AlternativeDistributionPackageVersionsGetInstanceResponse, AlternativeDistributionPackageVersionsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/alternativeDistributionPackageVersions/{id}',
        responseTransformer: AlternativeDistributionPackageVersionsGetInstanceResponseTransformer
    });
};

export const alternativeDistributionPackagesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AlternativeDistributionPackagesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AlternativeDistributionPackagesCreateInstanceResponse, AlternativeDistributionPackagesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/alternativeDistributionPackages',
        responseTransformer: AlternativeDistributionPackagesCreateInstanceResponseTransformer
    });
};

export const alternativeDistributionPackagesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AlternativeDistributionPackagesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AlternativeDistributionPackagesGetInstanceResponse, AlternativeDistributionPackagesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/alternativeDistributionPackages/{id}',
        responseTransformer: AlternativeDistributionPackagesGetInstanceResponseTransformer
    });
};

export const analyticsReportInstancesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AnalyticsReportInstancesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AnalyticsReportInstancesGetInstanceResponse, AnalyticsReportInstancesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/analyticsReportInstances/{id}',
        responseTransformer: AnalyticsReportInstancesGetInstanceResponseTransformer
    });
};

export const analyticsReportRequestsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AnalyticsReportRequestsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AnalyticsReportRequestsCreateInstanceResponse, AnalyticsReportRequestsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/analyticsReportRequests'
    });
};

export const analyticsReportRequestsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AnalyticsReportRequestsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AnalyticsReportRequestsGetInstanceResponse, AnalyticsReportRequestsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/analyticsReportRequests/{id}'
    });
};

export const analyticsReportRequestsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AnalyticsReportRequestsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AnalyticsReportRequestsDeleteInstanceResponse, AnalyticsReportRequestsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/analyticsReportRequests/{id}'
    });
};

export const analyticsReportSegmentsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AnalyticsReportSegmentsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AnalyticsReportSegmentsGetInstanceResponse, AnalyticsReportSegmentsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/analyticsReportSegments/{id}'
    });
};

export const analyticsReportsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AnalyticsReportsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AnalyticsReportsGetInstanceResponse, AnalyticsReportsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/analyticsReports/{id}'
    });
};

export const appAvailabilitiesV2CreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppAvailabilitiesV2CreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppAvailabilitiesV2CreateInstanceResponse, AppAvailabilitiesV2CreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v2/appAvailabilities',
        responseTransformer: AppAvailabilitiesV2CreateInstanceResponseTransformer
    });
};

export const appAvailabilitiesV2GetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppAvailabilitiesV2GetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppAvailabilitiesV2GetInstanceResponse, AppAvailabilitiesV2GetInstanceError, ThrowOnError>({
        ...options,
        url: '/v2/appAvailabilities/{id}',
        responseTransformer: AppAvailabilitiesV2GetInstanceResponseTransformer
    });
};

export const appCategoriesGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<AppCategoriesGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppCategoriesGetCollectionResponse, AppCategoriesGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/appCategories'
    });
};

export const appCategoriesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppCategoriesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppCategoriesGetInstanceResponse, AppCategoriesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appCategories/{id}'
    });
};

export const appClipAdvancedExperienceImagesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipAdvancedExperienceImagesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppClipAdvancedExperienceImagesCreateInstanceResponse, AppClipAdvancedExperienceImagesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appClipAdvancedExperienceImages'
    });
};

export const appClipAdvancedExperienceImagesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipAdvancedExperienceImagesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppClipAdvancedExperienceImagesGetInstanceResponse, AppClipAdvancedExperienceImagesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appClipAdvancedExperienceImages/{id}'
    });
};

export const appClipAdvancedExperienceImagesUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipAdvancedExperienceImagesUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppClipAdvancedExperienceImagesUpdateInstanceResponse, AppClipAdvancedExperienceImagesUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appClipAdvancedExperienceImages/{id}'
    });
};

export const appClipAdvancedExperiencesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipAdvancedExperiencesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppClipAdvancedExperiencesCreateInstanceResponse, AppClipAdvancedExperiencesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appClipAdvancedExperiences'
    });
};

export const appClipAdvancedExperiencesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipAdvancedExperiencesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppClipAdvancedExperiencesGetInstanceResponse, AppClipAdvancedExperiencesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appClipAdvancedExperiences/{id}'
    });
};

export const appClipAdvancedExperiencesUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipAdvancedExperiencesUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppClipAdvancedExperiencesUpdateInstanceResponse, AppClipAdvancedExperiencesUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appClipAdvancedExperiences/{id}'
    });
};

export const appClipAppStoreReviewDetailsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipAppStoreReviewDetailsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppClipAppStoreReviewDetailsCreateInstanceResponse, AppClipAppStoreReviewDetailsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appClipAppStoreReviewDetails'
    });
};

export const appClipAppStoreReviewDetailsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipAppStoreReviewDetailsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppClipAppStoreReviewDetailsGetInstanceResponse, AppClipAppStoreReviewDetailsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appClipAppStoreReviewDetails/{id}'
    });
};

export const appClipAppStoreReviewDetailsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipAppStoreReviewDetailsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppClipAppStoreReviewDetailsUpdateInstanceResponse, AppClipAppStoreReviewDetailsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appClipAppStoreReviewDetails/{id}'
    });
};

export const appClipDefaultExperienceLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipDefaultExperienceLocalizationsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppClipDefaultExperienceLocalizationsCreateInstanceResponse, AppClipDefaultExperienceLocalizationsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appClipDefaultExperienceLocalizations'
    });
};

export const appClipDefaultExperienceLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipDefaultExperienceLocalizationsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppClipDefaultExperienceLocalizationsGetInstanceResponse, AppClipDefaultExperienceLocalizationsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appClipDefaultExperienceLocalizations/{id}'
    });
};

export const appClipDefaultExperienceLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipDefaultExperienceLocalizationsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppClipDefaultExperienceLocalizationsUpdateInstanceResponse, AppClipDefaultExperienceLocalizationsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appClipDefaultExperienceLocalizations/{id}'
    });
};

export const appClipDefaultExperienceLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipDefaultExperienceLocalizationsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AppClipDefaultExperienceLocalizationsDeleteInstanceResponse, AppClipDefaultExperienceLocalizationsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appClipDefaultExperienceLocalizations/{id}'
    });
};

export const appClipDefaultExperiencesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipDefaultExperiencesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppClipDefaultExperiencesCreateInstanceResponse, AppClipDefaultExperiencesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appClipDefaultExperiences'
    });
};

export const appClipDefaultExperiencesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipDefaultExperiencesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppClipDefaultExperiencesGetInstanceResponse, AppClipDefaultExperiencesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appClipDefaultExperiences/{id}'
    });
};

export const appClipDefaultExperiencesUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipDefaultExperiencesUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppClipDefaultExperiencesUpdateInstanceResponse, AppClipDefaultExperiencesUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appClipDefaultExperiences/{id}'
    });
};

export const appClipDefaultExperiencesDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipDefaultExperiencesDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AppClipDefaultExperiencesDeleteInstanceResponse, AppClipDefaultExperiencesDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appClipDefaultExperiences/{id}'
    });
};

export const appClipHeaderImagesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipHeaderImagesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppClipHeaderImagesCreateInstanceResponse, AppClipHeaderImagesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appClipHeaderImages'
    });
};

export const appClipHeaderImagesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipHeaderImagesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppClipHeaderImagesGetInstanceResponse, AppClipHeaderImagesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appClipHeaderImages/{id}'
    });
};

export const appClipHeaderImagesUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipHeaderImagesUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppClipHeaderImagesUpdateInstanceResponse, AppClipHeaderImagesUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appClipHeaderImages/{id}'
    });
};

export const appClipHeaderImagesDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipHeaderImagesDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AppClipHeaderImagesDeleteInstanceResponse, AppClipHeaderImagesDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appClipHeaderImages/{id}'
    });
};

export const appClipsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppClipsGetInstanceResponse, AppClipsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appClips/{id}'
    });
};

export const appCustomProductPageLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppCustomProductPageLocalizationsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppCustomProductPageLocalizationsCreateInstanceResponse, AppCustomProductPageLocalizationsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appCustomProductPageLocalizations'
    });
};

export const appCustomProductPageLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppCustomProductPageLocalizationsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppCustomProductPageLocalizationsGetInstanceResponse, AppCustomProductPageLocalizationsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appCustomProductPageLocalizations/{id}'
    });
};

export const appCustomProductPageLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppCustomProductPageLocalizationsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppCustomProductPageLocalizationsUpdateInstanceResponse, AppCustomProductPageLocalizationsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appCustomProductPageLocalizations/{id}'
    });
};

export const appCustomProductPageLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppCustomProductPageLocalizationsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AppCustomProductPageLocalizationsDeleteInstanceResponse, AppCustomProductPageLocalizationsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appCustomProductPageLocalizations/{id}'
    });
};

export const appCustomProductPageVersionsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppCustomProductPageVersionsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppCustomProductPageVersionsCreateInstanceResponse, AppCustomProductPageVersionsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appCustomProductPageVersions'
    });
};

export const appCustomProductPageVersionsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppCustomProductPageVersionsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppCustomProductPageVersionsGetInstanceResponse, AppCustomProductPageVersionsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appCustomProductPageVersions/{id}'
    });
};

export const appCustomProductPageVersionsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppCustomProductPageVersionsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppCustomProductPageVersionsUpdateInstanceResponse, AppCustomProductPageVersionsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appCustomProductPageVersions/{id}'
    });
};

export const appCustomProductPagesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppCustomProductPagesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppCustomProductPagesCreateInstanceResponse, AppCustomProductPagesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appCustomProductPages'
    });
};

export const appCustomProductPagesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppCustomProductPagesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppCustomProductPagesGetInstanceResponse, AppCustomProductPagesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appCustomProductPages/{id}'
    });
};

export const appCustomProductPagesUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppCustomProductPagesUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppCustomProductPagesUpdateInstanceResponse, AppCustomProductPagesUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appCustomProductPages/{id}'
    });
};

export const appCustomProductPagesDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppCustomProductPagesDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AppCustomProductPagesDeleteInstanceResponse, AppCustomProductPagesDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appCustomProductPages/{id}'
    });
};

export const appEncryptionDeclarationDocumentsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEncryptionDeclarationDocumentsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppEncryptionDeclarationDocumentsCreateInstanceResponse, AppEncryptionDeclarationDocumentsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appEncryptionDeclarationDocuments'
    });
};

export const appEncryptionDeclarationDocumentsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEncryptionDeclarationDocumentsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppEncryptionDeclarationDocumentsGetInstanceResponse, AppEncryptionDeclarationDocumentsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appEncryptionDeclarationDocuments/{id}'
    });
};

export const appEncryptionDeclarationDocumentsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEncryptionDeclarationDocumentsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppEncryptionDeclarationDocumentsUpdateInstanceResponse, AppEncryptionDeclarationDocumentsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appEncryptionDeclarationDocuments/{id}'
    });
};

export const appEncryptionDeclarationsGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<AppEncryptionDeclarationsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppEncryptionDeclarationsGetCollectionResponse, AppEncryptionDeclarationsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/appEncryptionDeclarations',
        responseTransformer: AppEncryptionDeclarationsGetCollectionResponseTransformer
    });
};

export const appEncryptionDeclarationsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEncryptionDeclarationsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppEncryptionDeclarationsCreateInstanceResponse, AppEncryptionDeclarationsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appEncryptionDeclarations',
        responseTransformer: AppEncryptionDeclarationsCreateInstanceResponseTransformer
    });
};

export const appEncryptionDeclarationsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEncryptionDeclarationsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppEncryptionDeclarationsGetInstanceResponse, AppEncryptionDeclarationsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appEncryptionDeclarations/{id}',
        responseTransformer: AppEncryptionDeclarationsGetInstanceResponseTransformer
    });
};

export const appEventLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEventLocalizationsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppEventLocalizationsCreateInstanceResponse, AppEventLocalizationsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appEventLocalizations'
    });
};

export const appEventLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEventLocalizationsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppEventLocalizationsGetInstanceResponse, AppEventLocalizationsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appEventLocalizations/{id}'
    });
};

export const appEventLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEventLocalizationsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppEventLocalizationsUpdateInstanceResponse, AppEventLocalizationsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appEventLocalizations/{id}'
    });
};

export const appEventLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEventLocalizationsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AppEventLocalizationsDeleteInstanceResponse, AppEventLocalizationsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appEventLocalizations/{id}'
    });
};

export const appEventScreenshotsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEventScreenshotsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppEventScreenshotsCreateInstanceResponse, AppEventScreenshotsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appEventScreenshots'
    });
};

export const appEventScreenshotsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEventScreenshotsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppEventScreenshotsGetInstanceResponse, AppEventScreenshotsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appEventScreenshots/{id}'
    });
};

export const appEventScreenshotsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEventScreenshotsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppEventScreenshotsUpdateInstanceResponse, AppEventScreenshotsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appEventScreenshots/{id}'
    });
};

export const appEventScreenshotsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEventScreenshotsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AppEventScreenshotsDeleteInstanceResponse, AppEventScreenshotsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appEventScreenshots/{id}'
    });
};

export const appEventVideoClipsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEventVideoClipsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppEventVideoClipsCreateInstanceResponse, AppEventVideoClipsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appEventVideoClips'
    });
};

export const appEventVideoClipsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEventVideoClipsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppEventVideoClipsGetInstanceResponse, AppEventVideoClipsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appEventVideoClips/{id}'
    });
};

export const appEventVideoClipsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEventVideoClipsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppEventVideoClipsUpdateInstanceResponse, AppEventVideoClipsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appEventVideoClips/{id}'
    });
};

export const appEventVideoClipsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEventVideoClipsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AppEventVideoClipsDeleteInstanceResponse, AppEventVideoClipsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appEventVideoClips/{id}'
    });
};

export const appEventsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEventsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppEventsCreateInstanceResponse, AppEventsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appEvents'
    });
};

export const appEventsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEventsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppEventsGetInstanceResponse, AppEventsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appEvents/{id}'
    });
};

export const appEventsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEventsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppEventsUpdateInstanceResponse, AppEventsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appEvents/{id}'
    });
};

export const appEventsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEventsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AppEventsDeleteInstanceResponse, AppEventsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appEvents/{id}'
    });
};

export const appInfoLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppInfoLocalizationsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppInfoLocalizationsCreateInstanceResponse, AppInfoLocalizationsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appInfoLocalizations'
    });
};

export const appInfoLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppInfoLocalizationsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppInfoLocalizationsGetInstanceResponse, AppInfoLocalizationsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appInfoLocalizations/{id}'
    });
};

export const appInfoLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppInfoLocalizationsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppInfoLocalizationsUpdateInstanceResponse, AppInfoLocalizationsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appInfoLocalizations/{id}'
    });
};

export const appInfoLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppInfoLocalizationsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AppInfoLocalizationsDeleteInstanceResponse, AppInfoLocalizationsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appInfoLocalizations/{id}'
    });
};

export const appInfosGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppInfosGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppInfosGetInstanceResponse, AppInfosGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appInfos/{id}'
    });
};

export const appInfosUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppInfosUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppInfosUpdateInstanceResponse, AppInfosUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appInfos/{id}'
    });
};

export const appPreviewSetsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppPreviewSetsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppPreviewSetsCreateInstanceResponse, AppPreviewSetsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appPreviewSets'
    });
};

export const appPreviewSetsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppPreviewSetsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppPreviewSetsGetInstanceResponse, AppPreviewSetsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appPreviewSets/{id}'
    });
};

export const appPreviewSetsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppPreviewSetsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AppPreviewSetsDeleteInstanceResponse, AppPreviewSetsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appPreviewSets/{id}'
    });
};

export const appPreviewsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppPreviewsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppPreviewsCreateInstanceResponse, AppPreviewsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appPreviews'
    });
};

export const appPreviewsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppPreviewsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppPreviewsGetInstanceResponse, AppPreviewsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appPreviews/{id}'
    });
};

export const appPreviewsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppPreviewsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppPreviewsUpdateInstanceResponse, AppPreviewsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appPreviews/{id}'
    });
};

export const appPreviewsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppPreviewsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AppPreviewsDeleteInstanceResponse, AppPreviewsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appPreviews/{id}'
    });
};

export const appPricePointsV3GetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppPricePointsV3GetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppPricePointsV3GetInstanceResponse, AppPricePointsV3GetInstanceError, ThrowOnError>({
        ...options,
        url: '/v3/appPricePoints/{id}'
    });
};

export const appPriceSchedulesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppPriceSchedulesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppPriceSchedulesCreateInstanceResponse, AppPriceSchedulesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appPriceSchedules'
    });
};

export const appPriceSchedulesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppPriceSchedulesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppPriceSchedulesGetInstanceResponse, AppPriceSchedulesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appPriceSchedules/{id}'
    });
};

export const appScreenshotSetsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppScreenshotSetsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppScreenshotSetsCreateInstanceResponse, AppScreenshotSetsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appScreenshotSets'
    });
};

export const appScreenshotSetsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppScreenshotSetsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppScreenshotSetsGetInstanceResponse, AppScreenshotSetsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appScreenshotSets/{id}'
    });
};

export const appScreenshotSetsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppScreenshotSetsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AppScreenshotSetsDeleteInstanceResponse, AppScreenshotSetsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appScreenshotSets/{id}'
    });
};

export const appScreenshotsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppScreenshotsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppScreenshotsCreateInstanceResponse, AppScreenshotsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appScreenshots'
    });
};

export const appScreenshotsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppScreenshotsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppScreenshotsGetInstanceResponse, AppScreenshotsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appScreenshots/{id}'
    });
};

export const appScreenshotsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppScreenshotsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppScreenshotsUpdateInstanceResponse, AppScreenshotsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appScreenshots/{id}'
    });
};

export const appScreenshotsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppScreenshotsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AppScreenshotsDeleteInstanceResponse, AppScreenshotsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appScreenshots/{id}'
    });
};

export const appStoreReviewAttachmentsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreReviewAttachmentsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppStoreReviewAttachmentsCreateInstanceResponse, AppStoreReviewAttachmentsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreReviewAttachments'
    });
};

export const appStoreReviewAttachmentsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreReviewAttachmentsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreReviewAttachmentsGetInstanceResponse, AppStoreReviewAttachmentsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreReviewAttachments/{id}'
    });
};

export const appStoreReviewAttachmentsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreReviewAttachmentsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppStoreReviewAttachmentsUpdateInstanceResponse, AppStoreReviewAttachmentsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreReviewAttachments/{id}'
    });
};

export const appStoreReviewAttachmentsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreReviewAttachmentsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AppStoreReviewAttachmentsDeleteInstanceResponse, AppStoreReviewAttachmentsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreReviewAttachments/{id}'
    });
};

export const appStoreReviewDetailsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreReviewDetailsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppStoreReviewDetailsCreateInstanceResponse, AppStoreReviewDetailsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreReviewDetails'
    });
};

export const appStoreReviewDetailsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreReviewDetailsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreReviewDetailsGetInstanceResponse, AppStoreReviewDetailsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreReviewDetails/{id}'
    });
};

export const appStoreReviewDetailsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreReviewDetailsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppStoreReviewDetailsUpdateInstanceResponse, AppStoreReviewDetailsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreReviewDetails/{id}'
    });
};

export const appStoreVersionExperimentTreatmentLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionExperimentTreatmentLocalizationsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppStoreVersionExperimentTreatmentLocalizationsCreateInstanceResponse, AppStoreVersionExperimentTreatmentLocalizationsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionExperimentTreatmentLocalizations'
    });
};

export const appStoreVersionExperimentTreatmentLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionExperimentTreatmentLocalizationsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionExperimentTreatmentLocalizationsGetInstanceResponse, AppStoreVersionExperimentTreatmentLocalizationsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionExperimentTreatmentLocalizations/{id}'
    });
};

export const appStoreVersionExperimentTreatmentLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionExperimentTreatmentLocalizationsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AppStoreVersionExperimentTreatmentLocalizationsDeleteInstanceResponse, AppStoreVersionExperimentTreatmentLocalizationsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionExperimentTreatmentLocalizations/{id}'
    });
};

export const appStoreVersionExperimentTreatmentsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionExperimentTreatmentsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppStoreVersionExperimentTreatmentsCreateInstanceResponse, AppStoreVersionExperimentTreatmentsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionExperimentTreatments',
        responseTransformer: AppStoreVersionExperimentTreatmentsCreateInstanceResponseTransformer
    });
};

export const appStoreVersionExperimentTreatmentsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionExperimentTreatmentsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionExperimentTreatmentsGetInstanceResponse, AppStoreVersionExperimentTreatmentsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionExperimentTreatments/{id}',
        responseTransformer: AppStoreVersionExperimentTreatmentsGetInstanceResponseTransformer
    });
};

export const appStoreVersionExperimentTreatmentsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionExperimentTreatmentsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppStoreVersionExperimentTreatmentsUpdateInstanceResponse, AppStoreVersionExperimentTreatmentsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionExperimentTreatments/{id}',
        responseTransformer: AppStoreVersionExperimentTreatmentsUpdateInstanceResponseTransformer
    });
};

export const appStoreVersionExperimentTreatmentsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionExperimentTreatmentsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AppStoreVersionExperimentTreatmentsDeleteInstanceResponse, AppStoreVersionExperimentTreatmentsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionExperimentTreatments/{id}'
    });
};

export const appStoreVersionExperimentsV2CreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionExperimentsV2CreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppStoreVersionExperimentsV2CreateInstanceResponse, AppStoreVersionExperimentsV2CreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v2/appStoreVersionExperiments',
        responseTransformer: AppStoreVersionExperimentsV2CreateInstanceResponseTransformer
    });
};

export const appStoreVersionExperimentsV2GetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionExperimentsV2GetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionExperimentsV2GetInstanceResponse, AppStoreVersionExperimentsV2GetInstanceError, ThrowOnError>({
        ...options,
        url: '/v2/appStoreVersionExperiments/{id}',
        responseTransformer: AppStoreVersionExperimentsV2GetInstanceResponseTransformer
    });
};

export const appStoreVersionExperimentsV2UpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionExperimentsV2UpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppStoreVersionExperimentsV2UpdateInstanceResponse, AppStoreVersionExperimentsV2UpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v2/appStoreVersionExperiments/{id}',
        responseTransformer: AppStoreVersionExperimentsV2UpdateInstanceResponseTransformer
    });
};

export const appStoreVersionExperimentsV2DeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionExperimentsV2DeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AppStoreVersionExperimentsV2DeleteInstanceResponse, AppStoreVersionExperimentsV2DeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v2/appStoreVersionExperiments/{id}'
    });
};

/**
 * @deprecated
 */
export const appStoreVersionExperimentsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionExperimentsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppStoreVersionExperimentsCreateInstanceResponse, AppStoreVersionExperimentsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionExperiments',
        responseTransformer: AppStoreVersionExperimentsCreateInstanceResponseTransformer
    });
};

/**
 * @deprecated
 */
export const appStoreVersionExperimentsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionExperimentsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionExperimentsGetInstanceResponse, AppStoreVersionExperimentsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionExperiments/{id}',
        responseTransformer: AppStoreVersionExperimentsGetInstanceResponseTransformer
    });
};

/**
 * @deprecated
 */
export const appStoreVersionExperimentsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionExperimentsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppStoreVersionExperimentsUpdateInstanceResponse, AppStoreVersionExperimentsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionExperiments/{id}',
        responseTransformer: AppStoreVersionExperimentsUpdateInstanceResponseTransformer
    });
};

/**
 * @deprecated
 */
export const appStoreVersionExperimentsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionExperimentsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AppStoreVersionExperimentsDeleteInstanceResponse, AppStoreVersionExperimentsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionExperiments/{id}'
    });
};

export const appStoreVersionLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionLocalizationsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppStoreVersionLocalizationsCreateInstanceResponse, AppStoreVersionLocalizationsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionLocalizations'
    });
};

export const appStoreVersionLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionLocalizationsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionLocalizationsGetInstanceResponse, AppStoreVersionLocalizationsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionLocalizations/{id}'
    });
};

export const appStoreVersionLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionLocalizationsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppStoreVersionLocalizationsUpdateInstanceResponse, AppStoreVersionLocalizationsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionLocalizations/{id}'
    });
};

export const appStoreVersionLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionLocalizationsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AppStoreVersionLocalizationsDeleteInstanceResponse, AppStoreVersionLocalizationsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionLocalizations/{id}'
    });
};

export const appStoreVersionPhasedReleasesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionPhasedReleasesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppStoreVersionPhasedReleasesCreateInstanceResponse, AppStoreVersionPhasedReleasesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionPhasedReleases',
        responseTransformer: AppStoreVersionPhasedReleasesCreateInstanceResponseTransformer
    });
};

export const appStoreVersionPhasedReleasesUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionPhasedReleasesUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppStoreVersionPhasedReleasesUpdateInstanceResponse, AppStoreVersionPhasedReleasesUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionPhasedReleases/{id}',
        responseTransformer: AppStoreVersionPhasedReleasesUpdateInstanceResponseTransformer
    });
};

export const appStoreVersionPhasedReleasesDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionPhasedReleasesDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AppStoreVersionPhasedReleasesDeleteInstanceResponse, AppStoreVersionPhasedReleasesDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionPhasedReleases/{id}'
    });
};

export const appStoreVersionPromotionsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionPromotionsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppStoreVersionPromotionsCreateInstanceResponse, AppStoreVersionPromotionsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionPromotions'
    });
};

export const appStoreVersionReleaseRequestsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionReleaseRequestsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppStoreVersionReleaseRequestsCreateInstanceResponse, AppStoreVersionReleaseRequestsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionReleaseRequests'
    });
};

/**
 * @deprecated
 */
export const appStoreVersionSubmissionsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionSubmissionsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppStoreVersionSubmissionsCreateInstanceResponse, AppStoreVersionSubmissionsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionSubmissions',
        responseTransformer: AppStoreVersionSubmissionsCreateInstanceResponseTransformer
    });
};

/**
 * @deprecated
 */
export const appStoreVersionSubmissionsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionSubmissionsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AppStoreVersionSubmissionsDeleteInstanceResponse, AppStoreVersionSubmissionsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionSubmissions/{id}'
    });
};

export const appStoreVersionsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppStoreVersionsCreateInstanceResponse, AppStoreVersionsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersions',
        responseTransformer: AppStoreVersionsCreateInstanceResponseTransformer
    });
};

export const appStoreVersionsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionsGetInstanceResponse, AppStoreVersionsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersions/{id}',
        responseTransformer: AppStoreVersionsGetInstanceResponseTransformer
    });
};

export const appStoreVersionsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppStoreVersionsUpdateInstanceResponse, AppStoreVersionsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersions/{id}',
        responseTransformer: AppStoreVersionsUpdateInstanceResponseTransformer
    });
};

export const appStoreVersionsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AppStoreVersionsDeleteInstanceResponse, AppStoreVersionsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersions/{id}'
    });
};

export const appsGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<AppsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsGetCollectionResponse, AppsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/apps'
    });
};

export const appsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsGetInstanceResponse, AppsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}'
    });
};

export const appsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppsUpdateInstanceResponse, AppsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}'
    });
};

export const betaAppClipInvocationLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaAppClipInvocationLocalizationsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<BetaAppClipInvocationLocalizationsCreateInstanceResponse, BetaAppClipInvocationLocalizationsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaAppClipInvocationLocalizations'
    });
};

export const betaAppClipInvocationLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaAppClipInvocationLocalizationsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<BetaAppClipInvocationLocalizationsUpdateInstanceResponse, BetaAppClipInvocationLocalizationsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaAppClipInvocationLocalizations/{id}'
    });
};

export const betaAppClipInvocationLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaAppClipInvocationLocalizationsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<BetaAppClipInvocationLocalizationsDeleteInstanceResponse, BetaAppClipInvocationLocalizationsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaAppClipInvocationLocalizations/{id}'
    });
};

export const betaAppClipInvocationsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaAppClipInvocationsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<BetaAppClipInvocationsCreateInstanceResponse, BetaAppClipInvocationsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaAppClipInvocations'
    });
};

export const betaAppClipInvocationsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaAppClipInvocationsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaAppClipInvocationsGetInstanceResponse, BetaAppClipInvocationsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaAppClipInvocations/{id}'
    });
};

export const betaAppClipInvocationsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaAppClipInvocationsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<BetaAppClipInvocationsUpdateInstanceResponse, BetaAppClipInvocationsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaAppClipInvocations/{id}'
    });
};

export const betaAppClipInvocationsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaAppClipInvocationsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<BetaAppClipInvocationsDeleteInstanceResponse, BetaAppClipInvocationsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaAppClipInvocations/{id}'
    });
};

export const betaAppLocalizationsGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<BetaAppLocalizationsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaAppLocalizationsGetCollectionResponse, BetaAppLocalizationsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/betaAppLocalizations'
    });
};

export const betaAppLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaAppLocalizationsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<BetaAppLocalizationsCreateInstanceResponse, BetaAppLocalizationsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaAppLocalizations'
    });
};

export const betaAppLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaAppLocalizationsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaAppLocalizationsGetInstanceResponse, BetaAppLocalizationsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaAppLocalizations/{id}'
    });
};

export const betaAppLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaAppLocalizationsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<BetaAppLocalizationsUpdateInstanceResponse, BetaAppLocalizationsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaAppLocalizations/{id}'
    });
};

export const betaAppLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaAppLocalizationsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<BetaAppLocalizationsDeleteInstanceResponse, BetaAppLocalizationsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaAppLocalizations/{id}'
    });
};

export const betaAppReviewDetailsGetCollection = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaAppReviewDetailsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaAppReviewDetailsGetCollectionResponse, BetaAppReviewDetailsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/betaAppReviewDetails'
    });
};

export const betaAppReviewDetailsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaAppReviewDetailsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaAppReviewDetailsGetInstanceResponse, BetaAppReviewDetailsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaAppReviewDetails/{id}'
    });
};

export const betaAppReviewDetailsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaAppReviewDetailsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<BetaAppReviewDetailsUpdateInstanceResponse, BetaAppReviewDetailsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaAppReviewDetails/{id}'
    });
};

export const betaAppReviewSubmissionsGetCollection = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaAppReviewSubmissionsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaAppReviewSubmissionsGetCollectionResponse, BetaAppReviewSubmissionsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/betaAppReviewSubmissions',
        responseTransformer: BetaAppReviewSubmissionsGetCollectionResponseTransformer
    });
};

export const betaAppReviewSubmissionsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaAppReviewSubmissionsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<BetaAppReviewSubmissionsCreateInstanceResponse, BetaAppReviewSubmissionsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaAppReviewSubmissions',
        responseTransformer: BetaAppReviewSubmissionsCreateInstanceResponseTransformer
    });
};

export const betaAppReviewSubmissionsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaAppReviewSubmissionsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaAppReviewSubmissionsGetInstanceResponse, BetaAppReviewSubmissionsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaAppReviewSubmissions/{id}',
        responseTransformer: BetaAppReviewSubmissionsGetInstanceResponseTransformer
    });
};

export const betaBuildLocalizationsGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<BetaBuildLocalizationsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaBuildLocalizationsGetCollectionResponse, BetaBuildLocalizationsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/betaBuildLocalizations',
        responseTransformer: BetaBuildLocalizationsGetCollectionResponseTransformer
    });
};

export const betaBuildLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaBuildLocalizationsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<BetaBuildLocalizationsCreateInstanceResponse, BetaBuildLocalizationsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaBuildLocalizations',
        responseTransformer: BetaBuildLocalizationsCreateInstanceResponseTransformer
    });
};

export const betaBuildLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaBuildLocalizationsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaBuildLocalizationsGetInstanceResponse, BetaBuildLocalizationsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaBuildLocalizations/{id}',
        responseTransformer: BetaBuildLocalizationsGetInstanceResponseTransformer
    });
};

export const betaBuildLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaBuildLocalizationsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<BetaBuildLocalizationsUpdateInstanceResponse, BetaBuildLocalizationsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaBuildLocalizations/{id}',
        responseTransformer: BetaBuildLocalizationsUpdateInstanceResponseTransformer
    });
};

export const betaBuildLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaBuildLocalizationsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<BetaBuildLocalizationsDeleteInstanceResponse, BetaBuildLocalizationsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaBuildLocalizations/{id}'
    });
};

export const betaGroupsGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<BetaGroupsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaGroupsGetCollectionResponse, BetaGroupsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/betaGroups',
        responseTransformer: BetaGroupsGetCollectionResponseTransformer
    });
};

export const betaGroupsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaGroupsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<BetaGroupsCreateInstanceResponse, BetaGroupsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaGroups',
        responseTransformer: BetaGroupsCreateInstanceResponseTransformer
    });
};

export const betaGroupsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaGroupsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaGroupsGetInstanceResponse, BetaGroupsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaGroups/{id}',
        responseTransformer: BetaGroupsGetInstanceResponseTransformer
    });
};

export const betaGroupsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaGroupsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<BetaGroupsUpdateInstanceResponse, BetaGroupsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaGroups/{id}',
        responseTransformer: BetaGroupsUpdateInstanceResponseTransformer
    });
};

export const betaGroupsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaGroupsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<BetaGroupsDeleteInstanceResponse, BetaGroupsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaGroups/{id}'
    });
};

export const betaLicenseAgreementsGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<BetaLicenseAgreementsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaLicenseAgreementsGetCollectionResponse, BetaLicenseAgreementsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/betaLicenseAgreements'
    });
};

export const betaLicenseAgreementsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaLicenseAgreementsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaLicenseAgreementsGetInstanceResponse, BetaLicenseAgreementsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaLicenseAgreements/{id}'
    });
};

export const betaLicenseAgreementsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaLicenseAgreementsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<BetaLicenseAgreementsUpdateInstanceResponse, BetaLicenseAgreementsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaLicenseAgreements/{id}'
    });
};

export const betaRecruitmentCriteriaCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaRecruitmentCriteriaCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<BetaRecruitmentCriteriaCreateInstanceResponse, BetaRecruitmentCriteriaCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaRecruitmentCriteria',
        responseTransformer: BetaRecruitmentCriteriaCreateInstanceResponseTransformer
    });
};

export const betaRecruitmentCriteriaUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaRecruitmentCriteriaUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<BetaRecruitmentCriteriaUpdateInstanceResponse, BetaRecruitmentCriteriaUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaRecruitmentCriteria/{id}',
        responseTransformer: BetaRecruitmentCriteriaUpdateInstanceResponseTransformer
    });
};

export const betaRecruitmentCriteriaDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaRecruitmentCriteriaDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<BetaRecruitmentCriteriaDeleteInstanceResponse, BetaRecruitmentCriteriaDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaRecruitmentCriteria/{id}'
    });
};

export const betaRecruitmentCriterionOptionsGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<BetaRecruitmentCriterionOptionsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaRecruitmentCriterionOptionsGetCollectionResponse, BetaRecruitmentCriterionOptionsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/betaRecruitmentCriterionOptions'
    });
};

export const betaTesterInvitationsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaTesterInvitationsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<BetaTesterInvitationsCreateInstanceResponse, BetaTesterInvitationsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaTesterInvitations'
    });
};

export const betaTestersGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<BetaTestersGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaTestersGetCollectionResponse, BetaTestersGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/betaTesters'
    });
};

export const betaTestersCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaTestersCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<BetaTestersCreateInstanceResponse, BetaTestersCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaTesters'
    });
};

export const betaTestersGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaTestersGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaTestersGetInstanceResponse, BetaTestersGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaTesters/{id}'
    });
};

export const betaTestersDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaTestersDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<BetaTestersDeleteInstanceResponse, BetaTestersDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/betaTesters/{id}'
    });
};

export const buildBetaDetailsGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<BuildBetaDetailsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<BuildBetaDetailsGetCollectionResponse, BuildBetaDetailsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/buildBetaDetails',
        responseTransformer: BuildBetaDetailsGetCollectionResponseTransformer
    });
};

export const buildBetaDetailsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildBetaDetailsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<BuildBetaDetailsGetInstanceResponse, BuildBetaDetailsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/buildBetaDetails/{id}',
        responseTransformer: BuildBetaDetailsGetInstanceResponseTransformer
    });
};

export const buildBetaDetailsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildBetaDetailsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<BuildBetaDetailsUpdateInstanceResponse, BuildBetaDetailsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/buildBetaDetails/{id}',
        responseTransformer: BuildBetaDetailsUpdateInstanceResponseTransformer
    });
};

export const buildBetaNotificationsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildBetaNotificationsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<BuildBetaNotificationsCreateInstanceResponse, BuildBetaNotificationsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/buildBetaNotifications'
    });
};

export const buildsGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<BuildsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<BuildsGetCollectionResponse, BuildsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/builds',
        responseTransformer: BuildsGetCollectionResponseTransformer
    });
};

export const buildsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<BuildsGetInstanceResponse, BuildsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/builds/{id}',
        responseTransformer: BuildsGetInstanceResponseTransformer
    });
};

export const buildsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<BuildsUpdateInstanceResponse, BuildsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/builds/{id}',
        responseTransformer: BuildsUpdateInstanceResponseTransformer
    });
};

export const bundleIdCapabilitiesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BundleIdCapabilitiesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<BundleIdCapabilitiesCreateInstanceResponse, BundleIdCapabilitiesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/bundleIdCapabilities'
    });
};

export const bundleIdCapabilitiesUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BundleIdCapabilitiesUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<BundleIdCapabilitiesUpdateInstanceResponse, BundleIdCapabilitiesUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/bundleIdCapabilities/{id}'
    });
};

export const bundleIdCapabilitiesDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BundleIdCapabilitiesDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<BundleIdCapabilitiesDeleteInstanceResponse, BundleIdCapabilitiesDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/bundleIdCapabilities/{id}'
    });
};

export const bundleIdsGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<BundleIdsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<BundleIdsGetCollectionResponse, BundleIdsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/bundleIds'
    });
};

export const bundleIdsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BundleIdsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<BundleIdsCreateInstanceResponse, BundleIdsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/bundleIds'
    });
};

export const bundleIdsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BundleIdsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<BundleIdsGetInstanceResponse, BundleIdsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/bundleIds/{id}'
    });
};

export const bundleIdsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BundleIdsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<BundleIdsUpdateInstanceResponse, BundleIdsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/bundleIds/{id}'
    });
};

export const bundleIdsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BundleIdsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<BundleIdsDeleteInstanceResponse, BundleIdsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/bundleIds/{id}'
    });
};

export const certificatesGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<CertificatesGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<CertificatesGetCollectionResponse, CertificatesGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/certificates',
        responseTransformer: CertificatesGetCollectionResponseTransformer
    });
};

export const certificatesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CertificatesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<CertificatesCreateInstanceResponse, CertificatesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/certificates',
        responseTransformer: CertificatesCreateInstanceResponseTransformer
    });
};

export const certificatesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CertificatesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<CertificatesGetInstanceResponse, CertificatesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/certificates/{id}',
        responseTransformer: CertificatesGetInstanceResponseTransformer
    });
};

export const certificatesUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CertificatesUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<CertificatesUpdateInstanceResponse, CertificatesUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/certificates/{id}',
        responseTransformer: CertificatesUpdateInstanceResponseTransformer
    });
};

export const certificatesDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CertificatesDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<CertificatesDeleteInstanceResponse, CertificatesDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/certificates/{id}'
    });
};

export const ciArtifactsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiArtifactsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiArtifactsGetInstanceResponse, CiArtifactsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/ciArtifacts/{id}'
    });
};

export const ciBuildActionsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiBuildActionsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiBuildActionsGetInstanceResponse, CiBuildActionsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/ciBuildActions/{id}',
        responseTransformer: CiBuildActionsGetInstanceResponseTransformer
    });
};

export const ciBuildRunsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiBuildRunsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<CiBuildRunsCreateInstanceResponse, CiBuildRunsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/ciBuildRuns',
        responseTransformer: CiBuildRunsCreateInstanceResponseTransformer
    });
};

export const ciBuildRunsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiBuildRunsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiBuildRunsGetInstanceResponse, CiBuildRunsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/ciBuildRuns/{id}',
        responseTransformer: CiBuildRunsGetInstanceResponseTransformer
    });
};

export const ciIssuesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiIssuesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiIssuesGetInstanceResponse, CiIssuesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/ciIssues/{id}'
    });
};

export const ciMacOsVersionsGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<CiMacOsVersionsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiMacOsVersionsGetCollectionResponse, CiMacOsVersionsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/ciMacOsVersions'
    });
};

export const ciMacOsVersionsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiMacOsVersionsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiMacOsVersionsGetInstanceResponse, CiMacOsVersionsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/ciMacOsVersions/{id}'
    });
};

export const ciProductsGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<CiProductsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiProductsGetCollectionResponse, CiProductsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/ciProducts',
        responseTransformer: CiProductsGetCollectionResponseTransformer
    });
};

export const ciProductsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiProductsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiProductsGetInstanceResponse, CiProductsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/ciProducts/{id}',
        responseTransformer: CiProductsGetInstanceResponseTransformer
    });
};

export const ciProductsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiProductsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<CiProductsDeleteInstanceResponse, CiProductsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/ciProducts/{id}'
    });
};

export const ciTestResultsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiTestResultsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiTestResultsGetInstanceResponse, CiTestResultsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/ciTestResults/{id}'
    });
};

export const ciWorkflowsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiWorkflowsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<CiWorkflowsCreateInstanceResponse, CiWorkflowsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/ciWorkflows',
        responseTransformer: CiWorkflowsCreateInstanceResponseTransformer
    });
};

export const ciWorkflowsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiWorkflowsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiWorkflowsGetInstanceResponse, CiWorkflowsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/ciWorkflows/{id}',
        responseTransformer: CiWorkflowsGetInstanceResponseTransformer
    });
};

export const ciWorkflowsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiWorkflowsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<CiWorkflowsUpdateInstanceResponse, CiWorkflowsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/ciWorkflows/{id}',
        responseTransformer: CiWorkflowsUpdateInstanceResponseTransformer
    });
};

export const ciWorkflowsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiWorkflowsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<CiWorkflowsDeleteInstanceResponse, CiWorkflowsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/ciWorkflows/{id}'
    });
};

export const ciXcodeVersionsGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<CiXcodeVersionsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiXcodeVersionsGetCollectionResponse, CiXcodeVersionsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/ciXcodeVersions'
    });
};

export const ciXcodeVersionsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiXcodeVersionsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiXcodeVersionsGetInstanceResponse, CiXcodeVersionsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/ciXcodeVersions/{id}'
    });
};

export const customerReviewResponsesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CustomerReviewResponsesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<CustomerReviewResponsesCreateInstanceResponse, CustomerReviewResponsesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/customerReviewResponses',
        responseTransformer: CustomerReviewResponsesCreateInstanceResponseTransformer
    });
};

export const customerReviewResponsesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CustomerReviewResponsesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<CustomerReviewResponsesGetInstanceResponse, CustomerReviewResponsesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/customerReviewResponses/{id}',
        responseTransformer: CustomerReviewResponsesGetInstanceResponseTransformer
    });
};

export const customerReviewResponsesDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CustomerReviewResponsesDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<CustomerReviewResponsesDeleteInstanceResponse, CustomerReviewResponsesDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/customerReviewResponses/{id}'
    });
};

export const customerReviewsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CustomerReviewsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<CustomerReviewsGetInstanceResponse, CustomerReviewsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/customerReviews/{id}',
        responseTransformer: CustomerReviewsGetInstanceResponseTransformer
    });
};

export const devicesGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<DevicesGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<DevicesGetCollectionResponse, DevicesGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/devices',
        responseTransformer: DevicesGetCollectionResponseTransformer
    });
};

export const devicesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DevicesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<DevicesCreateInstanceResponse, DevicesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/devices',
        responseTransformer: DevicesCreateInstanceResponseTransformer
    });
};

export const devicesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DevicesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<DevicesGetInstanceResponse, DevicesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/devices/{id}',
        responseTransformer: DevicesGetInstanceResponseTransformer
    });
};

export const devicesUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DevicesUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<DevicesUpdateInstanceResponse, DevicesUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/devices/{id}',
        responseTransformer: DevicesUpdateInstanceResponseTransformer
    });
};

export const endAppAvailabilityPreOrdersCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<EndAppAvailabilityPreOrdersCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<EndAppAvailabilityPreOrdersCreateInstanceResponse, EndAppAvailabilityPreOrdersCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/endAppAvailabilityPreOrders'
    });
};

export const endUserLicenseAgreementsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<EndUserLicenseAgreementsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<EndUserLicenseAgreementsCreateInstanceResponse, EndUserLicenseAgreementsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/endUserLicenseAgreements'
    });
};

export const endUserLicenseAgreementsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<EndUserLicenseAgreementsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<EndUserLicenseAgreementsGetInstanceResponse, EndUserLicenseAgreementsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/endUserLicenseAgreements/{id}'
    });
};

export const endUserLicenseAgreementsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<EndUserLicenseAgreementsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<EndUserLicenseAgreementsUpdateInstanceResponse, EndUserLicenseAgreementsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/endUserLicenseAgreements/{id}'
    });
};

export const endUserLicenseAgreementsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<EndUserLicenseAgreementsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<EndUserLicenseAgreementsDeleteInstanceResponse, EndUserLicenseAgreementsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/endUserLicenseAgreements/{id}'
    });
};

export const financeReportsGetCollection = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<FinanceReportsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<FinanceReportsGetCollectionResponse, FinanceReportsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/financeReports'
    });
};

export const gameCenterAchievementImagesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAchievementImagesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterAchievementImagesCreateInstanceResponse, GameCenterAchievementImagesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAchievementImages'
    });
};

export const gameCenterAchievementImagesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAchievementImagesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterAchievementImagesGetInstanceResponse, GameCenterAchievementImagesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAchievementImages/{id}'
    });
};

export const gameCenterAchievementImagesUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAchievementImagesUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterAchievementImagesUpdateInstanceResponse, GameCenterAchievementImagesUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAchievementImages/{id}'
    });
};

export const gameCenterAchievementImagesDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAchievementImagesDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<GameCenterAchievementImagesDeleteInstanceResponse, GameCenterAchievementImagesDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAchievementImages/{id}'
    });
};

export const gameCenterAchievementLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAchievementLocalizationsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterAchievementLocalizationsCreateInstanceResponse, GameCenterAchievementLocalizationsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAchievementLocalizations'
    });
};

export const gameCenterAchievementLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAchievementLocalizationsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterAchievementLocalizationsGetInstanceResponse, GameCenterAchievementLocalizationsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAchievementLocalizations/{id}'
    });
};

export const gameCenterAchievementLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAchievementLocalizationsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterAchievementLocalizationsUpdateInstanceResponse, GameCenterAchievementLocalizationsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAchievementLocalizations/{id}'
    });
};

export const gameCenterAchievementLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAchievementLocalizationsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<GameCenterAchievementLocalizationsDeleteInstanceResponse, GameCenterAchievementLocalizationsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAchievementLocalizations/{id}'
    });
};

export const gameCenterAchievementReleasesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAchievementReleasesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterAchievementReleasesCreateInstanceResponse, GameCenterAchievementReleasesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAchievementReleases'
    });
};

export const gameCenterAchievementReleasesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAchievementReleasesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterAchievementReleasesGetInstanceResponse, GameCenterAchievementReleasesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAchievementReleases/{id}'
    });
};

export const gameCenterAchievementReleasesDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAchievementReleasesDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<GameCenterAchievementReleasesDeleteInstanceResponse, GameCenterAchievementReleasesDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAchievementReleases/{id}'
    });
};

export const gameCenterAchievementsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAchievementsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterAchievementsCreateInstanceResponse, GameCenterAchievementsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAchievements'
    });
};

export const gameCenterAchievementsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAchievementsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterAchievementsGetInstanceResponse, GameCenterAchievementsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAchievements/{id}'
    });
};

export const gameCenterAchievementsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAchievementsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterAchievementsUpdateInstanceResponse, GameCenterAchievementsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAchievements/{id}'
    });
};

export const gameCenterAchievementsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAchievementsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<GameCenterAchievementsDeleteInstanceResponse, GameCenterAchievementsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAchievements/{id}'
    });
};

export const gameCenterAppVersionsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAppVersionsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterAppVersionsCreateInstanceResponse, GameCenterAppVersionsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAppVersions'
    });
};

export const gameCenterAppVersionsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAppVersionsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterAppVersionsGetInstanceResponse, GameCenterAppVersionsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAppVersions/{id}'
    });
};

export const gameCenterAppVersionsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAppVersionsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterAppVersionsUpdateInstanceResponse, GameCenterAppVersionsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAppVersions/{id}'
    });
};

export const gameCenterDetailsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterDetailsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterDetailsCreateInstanceResponse, GameCenterDetailsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterDetails'
    });
};

export const gameCenterDetailsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterDetailsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterDetailsGetInstanceResponse, GameCenterDetailsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterDetails/{id}'
    });
};

export const gameCenterDetailsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterDetailsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterDetailsUpdateInstanceResponse, GameCenterDetailsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterDetails/{id}'
    });
};

export const gameCenterGroupsGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GameCenterGroupsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterGroupsGetCollectionResponse, GameCenterGroupsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterGroups'
    });
};

export const gameCenterGroupsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterGroupsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterGroupsCreateInstanceResponse, GameCenterGroupsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterGroups'
    });
};

export const gameCenterGroupsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterGroupsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterGroupsGetInstanceResponse, GameCenterGroupsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterGroups/{id}'
    });
};

export const gameCenterGroupsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterGroupsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterGroupsUpdateInstanceResponse, GameCenterGroupsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterGroups/{id}'
    });
};

export const gameCenterGroupsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterGroupsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<GameCenterGroupsDeleteInstanceResponse, GameCenterGroupsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterGroups/{id}'
    });
};

export const gameCenterLeaderboardEntrySubmissionsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardEntrySubmissionsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterLeaderboardEntrySubmissionsCreateInstanceResponse, GameCenterLeaderboardEntrySubmissionsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardEntrySubmissions',
        responseTransformer: GameCenterLeaderboardEntrySubmissionsCreateInstanceResponseTransformer
    });
};

export const gameCenterLeaderboardImagesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardImagesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterLeaderboardImagesCreateInstanceResponse, GameCenterLeaderboardImagesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardImages'
    });
};

export const gameCenterLeaderboardImagesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardImagesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterLeaderboardImagesGetInstanceResponse, GameCenterLeaderboardImagesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardImages/{id}'
    });
};

export const gameCenterLeaderboardImagesUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardImagesUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterLeaderboardImagesUpdateInstanceResponse, GameCenterLeaderboardImagesUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardImages/{id}'
    });
};

export const gameCenterLeaderboardImagesDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardImagesDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<GameCenterLeaderboardImagesDeleteInstanceResponse, GameCenterLeaderboardImagesDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardImages/{id}'
    });
};

export const gameCenterLeaderboardLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardLocalizationsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterLeaderboardLocalizationsCreateInstanceResponse, GameCenterLeaderboardLocalizationsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardLocalizations'
    });
};

export const gameCenterLeaderboardLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardLocalizationsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterLeaderboardLocalizationsGetInstanceResponse, GameCenterLeaderboardLocalizationsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardLocalizations/{id}'
    });
};

export const gameCenterLeaderboardLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardLocalizationsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterLeaderboardLocalizationsUpdateInstanceResponse, GameCenterLeaderboardLocalizationsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardLocalizations/{id}'
    });
};

export const gameCenterLeaderboardLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardLocalizationsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<GameCenterLeaderboardLocalizationsDeleteInstanceResponse, GameCenterLeaderboardLocalizationsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardLocalizations/{id}'
    });
};

export const gameCenterLeaderboardReleasesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardReleasesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterLeaderboardReleasesCreateInstanceResponse, GameCenterLeaderboardReleasesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardReleases'
    });
};

export const gameCenterLeaderboardReleasesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardReleasesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterLeaderboardReleasesGetInstanceResponse, GameCenterLeaderboardReleasesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardReleases/{id}'
    });
};

export const gameCenterLeaderboardReleasesDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardReleasesDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<GameCenterLeaderboardReleasesDeleteInstanceResponse, GameCenterLeaderboardReleasesDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardReleases/{id}'
    });
};

export const gameCenterLeaderboardSetImagesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetImagesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterLeaderboardSetImagesCreateInstanceResponse, GameCenterLeaderboardSetImagesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSetImages'
    });
};

export const gameCenterLeaderboardSetImagesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetImagesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterLeaderboardSetImagesGetInstanceResponse, GameCenterLeaderboardSetImagesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSetImages/{id}'
    });
};

export const gameCenterLeaderboardSetImagesUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetImagesUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterLeaderboardSetImagesUpdateInstanceResponse, GameCenterLeaderboardSetImagesUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSetImages/{id}'
    });
};

export const gameCenterLeaderboardSetImagesDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetImagesDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<GameCenterLeaderboardSetImagesDeleteInstanceResponse, GameCenterLeaderboardSetImagesDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSetImages/{id}'
    });
};

export const gameCenterLeaderboardSetLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetLocalizationsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterLeaderboardSetLocalizationsCreateInstanceResponse, GameCenterLeaderboardSetLocalizationsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSetLocalizations'
    });
};

export const gameCenterLeaderboardSetLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetLocalizationsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterLeaderboardSetLocalizationsGetInstanceResponse, GameCenterLeaderboardSetLocalizationsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSetLocalizations/{id}'
    });
};

export const gameCenterLeaderboardSetLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetLocalizationsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterLeaderboardSetLocalizationsUpdateInstanceResponse, GameCenterLeaderboardSetLocalizationsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSetLocalizations/{id}'
    });
};

export const gameCenterLeaderboardSetLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetLocalizationsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<GameCenterLeaderboardSetLocalizationsDeleteInstanceResponse, GameCenterLeaderboardSetLocalizationsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSetLocalizations/{id}'
    });
};

export const gameCenterLeaderboardSetMemberLocalizationsGetCollection = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetMemberLocalizationsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterLeaderboardSetMemberLocalizationsGetCollectionResponse, GameCenterLeaderboardSetMemberLocalizationsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSetMemberLocalizations'
    });
};

export const gameCenterLeaderboardSetMemberLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetMemberLocalizationsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterLeaderboardSetMemberLocalizationsCreateInstanceResponse, GameCenterLeaderboardSetMemberLocalizationsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSetMemberLocalizations'
    });
};

export const gameCenterLeaderboardSetMemberLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetMemberLocalizationsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterLeaderboardSetMemberLocalizationsUpdateInstanceResponse, GameCenterLeaderboardSetMemberLocalizationsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSetMemberLocalizations/{id}'
    });
};

export const gameCenterLeaderboardSetMemberLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetMemberLocalizationsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<GameCenterLeaderboardSetMemberLocalizationsDeleteInstanceResponse, GameCenterLeaderboardSetMemberLocalizationsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSetMemberLocalizations/{id}'
    });
};

export const gameCenterLeaderboardSetReleasesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetReleasesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterLeaderboardSetReleasesCreateInstanceResponse, GameCenterLeaderboardSetReleasesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSetReleases'
    });
};

export const gameCenterLeaderboardSetReleasesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetReleasesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterLeaderboardSetReleasesGetInstanceResponse, GameCenterLeaderboardSetReleasesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSetReleases/{id}'
    });
};

export const gameCenterLeaderboardSetReleasesDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetReleasesDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<GameCenterLeaderboardSetReleasesDeleteInstanceResponse, GameCenterLeaderboardSetReleasesDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSetReleases/{id}'
    });
};

export const gameCenterLeaderboardSetsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterLeaderboardSetsCreateInstanceResponse, GameCenterLeaderboardSetsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSets'
    });
};

export const gameCenterLeaderboardSetsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterLeaderboardSetsGetInstanceResponse, GameCenterLeaderboardSetsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSets/{id}'
    });
};

export const gameCenterLeaderboardSetsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterLeaderboardSetsUpdateInstanceResponse, GameCenterLeaderboardSetsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSets/{id}'
    });
};

export const gameCenterLeaderboardSetsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<GameCenterLeaderboardSetsDeleteInstanceResponse, GameCenterLeaderboardSetsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSets/{id}'
    });
};

export const gameCenterLeaderboardsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterLeaderboardsCreateInstanceResponse, GameCenterLeaderboardsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboards',
        responseTransformer: GameCenterLeaderboardsCreateInstanceResponseTransformer
    });
};

export const gameCenterLeaderboardsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterLeaderboardsGetInstanceResponse, GameCenterLeaderboardsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboards/{id}',
        responseTransformer: GameCenterLeaderboardsGetInstanceResponseTransformer
    });
};

export const gameCenterLeaderboardsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterLeaderboardsUpdateInstanceResponse, GameCenterLeaderboardsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboards/{id}',
        responseTransformer: GameCenterLeaderboardsUpdateInstanceResponseTransformer
    });
};

export const gameCenterLeaderboardsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<GameCenterLeaderboardsDeleteInstanceResponse, GameCenterLeaderboardsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboards/{id}'
    });
};

export const gameCenterMatchmakingQueuesGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GameCenterMatchmakingQueuesGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterMatchmakingQueuesGetCollectionResponse, GameCenterMatchmakingQueuesGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingQueues'
    });
};

export const gameCenterMatchmakingQueuesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingQueuesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterMatchmakingQueuesCreateInstanceResponse, GameCenterMatchmakingQueuesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingQueues'
    });
};

export const gameCenterMatchmakingQueuesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingQueuesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterMatchmakingQueuesGetInstanceResponse, GameCenterMatchmakingQueuesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingQueues/{id}'
    });
};

export const gameCenterMatchmakingQueuesUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingQueuesUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterMatchmakingQueuesUpdateInstanceResponse, GameCenterMatchmakingQueuesUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingQueues/{id}'
    });
};

export const gameCenterMatchmakingQueuesDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingQueuesDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<GameCenterMatchmakingQueuesDeleteInstanceResponse, GameCenterMatchmakingQueuesDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingQueues/{id}'
    });
};

export const gameCenterMatchmakingRuleSetTestsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingRuleSetTestsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterMatchmakingRuleSetTestsCreateInstanceResponse, GameCenterMatchmakingRuleSetTestsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingRuleSetTests'
    });
};

export const gameCenterMatchmakingRuleSetsGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GameCenterMatchmakingRuleSetsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterMatchmakingRuleSetsGetCollectionResponse, GameCenterMatchmakingRuleSetsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingRuleSets'
    });
};

export const gameCenterMatchmakingRuleSetsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingRuleSetsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterMatchmakingRuleSetsCreateInstanceResponse, GameCenterMatchmakingRuleSetsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingRuleSets'
    });
};

export const gameCenterMatchmakingRuleSetsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingRuleSetsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterMatchmakingRuleSetsGetInstanceResponse, GameCenterMatchmakingRuleSetsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingRuleSets/{id}'
    });
};

export const gameCenterMatchmakingRuleSetsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingRuleSetsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterMatchmakingRuleSetsUpdateInstanceResponse, GameCenterMatchmakingRuleSetsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingRuleSets/{id}'
    });
};

export const gameCenterMatchmakingRuleSetsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingRuleSetsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<GameCenterMatchmakingRuleSetsDeleteInstanceResponse, GameCenterMatchmakingRuleSetsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingRuleSets/{id}'
    });
};

export const gameCenterMatchmakingRulesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingRulesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterMatchmakingRulesCreateInstanceResponse, GameCenterMatchmakingRulesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingRules'
    });
};

export const gameCenterMatchmakingRulesUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingRulesUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterMatchmakingRulesUpdateInstanceResponse, GameCenterMatchmakingRulesUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingRules/{id}'
    });
};

export const gameCenterMatchmakingRulesDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingRulesDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<GameCenterMatchmakingRulesDeleteInstanceResponse, GameCenterMatchmakingRulesDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingRules/{id}'
    });
};

export const gameCenterMatchmakingTeamsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingTeamsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterMatchmakingTeamsCreateInstanceResponse, GameCenterMatchmakingTeamsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingTeams'
    });
};

export const gameCenterMatchmakingTeamsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingTeamsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterMatchmakingTeamsUpdateInstanceResponse, GameCenterMatchmakingTeamsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingTeams/{id}'
    });
};

export const gameCenterMatchmakingTeamsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingTeamsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<GameCenterMatchmakingTeamsDeleteInstanceResponse, GameCenterMatchmakingTeamsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingTeams/{id}'
    });
};

export const gameCenterPlayerAchievementSubmissionsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterPlayerAchievementSubmissionsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterPlayerAchievementSubmissionsCreateInstanceResponse, GameCenterPlayerAchievementSubmissionsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterPlayerAchievementSubmissions',
        responseTransformer: GameCenterPlayerAchievementSubmissionsCreateInstanceResponseTransformer
    });
};

export const inAppPurchaseAppStoreReviewScreenshotsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchaseAppStoreReviewScreenshotsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<InAppPurchaseAppStoreReviewScreenshotsCreateInstanceResponse, InAppPurchaseAppStoreReviewScreenshotsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/inAppPurchaseAppStoreReviewScreenshots'
    });
};

export const inAppPurchaseAppStoreReviewScreenshotsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchaseAppStoreReviewScreenshotsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<InAppPurchaseAppStoreReviewScreenshotsGetInstanceResponse, InAppPurchaseAppStoreReviewScreenshotsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/inAppPurchaseAppStoreReviewScreenshots/{id}'
    });
};

export const inAppPurchaseAppStoreReviewScreenshotsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchaseAppStoreReviewScreenshotsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<InAppPurchaseAppStoreReviewScreenshotsUpdateInstanceResponse, InAppPurchaseAppStoreReviewScreenshotsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/inAppPurchaseAppStoreReviewScreenshots/{id}'
    });
};

export const inAppPurchaseAppStoreReviewScreenshotsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchaseAppStoreReviewScreenshotsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<InAppPurchaseAppStoreReviewScreenshotsDeleteInstanceResponse, InAppPurchaseAppStoreReviewScreenshotsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/inAppPurchaseAppStoreReviewScreenshots/{id}'
    });
};

export const inAppPurchaseAvailabilitiesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchaseAvailabilitiesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<InAppPurchaseAvailabilitiesCreateInstanceResponse, InAppPurchaseAvailabilitiesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/inAppPurchaseAvailabilities'
    });
};

export const inAppPurchaseAvailabilitiesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchaseAvailabilitiesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<InAppPurchaseAvailabilitiesGetInstanceResponse, InAppPurchaseAvailabilitiesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/inAppPurchaseAvailabilities/{id}'
    });
};

export const inAppPurchaseContentsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchaseContentsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<InAppPurchaseContentsGetInstanceResponse, InAppPurchaseContentsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/inAppPurchaseContents/{id}',
        responseTransformer: InAppPurchaseContentsGetInstanceResponseTransformer
    });
};

export const inAppPurchaseImagesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchaseImagesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<InAppPurchaseImagesCreateInstanceResponse, InAppPurchaseImagesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/inAppPurchaseImages'
    });
};

export const inAppPurchaseImagesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchaseImagesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<InAppPurchaseImagesGetInstanceResponse, InAppPurchaseImagesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/inAppPurchaseImages/{id}'
    });
};

export const inAppPurchaseImagesUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchaseImagesUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<InAppPurchaseImagesUpdateInstanceResponse, InAppPurchaseImagesUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/inAppPurchaseImages/{id}'
    });
};

export const inAppPurchaseImagesDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchaseImagesDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<InAppPurchaseImagesDeleteInstanceResponse, InAppPurchaseImagesDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/inAppPurchaseImages/{id}'
    });
};

export const inAppPurchaseLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchaseLocalizationsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<InAppPurchaseLocalizationsCreateInstanceResponse, InAppPurchaseLocalizationsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/inAppPurchaseLocalizations'
    });
};

export const inAppPurchaseLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchaseLocalizationsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<InAppPurchaseLocalizationsGetInstanceResponse, InAppPurchaseLocalizationsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/inAppPurchaseLocalizations/{id}'
    });
};

export const inAppPurchaseLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchaseLocalizationsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<InAppPurchaseLocalizationsUpdateInstanceResponse, InAppPurchaseLocalizationsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/inAppPurchaseLocalizations/{id}'
    });
};

export const inAppPurchaseLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchaseLocalizationsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<InAppPurchaseLocalizationsDeleteInstanceResponse, InAppPurchaseLocalizationsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/inAppPurchaseLocalizations/{id}'
    });
};

export const inAppPurchasePriceSchedulesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchasePriceSchedulesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<InAppPurchasePriceSchedulesCreateInstanceResponse, InAppPurchasePriceSchedulesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/inAppPurchasePriceSchedules'
    });
};

export const inAppPurchasePriceSchedulesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchasePriceSchedulesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<InAppPurchasePriceSchedulesGetInstanceResponse, InAppPurchasePriceSchedulesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/inAppPurchasePriceSchedules/{id}'
    });
};

export const inAppPurchaseSubmissionsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchaseSubmissionsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<InAppPurchaseSubmissionsCreateInstanceResponse, InAppPurchaseSubmissionsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/inAppPurchaseSubmissions'
    });
};

/**
 * @deprecated
 */
export const inAppPurchasesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchasesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<InAppPurchasesGetInstanceResponse, InAppPurchasesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/inAppPurchases/{id}'
    });
};

export const inAppPurchasesV2CreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchasesV2CreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<InAppPurchasesV2CreateInstanceResponse, InAppPurchasesV2CreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v2/inAppPurchases'
    });
};

export const inAppPurchasesV2GetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchasesV2GetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<InAppPurchasesV2GetInstanceResponse, InAppPurchasesV2GetInstanceError, ThrowOnError>({
        ...options,
        url: '/v2/inAppPurchases/{id}'
    });
};

export const inAppPurchasesV2UpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchasesV2UpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<InAppPurchasesV2UpdateInstanceResponse, InAppPurchasesV2UpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v2/inAppPurchases/{id}'
    });
};

export const inAppPurchasesV2DeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchasesV2DeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<InAppPurchasesV2DeleteInstanceResponse, InAppPurchasesV2DeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v2/inAppPurchases/{id}'
    });
};

/**
 * @deprecated
 */
export const marketplaceDomainsGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<MarketplaceDomainsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<MarketplaceDomainsGetCollectionResponse, MarketplaceDomainsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/marketplaceDomains',
        responseTransformer: MarketplaceDomainsGetCollectionResponseTransformer
    });
};

/**
 * @deprecated
 */
export const marketplaceDomainsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<MarketplaceDomainsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<MarketplaceDomainsCreateInstanceResponse, MarketplaceDomainsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/marketplaceDomains',
        responseTransformer: MarketplaceDomainsCreateInstanceResponseTransformer
    });
};

/**
 * @deprecated
 */
export const marketplaceDomainsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<MarketplaceDomainsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<MarketplaceDomainsGetInstanceResponse, MarketplaceDomainsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/marketplaceDomains/{id}',
        responseTransformer: MarketplaceDomainsGetInstanceResponseTransformer
    });
};

/**
 * @deprecated
 */
export const marketplaceDomainsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<MarketplaceDomainsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<MarketplaceDomainsDeleteInstanceResponse, MarketplaceDomainsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/marketplaceDomains/{id}'
    });
};

export const marketplaceSearchDetailsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<MarketplaceSearchDetailsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<MarketplaceSearchDetailsCreateInstanceResponse, MarketplaceSearchDetailsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/marketplaceSearchDetails'
    });
};

export const marketplaceSearchDetailsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<MarketplaceSearchDetailsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<MarketplaceSearchDetailsUpdateInstanceResponse, MarketplaceSearchDetailsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/marketplaceSearchDetails/{id}'
    });
};

export const marketplaceSearchDetailsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<MarketplaceSearchDetailsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<MarketplaceSearchDetailsDeleteInstanceResponse, MarketplaceSearchDetailsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/marketplaceSearchDetails/{id}'
    });
};

export const marketplaceWebhooksGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<MarketplaceWebhooksGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<MarketplaceWebhooksGetCollectionResponse, MarketplaceWebhooksGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/marketplaceWebhooks'
    });
};

export const marketplaceWebhooksCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<MarketplaceWebhooksCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<MarketplaceWebhooksCreateInstanceResponse, MarketplaceWebhooksCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/marketplaceWebhooks'
    });
};

export const marketplaceWebhooksUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<MarketplaceWebhooksUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<MarketplaceWebhooksUpdateInstanceResponse, MarketplaceWebhooksUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/marketplaceWebhooks/{id}'
    });
};

export const marketplaceWebhooksDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<MarketplaceWebhooksDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<MarketplaceWebhooksDeleteInstanceResponse, MarketplaceWebhooksDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/marketplaceWebhooks/{id}'
    });
};

export const merchantIdsGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<MerchantIdsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<MerchantIdsGetCollectionResponse, MerchantIdsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/merchantIds',
        responseTransformer: MerchantIdsGetCollectionResponseTransformer
    });
};

export const merchantIdsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<MerchantIdsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<MerchantIdsCreateInstanceResponse, MerchantIdsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/merchantIds',
        responseTransformer: MerchantIdsCreateInstanceResponseTransformer
    });
};

export const merchantIdsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<MerchantIdsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<MerchantIdsGetInstanceResponse, MerchantIdsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/merchantIds/{id}',
        responseTransformer: MerchantIdsGetInstanceResponseTransformer
    });
};

export const merchantIdsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<MerchantIdsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<MerchantIdsUpdateInstanceResponse, MerchantIdsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/merchantIds/{id}',
        responseTransformer: MerchantIdsUpdateInstanceResponseTransformer
    });
};

export const merchantIdsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<MerchantIdsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<MerchantIdsDeleteInstanceResponse, MerchantIdsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/merchantIds/{id}'
    });
};

export const nominationsGetCollection = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<NominationsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<NominationsGetCollectionResponse, NominationsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/nominations',
        responseTransformer: NominationsGetCollectionResponseTransformer
    });
};

export const nominationsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<NominationsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<NominationsCreateInstanceResponse, NominationsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/nominations',
        responseTransformer: NominationsCreateInstanceResponseTransformer
    });
};

export const nominationsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<NominationsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<NominationsGetInstanceResponse, NominationsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/nominations/{id}',
        responseTransformer: NominationsGetInstanceResponseTransformer
    });
};

export const nominationsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<NominationsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<NominationsUpdateInstanceResponse, NominationsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/nominations/{id}',
        responseTransformer: NominationsUpdateInstanceResponseTransformer
    });
};

export const nominationsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<NominationsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<NominationsDeleteInstanceResponse, NominationsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/nominations/{id}'
    });
};

export const preReleaseVersionsGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PreReleaseVersionsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<PreReleaseVersionsGetCollectionResponse, PreReleaseVersionsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/preReleaseVersions'
    });
};

export const preReleaseVersionsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PreReleaseVersionsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<PreReleaseVersionsGetInstanceResponse, PreReleaseVersionsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/preReleaseVersions/{id}'
    });
};

export const profilesGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<ProfilesGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<ProfilesGetCollectionResponse, ProfilesGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/profiles',
        responseTransformer: ProfilesGetCollectionResponseTransformer
    });
};

export const profilesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ProfilesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<ProfilesCreateInstanceResponse, ProfilesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/profiles',
        responseTransformer: ProfilesCreateInstanceResponseTransformer
    });
};

export const profilesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ProfilesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<ProfilesGetInstanceResponse, ProfilesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/profiles/{id}',
        responseTransformer: ProfilesGetInstanceResponseTransformer
    });
};

export const profilesDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ProfilesDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<ProfilesDeleteInstanceResponse, ProfilesDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/profiles/{id}'
    });
};

export const promotedPurchasesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PromotedPurchasesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<PromotedPurchasesCreateInstanceResponse, PromotedPurchasesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/promotedPurchases'
    });
};

export const promotedPurchasesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PromotedPurchasesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<PromotedPurchasesGetInstanceResponse, PromotedPurchasesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/promotedPurchases/{id}'
    });
};

export const promotedPurchasesUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PromotedPurchasesUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<PromotedPurchasesUpdateInstanceResponse, PromotedPurchasesUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/promotedPurchases/{id}'
    });
};

export const promotedPurchasesDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PromotedPurchasesDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<PromotedPurchasesDeleteInstanceResponse, PromotedPurchasesDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/promotedPurchases/{id}'
    });
};

export const reviewSubmissionItemsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ReviewSubmissionItemsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<ReviewSubmissionItemsCreateInstanceResponse, ReviewSubmissionItemsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/reviewSubmissionItems'
    });
};

export const reviewSubmissionItemsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ReviewSubmissionItemsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<ReviewSubmissionItemsUpdateInstanceResponse, ReviewSubmissionItemsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/reviewSubmissionItems/{id}'
    });
};

export const reviewSubmissionItemsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ReviewSubmissionItemsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<ReviewSubmissionItemsDeleteInstanceResponse, ReviewSubmissionItemsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/reviewSubmissionItems/{id}'
    });
};

export const reviewSubmissionsGetCollection = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ReviewSubmissionsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReviewSubmissionsGetCollectionResponse, ReviewSubmissionsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/reviewSubmissions',
        responseTransformer: ReviewSubmissionsGetCollectionResponseTransformer
    });
};

export const reviewSubmissionsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ReviewSubmissionsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<ReviewSubmissionsCreateInstanceResponse, ReviewSubmissionsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/reviewSubmissions',
        responseTransformer: ReviewSubmissionsCreateInstanceResponseTransformer
    });
};

export const reviewSubmissionsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ReviewSubmissionsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReviewSubmissionsGetInstanceResponse, ReviewSubmissionsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/reviewSubmissions/{id}',
        responseTransformer: ReviewSubmissionsGetInstanceResponseTransformer
    });
};

export const reviewSubmissionsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ReviewSubmissionsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<ReviewSubmissionsUpdateInstanceResponse, ReviewSubmissionsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/reviewSubmissions/{id}',
        responseTransformer: ReviewSubmissionsUpdateInstanceResponseTransformer
    });
};

export const routingAppCoveragesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<RoutingAppCoveragesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<RoutingAppCoveragesCreateInstanceResponse, RoutingAppCoveragesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/routingAppCoverages',
        responseTransformer: RoutingAppCoveragesCreateInstanceResponseTransformer
    });
};

export const routingAppCoveragesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<RoutingAppCoveragesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<RoutingAppCoveragesGetInstanceResponse, RoutingAppCoveragesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/routingAppCoverages/{id}',
        responseTransformer: RoutingAppCoveragesGetInstanceResponseTransformer
    });
};

export const routingAppCoveragesUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<RoutingAppCoveragesUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<RoutingAppCoveragesUpdateInstanceResponse, RoutingAppCoveragesUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/routingAppCoverages/{id}',
        responseTransformer: RoutingAppCoveragesUpdateInstanceResponseTransformer
    });
};

export const routingAppCoveragesDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<RoutingAppCoveragesDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<RoutingAppCoveragesDeleteInstanceResponse, RoutingAppCoveragesDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/routingAppCoverages/{id}'
    });
};

export const salesReportsGetCollection = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SalesReportsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<SalesReportsGetCollectionResponse, SalesReportsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/salesReports'
    });
};

export const sandboxTestersV2GetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<SandboxTestersV2GetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<SandboxTestersV2GetCollectionResponse, SandboxTestersV2GetCollectionError, ThrowOnError>({
        ...options,
        url: '/v2/sandboxTesters'
    });
};

export const sandboxTestersV2UpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SandboxTestersV2UpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<SandboxTestersV2UpdateInstanceResponse, SandboxTestersV2UpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v2/sandboxTesters/{id}'
    });
};

export const sandboxTestersClearPurchaseHistoryRequestV2CreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SandboxTestersClearPurchaseHistoryRequestV2CreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<SandboxTestersClearPurchaseHistoryRequestV2CreateInstanceResponse, SandboxTestersClearPurchaseHistoryRequestV2CreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v2/sandboxTestersClearPurchaseHistoryRequest'
    });
};

export const scmGitReferencesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ScmGitReferencesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<ScmGitReferencesGetInstanceResponse, ScmGitReferencesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/scmGitReferences/{id}',
        responseTransformer: ScmGitReferencesGetInstanceResponseTransformer
    });
};

export const scmProvidersGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<ScmProvidersGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<ScmProvidersGetCollectionResponse, ScmProvidersGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/scmProviders'
    });
};

export const scmProvidersGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ScmProvidersGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<ScmProvidersGetInstanceResponse, ScmProvidersGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/scmProviders/{id}'
    });
};

export const scmPullRequestsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ScmPullRequestsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<ScmPullRequestsGetInstanceResponse, ScmPullRequestsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/scmPullRequests/{id}',
        responseTransformer: ScmPullRequestsGetInstanceResponseTransformer
    });
};

export const scmRepositoriesGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<ScmRepositoriesGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<ScmRepositoriesGetCollectionResponse, ScmRepositoriesGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/scmRepositories',
        responseTransformer: ScmRepositoriesGetCollectionResponseTransformer
    });
};

export const scmRepositoriesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ScmRepositoriesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<ScmRepositoriesGetInstanceResponse, ScmRepositoriesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/scmRepositories/{id}',
        responseTransformer: ScmRepositoriesGetInstanceResponseTransformer
    });
};

export const subscriptionAppStoreReviewScreenshotsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionAppStoreReviewScreenshotsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<SubscriptionAppStoreReviewScreenshotsCreateInstanceResponse, SubscriptionAppStoreReviewScreenshotsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionAppStoreReviewScreenshots'
    });
};

export const subscriptionAppStoreReviewScreenshotsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionAppStoreReviewScreenshotsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionAppStoreReviewScreenshotsGetInstanceResponse, SubscriptionAppStoreReviewScreenshotsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionAppStoreReviewScreenshots/{id}'
    });
};

export const subscriptionAppStoreReviewScreenshotsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionAppStoreReviewScreenshotsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<SubscriptionAppStoreReviewScreenshotsUpdateInstanceResponse, SubscriptionAppStoreReviewScreenshotsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionAppStoreReviewScreenshots/{id}'
    });
};

export const subscriptionAppStoreReviewScreenshotsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionAppStoreReviewScreenshotsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<SubscriptionAppStoreReviewScreenshotsDeleteInstanceResponse, SubscriptionAppStoreReviewScreenshotsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionAppStoreReviewScreenshots/{id}'
    });
};

export const subscriptionAvailabilitiesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionAvailabilitiesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<SubscriptionAvailabilitiesCreateInstanceResponse, SubscriptionAvailabilitiesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionAvailabilities'
    });
};

export const subscriptionAvailabilitiesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionAvailabilitiesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionAvailabilitiesGetInstanceResponse, SubscriptionAvailabilitiesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionAvailabilities/{id}'
    });
};

export const subscriptionGracePeriodsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionGracePeriodsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionGracePeriodsGetInstanceResponse, SubscriptionGracePeriodsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionGracePeriods/{id}'
    });
};

export const subscriptionGracePeriodsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionGracePeriodsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<SubscriptionGracePeriodsUpdateInstanceResponse, SubscriptionGracePeriodsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionGracePeriods/{id}'
    });
};

export const subscriptionGroupLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionGroupLocalizationsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<SubscriptionGroupLocalizationsCreateInstanceResponse, SubscriptionGroupLocalizationsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionGroupLocalizations'
    });
};

export const subscriptionGroupLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionGroupLocalizationsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionGroupLocalizationsGetInstanceResponse, SubscriptionGroupLocalizationsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionGroupLocalizations/{id}'
    });
};

export const subscriptionGroupLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionGroupLocalizationsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<SubscriptionGroupLocalizationsUpdateInstanceResponse, SubscriptionGroupLocalizationsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionGroupLocalizations/{id}'
    });
};

export const subscriptionGroupLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionGroupLocalizationsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<SubscriptionGroupLocalizationsDeleteInstanceResponse, SubscriptionGroupLocalizationsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionGroupLocalizations/{id}'
    });
};

export const subscriptionGroupSubmissionsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionGroupSubmissionsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<SubscriptionGroupSubmissionsCreateInstanceResponse, SubscriptionGroupSubmissionsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionGroupSubmissions'
    });
};

export const subscriptionGroupsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionGroupsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<SubscriptionGroupsCreateInstanceResponse, SubscriptionGroupsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionGroups'
    });
};

export const subscriptionGroupsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionGroupsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionGroupsGetInstanceResponse, SubscriptionGroupsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionGroups/{id}'
    });
};

export const subscriptionGroupsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionGroupsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<SubscriptionGroupsUpdateInstanceResponse, SubscriptionGroupsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionGroups/{id}'
    });
};

export const subscriptionGroupsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionGroupsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<SubscriptionGroupsDeleteInstanceResponse, SubscriptionGroupsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionGroups/{id}'
    });
};

export const subscriptionImagesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionImagesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<SubscriptionImagesCreateInstanceResponse, SubscriptionImagesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionImages'
    });
};

export const subscriptionImagesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionImagesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionImagesGetInstanceResponse, SubscriptionImagesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionImages/{id}'
    });
};

export const subscriptionImagesUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionImagesUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<SubscriptionImagesUpdateInstanceResponse, SubscriptionImagesUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionImages/{id}'
    });
};

export const subscriptionImagesDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionImagesDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<SubscriptionImagesDeleteInstanceResponse, SubscriptionImagesDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionImages/{id}'
    });
};

export const subscriptionIntroductoryOffersCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionIntroductoryOffersCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<SubscriptionIntroductoryOffersCreateInstanceResponse, SubscriptionIntroductoryOffersCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionIntroductoryOffers',
        responseTransformer: SubscriptionIntroductoryOffersCreateInstanceResponseTransformer
    });
};

export const subscriptionIntroductoryOffersUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionIntroductoryOffersUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<SubscriptionIntroductoryOffersUpdateInstanceResponse, SubscriptionIntroductoryOffersUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionIntroductoryOffers/{id}',
        responseTransformer: SubscriptionIntroductoryOffersUpdateInstanceResponseTransformer
    });
};

export const subscriptionIntroductoryOffersDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionIntroductoryOffersDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<SubscriptionIntroductoryOffersDeleteInstanceResponse, SubscriptionIntroductoryOffersDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionIntroductoryOffers/{id}'
    });
};

export const subscriptionLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionLocalizationsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<SubscriptionLocalizationsCreateInstanceResponse, SubscriptionLocalizationsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionLocalizations'
    });
};

export const subscriptionLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionLocalizationsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionLocalizationsGetInstanceResponse, SubscriptionLocalizationsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionLocalizations/{id}'
    });
};

export const subscriptionLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionLocalizationsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<SubscriptionLocalizationsUpdateInstanceResponse, SubscriptionLocalizationsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionLocalizations/{id}'
    });
};

export const subscriptionLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionLocalizationsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<SubscriptionLocalizationsDeleteInstanceResponse, SubscriptionLocalizationsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionLocalizations/{id}'
    });
};

export const subscriptionOfferCodeCustomCodesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionOfferCodeCustomCodesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<SubscriptionOfferCodeCustomCodesCreateInstanceResponse, SubscriptionOfferCodeCustomCodesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionOfferCodeCustomCodes',
        responseTransformer: SubscriptionOfferCodeCustomCodesCreateInstanceResponseTransformer
    });
};

export const subscriptionOfferCodeCustomCodesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionOfferCodeCustomCodesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionOfferCodeCustomCodesGetInstanceResponse, SubscriptionOfferCodeCustomCodesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionOfferCodeCustomCodes/{id}',
        responseTransformer: SubscriptionOfferCodeCustomCodesGetInstanceResponseTransformer
    });
};

export const subscriptionOfferCodeCustomCodesUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionOfferCodeCustomCodesUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<SubscriptionOfferCodeCustomCodesUpdateInstanceResponse, SubscriptionOfferCodeCustomCodesUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionOfferCodeCustomCodes/{id}',
        responseTransformer: SubscriptionOfferCodeCustomCodesUpdateInstanceResponseTransformer
    });
};

export const subscriptionOfferCodeOneTimeUseCodesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionOfferCodeOneTimeUseCodesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<SubscriptionOfferCodeOneTimeUseCodesCreateInstanceResponse, SubscriptionOfferCodeOneTimeUseCodesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionOfferCodeOneTimeUseCodes',
        responseTransformer: SubscriptionOfferCodeOneTimeUseCodesCreateInstanceResponseTransformer
    });
};

export const subscriptionOfferCodeOneTimeUseCodesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionOfferCodeOneTimeUseCodesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionOfferCodeOneTimeUseCodesGetInstanceResponse, SubscriptionOfferCodeOneTimeUseCodesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionOfferCodeOneTimeUseCodes/{id}',
        responseTransformer: SubscriptionOfferCodeOneTimeUseCodesGetInstanceResponseTransformer
    });
};

export const subscriptionOfferCodeOneTimeUseCodesUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionOfferCodeOneTimeUseCodesUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<SubscriptionOfferCodeOneTimeUseCodesUpdateInstanceResponse, SubscriptionOfferCodeOneTimeUseCodesUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionOfferCodeOneTimeUseCodes/{id}',
        responseTransformer: SubscriptionOfferCodeOneTimeUseCodesUpdateInstanceResponseTransformer
    });
};

export const subscriptionOfferCodesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionOfferCodesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<SubscriptionOfferCodesCreateInstanceResponse, SubscriptionOfferCodesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionOfferCodes'
    });
};

export const subscriptionOfferCodesGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionOfferCodesGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionOfferCodesGetInstanceResponse, SubscriptionOfferCodesGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionOfferCodes/{id}'
    });
};

export const subscriptionOfferCodesUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionOfferCodesUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<SubscriptionOfferCodesUpdateInstanceResponse, SubscriptionOfferCodesUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionOfferCodes/{id}'
    });
};

export const subscriptionPricePointsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionPricePointsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionPricePointsGetInstanceResponse, SubscriptionPricePointsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionPricePoints/{id}'
    });
};

export const subscriptionPricesCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionPricesCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<SubscriptionPricesCreateInstanceResponse, SubscriptionPricesCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionPrices',
        responseTransformer: SubscriptionPricesCreateInstanceResponseTransformer
    });
};

export const subscriptionPricesDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionPricesDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<SubscriptionPricesDeleteInstanceResponse, SubscriptionPricesDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionPrices/{id}'
    });
};

export const subscriptionPromotionalOffersCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionPromotionalOffersCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<SubscriptionPromotionalOffersCreateInstanceResponse, SubscriptionPromotionalOffersCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionPromotionalOffers'
    });
};

export const subscriptionPromotionalOffersGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionPromotionalOffersGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionPromotionalOffersGetInstanceResponse, SubscriptionPromotionalOffersGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionPromotionalOffers/{id}'
    });
};

export const subscriptionPromotionalOffersUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionPromotionalOffersUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<SubscriptionPromotionalOffersUpdateInstanceResponse, SubscriptionPromotionalOffersUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionPromotionalOffers/{id}'
    });
};

export const subscriptionPromotionalOffersDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionPromotionalOffersDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<SubscriptionPromotionalOffersDeleteInstanceResponse, SubscriptionPromotionalOffersDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionPromotionalOffers/{id}'
    });
};

export const subscriptionSubmissionsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionSubmissionsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<SubscriptionSubmissionsCreateInstanceResponse, SubscriptionSubmissionsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionSubmissions'
    });
};

export const subscriptionsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<SubscriptionsCreateInstanceResponse, SubscriptionsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptions'
    });
};

export const subscriptionsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionsGetInstanceResponse, SubscriptionsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptions/{id}'
    });
};

export const subscriptionsUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionsUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<SubscriptionsUpdateInstanceResponse, SubscriptionsUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptions/{id}'
    });
};

export const subscriptionsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<SubscriptionsDeleteInstanceResponse, SubscriptionsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptions/{id}'
    });
};

export const territoriesGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<TerritoriesGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<TerritoriesGetCollectionResponse, TerritoriesGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/territories'
    });
};

export const territoryAvailabilitiesUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<TerritoryAvailabilitiesUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<TerritoryAvailabilitiesUpdateInstanceResponse, TerritoryAvailabilitiesUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/territoryAvailabilities/{id}',
        responseTransformer: TerritoryAvailabilitiesUpdateInstanceResponseTransformer
    });
};

export const userInvitationsGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<UserInvitationsGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<UserInvitationsGetCollectionResponse, UserInvitationsGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/userInvitations',
        responseTransformer: UserInvitationsGetCollectionResponseTransformer
    });
};

export const userInvitationsCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<UserInvitationsCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<UserInvitationsCreateInstanceResponse, UserInvitationsCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/userInvitations',
        responseTransformer: UserInvitationsCreateInstanceResponseTransformer
    });
};

export const userInvitationsGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<UserInvitationsGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<UserInvitationsGetInstanceResponse, UserInvitationsGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/userInvitations/{id}',
        responseTransformer: UserInvitationsGetInstanceResponseTransformer
    });
};

export const userInvitationsDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<UserInvitationsDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<UserInvitationsDeleteInstanceResponse, UserInvitationsDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/userInvitations/{id}'
    });
};

export const usersGetCollection = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<UsersGetCollectionData, ThrowOnError>) => {
    return (options?.client ?? client).get<UsersGetCollectionResponse, UsersGetCollectionError, ThrowOnError>({
        ...options,
        url: '/v1/users'
    });
};

export const usersGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<UsersGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<UsersGetInstanceResponse, UsersGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/users/{id}'
    });
};

export const usersUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<UsersUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<UsersUpdateInstanceResponse, UsersUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/users/{id}'
    });
};

export const usersDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<UsersDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<UsersDeleteInstanceResponse, UsersDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/users/{id}'
    });
};

export const winBackOffersCreateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<WinBackOffersCreateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).post<WinBackOffersCreateInstanceResponse, WinBackOffersCreateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/winBackOffers',
        responseTransformer: WinBackOffersCreateInstanceResponseTransformer
    });
};

export const winBackOffersGetInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<WinBackOffersGetInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).get<WinBackOffersGetInstanceResponse, WinBackOffersGetInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/winBackOffers/{id}',
        responseTransformer: WinBackOffersGetInstanceResponseTransformer
    });
};

export const winBackOffersUpdateInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<WinBackOffersUpdateInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).patch<WinBackOffersUpdateInstanceResponse, WinBackOffersUpdateInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/winBackOffers/{id}',
        responseTransformer: WinBackOffersUpdateInstanceResponseTransformer
    });
};

export const winBackOffersDeleteInstance = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<WinBackOffersDeleteInstanceData, ThrowOnError>) => {
    return (options?.client ?? client).delete<WinBackOffersDeleteInstanceResponse, WinBackOffersDeleteInstanceError, ThrowOnError>({
        ...options,
        url: '/v1/winBackOffers/{id}'
    });
};

export const alternativeDistributionPackageVersionsDeltasGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AlternativeDistributionPackageVersionsDeltasGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AlternativeDistributionPackageVersionsDeltasGetToManyRelatedResponse, AlternativeDistributionPackageVersionsDeltasGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/alternativeDistributionPackageVersions/{id}/deltas',
        responseTransformer: AlternativeDistributionPackageVersionsDeltasGetToManyRelatedResponseTransformer
    });
};

export const alternativeDistributionPackageVersionsVariantsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AlternativeDistributionPackageVersionsVariantsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AlternativeDistributionPackageVersionsVariantsGetToManyRelatedResponse, AlternativeDistributionPackageVersionsVariantsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/alternativeDistributionPackageVersions/{id}/variants',
        responseTransformer: AlternativeDistributionPackageVersionsVariantsGetToManyRelatedResponseTransformer
    });
};

export const alternativeDistributionPackagesVersionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AlternativeDistributionPackagesVersionsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AlternativeDistributionPackagesVersionsGetToManyRelatedResponse, AlternativeDistributionPackagesVersionsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/alternativeDistributionPackages/{id}/versions',
        responseTransformer: AlternativeDistributionPackagesVersionsGetToManyRelatedResponseTransformer
    });
};

export const analyticsReportInstancesSegmentsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AnalyticsReportInstancesSegmentsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AnalyticsReportInstancesSegmentsGetToManyRelatedResponse, AnalyticsReportInstancesSegmentsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/analyticsReportInstances/{id}/segments'
    });
};

export const analyticsReportRequestsReportsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AnalyticsReportRequestsReportsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AnalyticsReportRequestsReportsGetToManyRelatedResponse, AnalyticsReportRequestsReportsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/analyticsReportRequests/{id}/reports'
    });
};

export const analyticsReportsInstancesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AnalyticsReportsInstancesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AnalyticsReportsInstancesGetToManyRelatedResponse, AnalyticsReportsInstancesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/analyticsReports/{id}/instances',
        responseTransformer: AnalyticsReportsInstancesGetToManyRelatedResponseTransformer
    });
};

export const appAvailabilitiesV2TerritoryAvailabilitiesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppAvailabilitiesV2TerritoryAvailabilitiesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppAvailabilitiesV2TerritoryAvailabilitiesGetToManyRelatedResponse, AppAvailabilitiesV2TerritoryAvailabilitiesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v2/appAvailabilities/{id}/territoryAvailabilities',
        responseTransformer: AppAvailabilitiesV2TerritoryAvailabilitiesGetToManyRelatedResponseTransformer
    });
};

export const appCategoriesParentGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppCategoriesParentGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppCategoriesParentGetToOneRelatedResponse, AppCategoriesParentGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appCategories/{id}/parent'
    });
};

export const appCategoriesSubcategoriesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppCategoriesSubcategoriesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppCategoriesSubcategoriesGetToManyRelatedResponse, AppCategoriesSubcategoriesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appCategories/{id}/subcategories'
    });
};

export const appClipDefaultExperienceLocalizationsAppClipHeaderImageGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipDefaultExperienceLocalizationsAppClipHeaderImageGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppClipDefaultExperienceLocalizationsAppClipHeaderImageGetToOneRelatedResponse, AppClipDefaultExperienceLocalizationsAppClipHeaderImageGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appClipDefaultExperienceLocalizations/{id}/appClipHeaderImage'
    });
};

export const appClipDefaultExperiencesAppClipAppStoreReviewDetailGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipDefaultExperiencesAppClipAppStoreReviewDetailGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppClipDefaultExperiencesAppClipAppStoreReviewDetailGetToOneRelatedResponse, AppClipDefaultExperiencesAppClipAppStoreReviewDetailGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appClipDefaultExperiences/{id}/appClipAppStoreReviewDetail'
    });
};

export const appClipDefaultExperiencesAppClipDefaultExperienceLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipDefaultExperiencesAppClipDefaultExperienceLocalizationsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppClipDefaultExperiencesAppClipDefaultExperienceLocalizationsGetToManyRelatedResponse, AppClipDefaultExperiencesAppClipDefaultExperienceLocalizationsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appClipDefaultExperiences/{id}/appClipDefaultExperienceLocalizations'
    });
};

export const appClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelationshipResponse, AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/appClipDefaultExperiences/{id}/relationships/releaseWithAppStoreVersion'
    });
};

export const appClipDefaultExperiencesReleaseWithAppStoreVersionUpdateToOneRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipDefaultExperiencesReleaseWithAppStoreVersionUpdateToOneRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppClipDefaultExperiencesReleaseWithAppStoreVersionUpdateToOneRelationshipResponse, AppClipDefaultExperiencesReleaseWithAppStoreVersionUpdateToOneRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/appClipDefaultExperiences/{id}/relationships/releaseWithAppStoreVersion'
    });
};

export const appClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelatedResponse, AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appClipDefaultExperiences/{id}/releaseWithAppStoreVersion',
        responseTransformer: AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelatedResponseTransformer
    });
};

export const appClipsAppClipAdvancedExperiencesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipsAppClipAdvancedExperiencesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppClipsAppClipAdvancedExperiencesGetToManyRelatedResponse, AppClipsAppClipAdvancedExperiencesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appClips/{id}/appClipAdvancedExperiences'
    });
};

export const appClipsAppClipDefaultExperiencesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppClipsAppClipDefaultExperiencesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppClipsAppClipDefaultExperiencesGetToManyRelatedResponse, AppClipsAppClipDefaultExperiencesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appClips/{id}/appClipDefaultExperiences'
    });
};

export const appCustomProductPageLocalizationsAppPreviewSetsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedResponse, AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appCustomProductPageLocalizations/{id}/appPreviewSets'
    });
};

export const appCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedResponse, AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appCustomProductPageLocalizations/{id}/appScreenshotSets'
    });
};

export const appCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedResponse, AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appCustomProductPageVersions/{id}/appCustomProductPageLocalizations'
    });
};

export const appCustomProductPagesAppCustomProductPageVersionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppCustomProductPagesAppCustomProductPageVersionsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppCustomProductPagesAppCustomProductPageVersionsGetToManyRelatedResponse, AppCustomProductPagesAppCustomProductPageVersionsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appCustomProductPages/{id}/appCustomProductPageVersions'
    });
};

/**
 * @deprecated
 */
export const appEncryptionDeclarationsAppGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEncryptionDeclarationsAppGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppEncryptionDeclarationsAppGetToOneRelatedResponse, AppEncryptionDeclarationsAppGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appEncryptionDeclarations/{id}/app'
    });
};

export const appEncryptionDeclarationsAppEncryptionDeclarationDocumentGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEncryptionDeclarationsAppEncryptionDeclarationDocumentGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppEncryptionDeclarationsAppEncryptionDeclarationDocumentGetToOneRelatedResponse, AppEncryptionDeclarationsAppEncryptionDeclarationDocumentGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appEncryptionDeclarations/{id}/appEncryptionDeclarationDocument'
    });
};

/**
 * @deprecated
 */
export const appEncryptionDeclarationsBuildsCreateToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEncryptionDeclarationsBuildsCreateToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).post<AppEncryptionDeclarationsBuildsCreateToManyRelationshipResponse, AppEncryptionDeclarationsBuildsCreateToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/appEncryptionDeclarations/{id}/relationships/builds'
    });
};

export const appEventLocalizationsAppEventScreenshotsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEventLocalizationsAppEventScreenshotsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppEventLocalizationsAppEventScreenshotsGetToManyRelatedResponse, AppEventLocalizationsAppEventScreenshotsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appEventLocalizations/{id}/appEventScreenshots'
    });
};

export const appEventLocalizationsAppEventVideoClipsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEventLocalizationsAppEventVideoClipsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppEventLocalizationsAppEventVideoClipsGetToManyRelatedResponse, AppEventLocalizationsAppEventVideoClipsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appEventLocalizations/{id}/appEventVideoClips'
    });
};

export const appEventsLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppEventsLocalizationsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppEventsLocalizationsGetToManyRelatedResponse, AppEventsLocalizationsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appEvents/{id}/localizations'
    });
};

export const appInfosAgeRatingDeclarationGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppInfosAgeRatingDeclarationGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppInfosAgeRatingDeclarationGetToOneRelatedResponse, AppInfosAgeRatingDeclarationGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appInfos/{id}/ageRatingDeclaration'
    });
};

export const appInfosAppInfoLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppInfosAppInfoLocalizationsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppInfosAppInfoLocalizationsGetToManyRelatedResponse, AppInfosAppInfoLocalizationsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appInfos/{id}/appInfoLocalizations'
    });
};

export const appInfosPrimaryCategoryGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppInfosPrimaryCategoryGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppInfosPrimaryCategoryGetToOneRelatedResponse, AppInfosPrimaryCategoryGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appInfos/{id}/primaryCategory'
    });
};

export const appInfosPrimarySubcategoryOneGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppInfosPrimarySubcategoryOneGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppInfosPrimarySubcategoryOneGetToOneRelatedResponse, AppInfosPrimarySubcategoryOneGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appInfos/{id}/primarySubcategoryOne'
    });
};

export const appInfosPrimarySubcategoryTwoGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppInfosPrimarySubcategoryTwoGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppInfosPrimarySubcategoryTwoGetToOneRelatedResponse, AppInfosPrimarySubcategoryTwoGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appInfos/{id}/primarySubcategoryTwo'
    });
};

export const appInfosSecondaryCategoryGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppInfosSecondaryCategoryGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppInfosSecondaryCategoryGetToOneRelatedResponse, AppInfosSecondaryCategoryGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appInfos/{id}/secondaryCategory'
    });
};

export const appInfosSecondarySubcategoryOneGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppInfosSecondarySubcategoryOneGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppInfosSecondarySubcategoryOneGetToOneRelatedResponse, AppInfosSecondarySubcategoryOneGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appInfos/{id}/secondarySubcategoryOne'
    });
};

export const appInfosSecondarySubcategoryTwoGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppInfosSecondarySubcategoryTwoGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppInfosSecondarySubcategoryTwoGetToOneRelatedResponse, AppInfosSecondarySubcategoryTwoGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appInfos/{id}/secondarySubcategoryTwo'
    });
};

export const appPreviewSetsAppPreviewsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppPreviewSetsAppPreviewsGetToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppPreviewSetsAppPreviewsGetToManyRelationshipResponse, AppPreviewSetsAppPreviewsGetToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/appPreviewSets/{id}/relationships/appPreviews'
    });
};

export const appPreviewSetsAppPreviewsReplaceToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppPreviewSetsAppPreviewsReplaceToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppPreviewSetsAppPreviewsReplaceToManyRelationshipResponse, AppPreviewSetsAppPreviewsReplaceToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/appPreviewSets/{id}/relationships/appPreviews'
    });
};

export const appPreviewSetsAppPreviewsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppPreviewSetsAppPreviewsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppPreviewSetsAppPreviewsGetToManyRelatedResponse, AppPreviewSetsAppPreviewsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appPreviewSets/{id}/appPreviews'
    });
};

export const appPricePointsV3EqualizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppPricePointsV3EqualizationsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppPricePointsV3EqualizationsGetToManyRelatedResponse, AppPricePointsV3EqualizationsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v3/appPricePoints/{id}/equalizations'
    });
};

export const appPriceSchedulesAutomaticPricesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppPriceSchedulesAutomaticPricesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppPriceSchedulesAutomaticPricesGetToManyRelatedResponse, AppPriceSchedulesAutomaticPricesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appPriceSchedules/{id}/automaticPrices',
        responseTransformer: AppPriceSchedulesAutomaticPricesGetToManyRelatedResponseTransformer
    });
};

export const appPriceSchedulesBaseTerritoryGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppPriceSchedulesBaseTerritoryGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppPriceSchedulesBaseTerritoryGetToOneRelatedResponse, AppPriceSchedulesBaseTerritoryGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appPriceSchedules/{id}/baseTerritory'
    });
};

export const appPriceSchedulesManualPricesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppPriceSchedulesManualPricesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppPriceSchedulesManualPricesGetToManyRelatedResponse, AppPriceSchedulesManualPricesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appPriceSchedules/{id}/manualPrices',
        responseTransformer: AppPriceSchedulesManualPricesGetToManyRelatedResponseTransformer
    });
};

export const appScreenshotSetsAppScreenshotsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppScreenshotSetsAppScreenshotsGetToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppScreenshotSetsAppScreenshotsGetToManyRelationshipResponse, AppScreenshotSetsAppScreenshotsGetToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/appScreenshotSets/{id}/relationships/appScreenshots'
    });
};

export const appScreenshotSetsAppScreenshotsReplaceToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppScreenshotSetsAppScreenshotsReplaceToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppScreenshotSetsAppScreenshotsReplaceToManyRelationshipResponse, AppScreenshotSetsAppScreenshotsReplaceToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/appScreenshotSets/{id}/relationships/appScreenshots'
    });
};

export const appScreenshotSetsAppScreenshotsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppScreenshotSetsAppScreenshotsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppScreenshotSetsAppScreenshotsGetToManyRelatedResponse, AppScreenshotSetsAppScreenshotsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appScreenshotSets/{id}/appScreenshots'
    });
};

export const appStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelatedResponse, AppStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreReviewDetails/{id}/appStoreReviewAttachments'
    });
};

export const appStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelatedResponse, AppStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionExperimentTreatmentLocalizations/{id}/appPreviewSets'
    });
};

export const appStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelatedResponse, AppStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionExperimentTreatmentLocalizations/{id}/appScreenshotSets'
    });
};

export const appStoreVersionExperimentTreatmentsAppStoreVersionExperimentTreatmentLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionExperimentTreatmentsAppStoreVersionExperimentTreatmentLocalizationsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionExperimentTreatmentsAppStoreVersionExperimentTreatmentLocalizationsGetToManyRelatedResponse, AppStoreVersionExperimentTreatmentsAppStoreVersionExperimentTreatmentLocalizationsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionExperimentTreatments/{id}/appStoreVersionExperimentTreatmentLocalizations'
    });
};

export const appStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelatedResponse, AppStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v2/appStoreVersionExperiments/{id}/appStoreVersionExperimentTreatments',
        responseTransformer: AppStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelatedResponseTransformer
    });
};

/**
 * @deprecated
 */
export const appStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelatedResponse, AppStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionExperiments/{id}/appStoreVersionExperimentTreatments',
        responseTransformer: AppStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelatedResponseTransformer
    });
};

export const appStoreVersionLocalizationsAppPreviewSetsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionLocalizationsAppPreviewSetsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionLocalizationsAppPreviewSetsGetToManyRelatedResponse, AppStoreVersionLocalizationsAppPreviewSetsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionLocalizations/{id}/appPreviewSets'
    });
};

export const appStoreVersionLocalizationsAppScreenshotSetsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionLocalizationsAppScreenshotSetsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionLocalizationsAppScreenshotSetsGetToManyRelatedResponse, AppStoreVersionLocalizationsAppScreenshotSetsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersionLocalizations/{id}/appScreenshotSets'
    });
};

/**
 * @deprecated
 */
export const appStoreVersionsAgeRatingDeclarationGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionsAgeRatingDeclarationGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionsAgeRatingDeclarationGetToOneRelatedResponse, AppStoreVersionsAgeRatingDeclarationGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersions/{id}/ageRatingDeclaration'
    });
};

export const appStoreVersionsAlternativeDistributionPackageGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionsAlternativeDistributionPackageGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionsAlternativeDistributionPackageGetToOneRelatedResponse, AppStoreVersionsAlternativeDistributionPackageGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersions/{id}/alternativeDistributionPackage',
        responseTransformer: AppStoreVersionsAlternativeDistributionPackageGetToOneRelatedResponseTransformer
    });
};

export const appStoreVersionsAppClipDefaultExperienceGetToOneRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionsAppClipDefaultExperienceGetToOneRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionsAppClipDefaultExperienceGetToOneRelationshipResponse, AppStoreVersionsAppClipDefaultExperienceGetToOneRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersions/{id}/relationships/appClipDefaultExperience'
    });
};

export const appStoreVersionsAppClipDefaultExperienceUpdateToOneRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionsAppClipDefaultExperienceUpdateToOneRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppStoreVersionsAppClipDefaultExperienceUpdateToOneRelationshipResponse, AppStoreVersionsAppClipDefaultExperienceUpdateToOneRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersions/{id}/relationships/appClipDefaultExperience'
    });
};

export const appStoreVersionsAppClipDefaultExperienceGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionsAppClipDefaultExperienceGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionsAppClipDefaultExperienceGetToOneRelatedResponse, AppStoreVersionsAppClipDefaultExperienceGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersions/{id}/appClipDefaultExperience'
    });
};

export const appStoreVersionsAppStoreReviewDetailGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionsAppStoreReviewDetailGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionsAppStoreReviewDetailGetToOneRelatedResponse, AppStoreVersionsAppStoreReviewDetailGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersions/{id}/appStoreReviewDetail'
    });
};

/**
 * @deprecated
 */
export const appStoreVersionsAppStoreVersionExperimentsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionsAppStoreVersionExperimentsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionsAppStoreVersionExperimentsGetToManyRelatedResponse, AppStoreVersionsAppStoreVersionExperimentsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersions/{id}/appStoreVersionExperiments',
        responseTransformer: AppStoreVersionsAppStoreVersionExperimentsGetToManyRelatedResponseTransformer
    });
};

export const appStoreVersionsAppStoreVersionExperimentsV2GetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionsAppStoreVersionExperimentsV2GetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionsAppStoreVersionExperimentsV2GetToManyRelatedResponse, AppStoreVersionsAppStoreVersionExperimentsV2GetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersions/{id}/appStoreVersionExperimentsV2',
        responseTransformer: AppStoreVersionsAppStoreVersionExperimentsV2GetToManyRelatedResponseTransformer
    });
};

export const appStoreVersionsAppStoreVersionLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionsAppStoreVersionLocalizationsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionsAppStoreVersionLocalizationsGetToManyRelatedResponse, AppStoreVersionsAppStoreVersionLocalizationsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersions/{id}/appStoreVersionLocalizations'
    });
};

export const appStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelatedResponse, AppStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersions/{id}/appStoreVersionPhasedRelease',
        responseTransformer: AppStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelatedResponseTransformer
    });
};

/**
 * @deprecated
 */
export const appStoreVersionsAppStoreVersionSubmissionGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionsAppStoreVersionSubmissionGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionsAppStoreVersionSubmissionGetToOneRelatedResponse, AppStoreVersionsAppStoreVersionSubmissionGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersions/{id}/appStoreVersionSubmission',
        responseTransformer: AppStoreVersionsAppStoreVersionSubmissionGetToOneRelatedResponseTransformer
    });
};

export const appStoreVersionsBuildGetToOneRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionsBuildGetToOneRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionsBuildGetToOneRelationshipResponse, AppStoreVersionsBuildGetToOneRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersions/{id}/relationships/build'
    });
};

export const appStoreVersionsBuildUpdateToOneRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionsBuildUpdateToOneRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppStoreVersionsBuildUpdateToOneRelationshipResponse, AppStoreVersionsBuildUpdateToOneRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersions/{id}/relationships/build'
    });
};

export const appStoreVersionsBuildGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionsBuildGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionsBuildGetToOneRelatedResponse, AppStoreVersionsBuildGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersions/{id}/build',
        responseTransformer: AppStoreVersionsBuildGetToOneRelatedResponseTransformer
    });
};

export const appStoreVersionsCustomerReviewsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionsCustomerReviewsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionsCustomerReviewsGetToManyRelatedResponse, AppStoreVersionsCustomerReviewsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersions/{id}/customerReviews',
        responseTransformer: AppStoreVersionsCustomerReviewsGetToManyRelatedResponseTransformer
    });
};

export const appStoreVersionsGameCenterAppVersionGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionsGameCenterAppVersionGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionsGameCenterAppVersionGetToOneRelatedResponse, AppStoreVersionsGameCenterAppVersionGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersions/{id}/gameCenterAppVersion'
    });
};

export const appStoreVersionsRoutingAppCoverageGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppStoreVersionsRoutingAppCoverageGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppStoreVersionsRoutingAppCoverageGetToOneRelatedResponse, AppStoreVersionsRoutingAppCoverageGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/appStoreVersions/{id}/routingAppCoverage'
    });
};

export const appsAlternativeDistributionKeyGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsAlternativeDistributionKeyGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsAlternativeDistributionKeyGetToOneRelatedResponse, AppsAlternativeDistributionKeyGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/alternativeDistributionKey'
    });
};

export const appsAnalyticsReportRequestsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsAnalyticsReportRequestsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsAnalyticsReportRequestsGetToManyRelatedResponse, AppsAnalyticsReportRequestsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/analyticsReportRequests'
    });
};

export const appsAppAvailabilityV2GetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsAppAvailabilityV2GetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsAppAvailabilityV2GetToOneRelatedResponse, AppsAppAvailabilityV2GetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/appAvailabilityV2',
        responseTransformer: AppsAppAvailabilityV2GetToOneRelatedResponseTransformer
    });
};

export const appsAppClipsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsAppClipsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsAppClipsGetToManyRelatedResponse, AppsAppClipsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/appClips'
    });
};

export const appsAppCustomProductPagesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsAppCustomProductPagesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsAppCustomProductPagesGetToManyRelatedResponse, AppsAppCustomProductPagesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/appCustomProductPages'
    });
};

export const appsAppEncryptionDeclarationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsAppEncryptionDeclarationsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsAppEncryptionDeclarationsGetToManyRelatedResponse, AppsAppEncryptionDeclarationsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/appEncryptionDeclarations',
        responseTransformer: AppsAppEncryptionDeclarationsGetToManyRelatedResponseTransformer
    });
};

export const appsAppEventsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsAppEventsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsAppEventsGetToManyRelatedResponse, AppsAppEventsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/appEvents'
    });
};

export const appsAppInfosGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsAppInfosGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsAppInfosGetToManyRelatedResponse, AppsAppInfosGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/appInfos'
    });
};

export const appsAppPricePointsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsAppPricePointsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsAppPricePointsGetToManyRelatedResponse, AppsAppPricePointsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/appPricePoints'
    });
};

export const appsAppPriceScheduleGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsAppPriceScheduleGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsAppPriceScheduleGetToOneRelatedResponse, AppsAppPriceScheduleGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/appPriceSchedule'
    });
};

export const appsAppStoreVersionExperimentsV2GetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsAppStoreVersionExperimentsV2GetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsAppStoreVersionExperimentsV2GetToManyRelatedResponse, AppsAppStoreVersionExperimentsV2GetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/appStoreVersionExperimentsV2',
        responseTransformer: AppsAppStoreVersionExperimentsV2GetToManyRelatedResponseTransformer
    });
};

export const appsAppStoreVersionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsAppStoreVersionsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsAppStoreVersionsGetToManyRelatedResponse, AppsAppStoreVersionsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/appStoreVersions',
        responseTransformer: AppsAppStoreVersionsGetToManyRelatedResponseTransformer
    });
};

export const appsBetaAppLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsBetaAppLocalizationsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsBetaAppLocalizationsGetToManyRelatedResponse, AppsBetaAppLocalizationsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/betaAppLocalizations'
    });
};

export const appsBetaAppReviewDetailGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsBetaAppReviewDetailGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsBetaAppReviewDetailGetToOneRelatedResponse, AppsBetaAppReviewDetailGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/betaAppReviewDetail'
    });
};

export const appsBetaGroupsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsBetaGroupsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsBetaGroupsGetToManyRelatedResponse, AppsBetaGroupsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/betaGroups',
        responseTransformer: AppsBetaGroupsGetToManyRelatedResponseTransformer
    });
};

export const appsBetaLicenseAgreementGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsBetaLicenseAgreementGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsBetaLicenseAgreementGetToOneRelatedResponse, AppsBetaLicenseAgreementGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/betaLicenseAgreement'
    });
};

export const appsBetaTestersDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsBetaTestersDeleteToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AppsBetaTestersDeleteToManyRelationshipResponse, AppsBetaTestersDeleteToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/relationships/betaTesters'
    });
};

export const appsBuildsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsBuildsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsBuildsGetToManyRelatedResponse, AppsBuildsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/builds',
        responseTransformer: AppsBuildsGetToManyRelatedResponseTransformer
    });
};

export const appsCiProductGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsCiProductGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsCiProductGetToOneRelatedResponse, AppsCiProductGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/ciProduct',
        responseTransformer: AppsCiProductGetToOneRelatedResponseTransformer
    });
};

export const appsCustomerReviewsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsCustomerReviewsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsCustomerReviewsGetToManyRelatedResponse, AppsCustomerReviewsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/customerReviews',
        responseTransformer: AppsCustomerReviewsGetToManyRelatedResponseTransformer
    });
};

export const appsEndUserLicenseAgreementGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsEndUserLicenseAgreementGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsEndUserLicenseAgreementGetToOneRelatedResponse, AppsEndUserLicenseAgreementGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/endUserLicenseAgreement'
    });
};

export const appsGameCenterDetailGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsGameCenterDetailGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsGameCenterDetailGetToOneRelatedResponse, AppsGameCenterDetailGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/gameCenterDetail'
    });
};

/**
 * @deprecated
 */
export const appsGameCenterEnabledVersionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsGameCenterEnabledVersionsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsGameCenterEnabledVersionsGetToManyRelatedResponse, AppsGameCenterEnabledVersionsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/gameCenterEnabledVersions'
    });
};

/**
 * @deprecated
 */
export const appsInAppPurchasesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsInAppPurchasesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsInAppPurchasesGetToManyRelatedResponse, AppsInAppPurchasesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/inAppPurchases'
    });
};

export const appsInAppPurchasesV2GetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsInAppPurchasesV2GetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsInAppPurchasesV2GetToManyRelatedResponse, AppsInAppPurchasesV2GetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/inAppPurchasesV2'
    });
};

export const appsMarketplaceSearchDetailGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsMarketplaceSearchDetailGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsMarketplaceSearchDetailGetToOneRelatedResponse, AppsMarketplaceSearchDetailGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/marketplaceSearchDetail'
    });
};

export const appsPerfPowerMetricsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsPerfPowerMetricsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsPerfPowerMetricsGetToManyRelatedResponse, AppsPerfPowerMetricsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/perfPowerMetrics'
    });
};

export const appsPreReleaseVersionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsPreReleaseVersionsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsPreReleaseVersionsGetToManyRelatedResponse, AppsPreReleaseVersionsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/preReleaseVersions'
    });
};

export const appsPromotedPurchasesGetToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsPromotedPurchasesGetToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsPromotedPurchasesGetToManyRelationshipResponse, AppsPromotedPurchasesGetToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/relationships/promotedPurchases'
    });
};

export const appsPromotedPurchasesReplaceToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsPromotedPurchasesReplaceToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AppsPromotedPurchasesReplaceToManyRelationshipResponse, AppsPromotedPurchasesReplaceToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/relationships/promotedPurchases'
    });
};

export const appsPromotedPurchasesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsPromotedPurchasesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsPromotedPurchasesGetToManyRelatedResponse, AppsPromotedPurchasesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/promotedPurchases'
    });
};

export const appsReviewSubmissionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsReviewSubmissionsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsReviewSubmissionsGetToManyRelatedResponse, AppsReviewSubmissionsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/reviewSubmissions',
        responseTransformer: AppsReviewSubmissionsGetToManyRelatedResponseTransformer
    });
};

export const appsSubscriptionGracePeriodGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsSubscriptionGracePeriodGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsSubscriptionGracePeriodGetToOneRelatedResponse, AppsSubscriptionGracePeriodGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/subscriptionGracePeriod'
    });
};

export const appsSubscriptionGroupsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsSubscriptionGroupsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsSubscriptionGroupsGetToManyRelatedResponse, AppsSubscriptionGroupsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/subscriptionGroups'
    });
};

export const betaAppLocalizationsAppGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaAppLocalizationsAppGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaAppLocalizationsAppGetToOneRelatedResponse, BetaAppLocalizationsAppGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/betaAppLocalizations/{id}/app'
    });
};

export const betaAppReviewDetailsAppGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaAppReviewDetailsAppGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaAppReviewDetailsAppGetToOneRelatedResponse, BetaAppReviewDetailsAppGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/betaAppReviewDetails/{id}/app'
    });
};

export const betaAppReviewSubmissionsBuildGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaAppReviewSubmissionsBuildGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaAppReviewSubmissionsBuildGetToOneRelatedResponse, BetaAppReviewSubmissionsBuildGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/betaAppReviewSubmissions/{id}/build',
        responseTransformer: BetaAppReviewSubmissionsBuildGetToOneRelatedResponseTransformer
    });
};

export const betaBuildLocalizationsBuildGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaBuildLocalizationsBuildGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaBuildLocalizationsBuildGetToOneRelatedResponse, BetaBuildLocalizationsBuildGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/betaBuildLocalizations/{id}/build',
        responseTransformer: BetaBuildLocalizationsBuildGetToOneRelatedResponseTransformer
    });
};

export const betaGroupsAppGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaGroupsAppGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaGroupsAppGetToOneRelatedResponse, BetaGroupsAppGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/betaGroups/{id}/app'
    });
};

export const betaGroupsBetaRecruitmentCriteriaGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaGroupsBetaRecruitmentCriteriaGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaGroupsBetaRecruitmentCriteriaGetToOneRelatedResponse, BetaGroupsBetaRecruitmentCriteriaGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/betaGroups/{id}/betaRecruitmentCriteria',
        responseTransformer: BetaGroupsBetaRecruitmentCriteriaGetToOneRelatedResponseTransformer
    });
};

export const betaGroupsBetaRecruitmentCriterionCompatibleBuildCheckGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaGroupsBetaRecruitmentCriterionCompatibleBuildCheckGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaGroupsBetaRecruitmentCriterionCompatibleBuildCheckGetToOneRelatedResponse, BetaGroupsBetaRecruitmentCriterionCompatibleBuildCheckGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/betaGroups/{id}/betaRecruitmentCriterionCompatibleBuildCheck'
    });
};

export const betaGroupsBetaTestersGetToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaGroupsBetaTestersGetToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaGroupsBetaTestersGetToManyRelationshipResponse, BetaGroupsBetaTestersGetToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/betaGroups/{id}/relationships/betaTesters'
    });
};

export const betaGroupsBetaTestersCreateToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaGroupsBetaTestersCreateToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).post<BetaGroupsBetaTestersCreateToManyRelationshipResponse, BetaGroupsBetaTestersCreateToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/betaGroups/{id}/relationships/betaTesters'
    });
};

export const betaGroupsBetaTestersDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaGroupsBetaTestersDeleteToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).delete<BetaGroupsBetaTestersDeleteToManyRelationshipResponse, BetaGroupsBetaTestersDeleteToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/betaGroups/{id}/relationships/betaTesters'
    });
};

export const betaGroupsBetaTestersGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaGroupsBetaTestersGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaGroupsBetaTestersGetToManyRelatedResponse, BetaGroupsBetaTestersGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/betaGroups/{id}/betaTesters'
    });
};

export const betaGroupsBuildsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaGroupsBuildsGetToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaGroupsBuildsGetToManyRelationshipResponse, BetaGroupsBuildsGetToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/betaGroups/{id}/relationships/builds'
    });
};

export const betaGroupsBuildsCreateToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaGroupsBuildsCreateToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).post<BetaGroupsBuildsCreateToManyRelationshipResponse, BetaGroupsBuildsCreateToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/betaGroups/{id}/relationships/builds'
    });
};

export const betaGroupsBuildsDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaGroupsBuildsDeleteToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).delete<BetaGroupsBuildsDeleteToManyRelationshipResponse, BetaGroupsBuildsDeleteToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/betaGroups/{id}/relationships/builds'
    });
};

export const betaGroupsBuildsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaGroupsBuildsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaGroupsBuildsGetToManyRelatedResponse, BetaGroupsBuildsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/betaGroups/{id}/builds',
        responseTransformer: BetaGroupsBuildsGetToManyRelatedResponseTransformer
    });
};

export const betaLicenseAgreementsAppGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaLicenseAgreementsAppGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaLicenseAgreementsAppGetToOneRelatedResponse, BetaLicenseAgreementsAppGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/betaLicenseAgreements/{id}/app'
    });
};

export const betaTestersAppsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaTestersAppsGetToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaTestersAppsGetToManyRelationshipResponse, BetaTestersAppsGetToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/betaTesters/{id}/relationships/apps'
    });
};

export const betaTestersAppsDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaTestersAppsDeleteToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).delete<BetaTestersAppsDeleteToManyRelationshipResponse, BetaTestersAppsDeleteToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/betaTesters/{id}/relationships/apps'
    });
};

export const betaTestersAppsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaTestersAppsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaTestersAppsGetToManyRelatedResponse, BetaTestersAppsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/betaTesters/{id}/apps'
    });
};

export const betaTestersBetaGroupsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaTestersBetaGroupsGetToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaTestersBetaGroupsGetToManyRelationshipResponse, BetaTestersBetaGroupsGetToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/betaTesters/{id}/relationships/betaGroups'
    });
};

export const betaTestersBetaGroupsCreateToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaTestersBetaGroupsCreateToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).post<BetaTestersBetaGroupsCreateToManyRelationshipResponse, BetaTestersBetaGroupsCreateToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/betaTesters/{id}/relationships/betaGroups'
    });
};

export const betaTestersBetaGroupsDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaTestersBetaGroupsDeleteToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).delete<BetaTestersBetaGroupsDeleteToManyRelationshipResponse, BetaTestersBetaGroupsDeleteToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/betaTesters/{id}/relationships/betaGroups'
    });
};

export const betaTestersBetaGroupsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaTestersBetaGroupsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaTestersBetaGroupsGetToManyRelatedResponse, BetaTestersBetaGroupsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/betaTesters/{id}/betaGroups',
        responseTransformer: BetaTestersBetaGroupsGetToManyRelatedResponseTransformer
    });
};

export const betaTestersBuildsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaTestersBuildsGetToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaTestersBuildsGetToManyRelationshipResponse, BetaTestersBuildsGetToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/betaTesters/{id}/relationships/builds'
    });
};

export const betaTestersBuildsCreateToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaTestersBuildsCreateToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).post<BetaTestersBuildsCreateToManyRelationshipResponse, BetaTestersBuildsCreateToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/betaTesters/{id}/relationships/builds'
    });
};

export const betaTestersBuildsDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaTestersBuildsDeleteToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).delete<BetaTestersBuildsDeleteToManyRelationshipResponse, BetaTestersBuildsDeleteToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/betaTesters/{id}/relationships/builds'
    });
};

export const betaTestersBuildsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaTestersBuildsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaTestersBuildsGetToManyRelatedResponse, BetaTestersBuildsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/betaTesters/{id}/builds',
        responseTransformer: BetaTestersBuildsGetToManyRelatedResponseTransformer
    });
};

export const buildBetaDetailsBuildGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildBetaDetailsBuildGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BuildBetaDetailsBuildGetToOneRelatedResponse, BuildBetaDetailsBuildGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/buildBetaDetails/{id}/build',
        responseTransformer: BuildBetaDetailsBuildGetToOneRelatedResponseTransformer
    });
};

export const buildBundlesAppClipDomainCacheStatusGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildBundlesAppClipDomainCacheStatusGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BuildBundlesAppClipDomainCacheStatusGetToOneRelatedResponse, BuildBundlesAppClipDomainCacheStatusGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/buildBundles/{id}/appClipDomainCacheStatus',
        responseTransformer: BuildBundlesAppClipDomainCacheStatusGetToOneRelatedResponseTransformer
    });
};

export const buildBundlesAppClipDomainDebugStatusGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildBundlesAppClipDomainDebugStatusGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BuildBundlesAppClipDomainDebugStatusGetToOneRelatedResponse, BuildBundlesAppClipDomainDebugStatusGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/buildBundles/{id}/appClipDomainDebugStatus',
        responseTransformer: BuildBundlesAppClipDomainDebugStatusGetToOneRelatedResponseTransformer
    });
};

export const buildBundlesBetaAppClipInvocationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildBundlesBetaAppClipInvocationsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BuildBundlesBetaAppClipInvocationsGetToManyRelatedResponse, BuildBundlesBetaAppClipInvocationsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/buildBundles/{id}/betaAppClipInvocations'
    });
};

export const buildBundlesBuildBundleFileSizesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildBundlesBuildBundleFileSizesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BuildBundlesBuildBundleFileSizesGetToManyRelatedResponse, BuildBundlesBuildBundleFileSizesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/buildBundles/{id}/buildBundleFileSizes'
    });
};

export const buildsAppGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildsAppGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BuildsAppGetToOneRelatedResponse, BuildsAppGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/builds/{id}/app'
    });
};

export const buildsAppEncryptionDeclarationGetToOneRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildsAppEncryptionDeclarationGetToOneRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<BuildsAppEncryptionDeclarationGetToOneRelationshipResponse, BuildsAppEncryptionDeclarationGetToOneRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/builds/{id}/relationships/appEncryptionDeclaration'
    });
};

export const buildsAppEncryptionDeclarationUpdateToOneRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildsAppEncryptionDeclarationUpdateToOneRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).patch<BuildsAppEncryptionDeclarationUpdateToOneRelationshipResponse, BuildsAppEncryptionDeclarationUpdateToOneRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/builds/{id}/relationships/appEncryptionDeclaration'
    });
};

export const buildsAppEncryptionDeclarationGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildsAppEncryptionDeclarationGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BuildsAppEncryptionDeclarationGetToOneRelatedResponse, BuildsAppEncryptionDeclarationGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/builds/{id}/appEncryptionDeclaration',
        responseTransformer: BuildsAppEncryptionDeclarationGetToOneRelatedResponseTransformer
    });
};

export const buildsAppStoreVersionGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildsAppStoreVersionGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BuildsAppStoreVersionGetToOneRelatedResponse, BuildsAppStoreVersionGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/builds/{id}/appStoreVersion',
        responseTransformer: BuildsAppStoreVersionGetToOneRelatedResponseTransformer
    });
};

export const buildsBetaAppReviewSubmissionGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildsBetaAppReviewSubmissionGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BuildsBetaAppReviewSubmissionGetToOneRelatedResponse, BuildsBetaAppReviewSubmissionGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/builds/{id}/betaAppReviewSubmission',
        responseTransformer: BuildsBetaAppReviewSubmissionGetToOneRelatedResponseTransformer
    });
};

export const buildsBetaBuildLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildsBetaBuildLocalizationsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BuildsBetaBuildLocalizationsGetToManyRelatedResponse, BuildsBetaBuildLocalizationsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/builds/{id}/betaBuildLocalizations'
    });
};

export const buildsBetaGroupsCreateToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildsBetaGroupsCreateToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).post<BuildsBetaGroupsCreateToManyRelationshipResponse, BuildsBetaGroupsCreateToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/builds/{id}/relationships/betaGroups'
    });
};

export const buildsBetaGroupsDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildsBetaGroupsDeleteToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).delete<BuildsBetaGroupsDeleteToManyRelationshipResponse, BuildsBetaGroupsDeleteToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/builds/{id}/relationships/betaGroups'
    });
};

export const buildsBuildBetaDetailGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildsBuildBetaDetailGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BuildsBuildBetaDetailGetToOneRelatedResponse, BuildsBuildBetaDetailGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/builds/{id}/buildBetaDetail',
        responseTransformer: BuildsBuildBetaDetailGetToOneRelatedResponseTransformer
    });
};

export const buildsDiagnosticSignaturesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildsDiagnosticSignaturesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BuildsDiagnosticSignaturesGetToManyRelatedResponse, BuildsDiagnosticSignaturesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/builds/{id}/diagnosticSignatures'
    });
};

export const buildsIconsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildsIconsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BuildsIconsGetToManyRelatedResponse, BuildsIconsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/builds/{id}/icons'
    });
};

export const buildsIndividualTestersGetToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildsIndividualTestersGetToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<BuildsIndividualTestersGetToManyRelationshipResponse, BuildsIndividualTestersGetToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/builds/{id}/relationships/individualTesters'
    });
};

export const buildsIndividualTestersCreateToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildsIndividualTestersCreateToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).post<BuildsIndividualTestersCreateToManyRelationshipResponse, BuildsIndividualTestersCreateToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/builds/{id}/relationships/individualTesters'
    });
};

export const buildsIndividualTestersDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildsIndividualTestersDeleteToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).delete<BuildsIndividualTestersDeleteToManyRelationshipResponse, BuildsIndividualTestersDeleteToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/builds/{id}/relationships/individualTesters'
    });
};

export const buildsIndividualTestersGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildsIndividualTestersGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BuildsIndividualTestersGetToManyRelatedResponse, BuildsIndividualTestersGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/builds/{id}/individualTesters'
    });
};

export const buildsPerfPowerMetricsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildsPerfPowerMetricsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BuildsPerfPowerMetricsGetToManyRelatedResponse, BuildsPerfPowerMetricsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/builds/{id}/perfPowerMetrics'
    });
};

export const buildsPreReleaseVersionGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildsPreReleaseVersionGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BuildsPreReleaseVersionGetToOneRelatedResponse, BuildsPreReleaseVersionGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/builds/{id}/preReleaseVersion'
    });
};

export const bundleIdsAppGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BundleIdsAppGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BundleIdsAppGetToOneRelatedResponse, BundleIdsAppGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/bundleIds/{id}/app'
    });
};

export const bundleIdsBundleIdCapabilitiesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BundleIdsBundleIdCapabilitiesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BundleIdsBundleIdCapabilitiesGetToManyRelatedResponse, BundleIdsBundleIdCapabilitiesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/bundleIds/{id}/bundleIdCapabilities'
    });
};

export const bundleIdsProfilesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BundleIdsProfilesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<BundleIdsProfilesGetToManyRelatedResponse, BundleIdsProfilesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/bundleIds/{id}/profiles',
        responseTransformer: BundleIdsProfilesGetToManyRelatedResponseTransformer
    });
};

export const ciBuildActionsArtifactsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiBuildActionsArtifactsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiBuildActionsArtifactsGetToManyRelatedResponse, CiBuildActionsArtifactsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/ciBuildActions/{id}/artifacts'
    });
};

export const ciBuildActionsBuildRunGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiBuildActionsBuildRunGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiBuildActionsBuildRunGetToOneRelatedResponse, CiBuildActionsBuildRunGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/ciBuildActions/{id}/buildRun',
        responseTransformer: CiBuildActionsBuildRunGetToOneRelatedResponseTransformer
    });
};

export const ciBuildActionsIssuesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiBuildActionsIssuesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiBuildActionsIssuesGetToManyRelatedResponse, CiBuildActionsIssuesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/ciBuildActions/{id}/issues'
    });
};

export const ciBuildActionsTestResultsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiBuildActionsTestResultsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiBuildActionsTestResultsGetToManyRelatedResponse, CiBuildActionsTestResultsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/ciBuildActions/{id}/testResults'
    });
};

export const ciBuildRunsActionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiBuildRunsActionsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiBuildRunsActionsGetToManyRelatedResponse, CiBuildRunsActionsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/ciBuildRuns/{id}/actions',
        responseTransformer: CiBuildRunsActionsGetToManyRelatedResponseTransformer
    });
};

export const ciBuildRunsBuildsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiBuildRunsBuildsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiBuildRunsBuildsGetToManyRelatedResponse, CiBuildRunsBuildsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/ciBuildRuns/{id}/builds',
        responseTransformer: CiBuildRunsBuildsGetToManyRelatedResponseTransformer
    });
};

export const ciMacOsVersionsXcodeVersionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiMacOsVersionsXcodeVersionsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiMacOsVersionsXcodeVersionsGetToManyRelatedResponse, CiMacOsVersionsXcodeVersionsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/ciMacOsVersions/{id}/xcodeVersions'
    });
};

export const ciProductsAdditionalRepositoriesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiProductsAdditionalRepositoriesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiProductsAdditionalRepositoriesGetToManyRelatedResponse, CiProductsAdditionalRepositoriesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/ciProducts/{id}/additionalRepositories',
        responseTransformer: CiProductsAdditionalRepositoriesGetToManyRelatedResponseTransformer
    });
};

export const ciProductsAppGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiProductsAppGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiProductsAppGetToOneRelatedResponse, CiProductsAppGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/ciProducts/{id}/app'
    });
};

export const ciProductsBuildRunsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiProductsBuildRunsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiProductsBuildRunsGetToManyRelatedResponse, CiProductsBuildRunsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/ciProducts/{id}/buildRuns',
        responseTransformer: CiProductsBuildRunsGetToManyRelatedResponseTransformer
    });
};

export const ciProductsPrimaryRepositoriesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiProductsPrimaryRepositoriesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiProductsPrimaryRepositoriesGetToManyRelatedResponse, CiProductsPrimaryRepositoriesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/ciProducts/{id}/primaryRepositories',
        responseTransformer: CiProductsPrimaryRepositoriesGetToManyRelatedResponseTransformer
    });
};

export const ciProductsWorkflowsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiProductsWorkflowsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiProductsWorkflowsGetToManyRelatedResponse, CiProductsWorkflowsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/ciProducts/{id}/workflows',
        responseTransformer: CiProductsWorkflowsGetToManyRelatedResponseTransformer
    });
};

export const ciWorkflowsBuildRunsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiWorkflowsBuildRunsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiWorkflowsBuildRunsGetToManyRelatedResponse, CiWorkflowsBuildRunsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/ciWorkflows/{id}/buildRuns',
        responseTransformer: CiWorkflowsBuildRunsGetToManyRelatedResponseTransformer
    });
};

export const ciWorkflowsRepositoryGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiWorkflowsRepositoryGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiWorkflowsRepositoryGetToOneRelatedResponse, CiWorkflowsRepositoryGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/ciWorkflows/{id}/repository',
        responseTransformer: CiWorkflowsRepositoryGetToOneRelatedResponseTransformer
    });
};

export const ciXcodeVersionsMacOsVersionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CiXcodeVersionsMacOsVersionsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<CiXcodeVersionsMacOsVersionsGetToManyRelatedResponse, CiXcodeVersionsMacOsVersionsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/ciXcodeVersions/{id}/macOsVersions'
    });
};

export const customerReviewsResponseGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CustomerReviewsResponseGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<CustomerReviewsResponseGetToOneRelatedResponse, CustomerReviewsResponseGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/customerReviews/{id}/response',
        responseTransformer: CustomerReviewsResponseGetToOneRelatedResponseTransformer
    });
};

export const diagnosticSignaturesLogsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DiagnosticSignaturesLogsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<DiagnosticSignaturesLogsGetToManyRelatedResponse, DiagnosticSignaturesLogsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/diagnosticSignatures/{id}/logs',
        responseTransformer: DiagnosticSignaturesLogsGetToManyRelatedResponseTransformer
    });
};

export const endUserLicenseAgreementsTerritoriesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<EndUserLicenseAgreementsTerritoriesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<EndUserLicenseAgreementsTerritoriesGetToManyRelatedResponse, EndUserLicenseAgreementsTerritoriesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/endUserLicenseAgreements/{id}/territories'
    });
};

export const gameCenterAchievementLocalizationsGameCenterAchievementGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAchievementLocalizationsGameCenterAchievementGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterAchievementLocalizationsGameCenterAchievementGetToOneRelatedResponse, GameCenterAchievementLocalizationsGameCenterAchievementGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAchievementLocalizations/{id}/gameCenterAchievement'
    });
};

export const gameCenterAchievementLocalizationsGameCenterAchievementImageGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAchievementLocalizationsGameCenterAchievementImageGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterAchievementLocalizationsGameCenterAchievementImageGetToOneRelatedResponse, GameCenterAchievementLocalizationsGameCenterAchievementImageGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAchievementLocalizations/{id}/gameCenterAchievementImage'
    });
};

/**
 * @deprecated
 */
export const gameCenterAchievementsGroupAchievementGetToOneRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAchievementsGroupAchievementGetToOneRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterAchievementsGroupAchievementGetToOneRelationshipResponse, GameCenterAchievementsGroupAchievementGetToOneRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAchievements/{id}/relationships/groupAchievement'
    });
};

/**
 * @deprecated
 */
export const gameCenterAchievementsGroupAchievementUpdateToOneRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAchievementsGroupAchievementUpdateToOneRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterAchievementsGroupAchievementUpdateToOneRelationshipResponse, GameCenterAchievementsGroupAchievementUpdateToOneRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAchievements/{id}/relationships/groupAchievement'
    });
};

/**
 * @deprecated
 */
export const gameCenterAchievementsGroupAchievementGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAchievementsGroupAchievementGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterAchievementsGroupAchievementGetToOneRelatedResponse, GameCenterAchievementsGroupAchievementGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAchievements/{id}/groupAchievement'
    });
};

export const gameCenterAchievementsLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAchievementsLocalizationsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterAchievementsLocalizationsGetToManyRelatedResponse, GameCenterAchievementsLocalizationsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAchievements/{id}/localizations'
    });
};

export const gameCenterAchievementsReleasesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAchievementsReleasesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterAchievementsReleasesGetToManyRelatedResponse, GameCenterAchievementsReleasesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAchievements/{id}/releases'
    });
};

export const gameCenterAppVersionsAppStoreVersionGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAppVersionsAppStoreVersionGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterAppVersionsAppStoreVersionGetToOneRelatedResponse, GameCenterAppVersionsAppStoreVersionGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAppVersions/{id}/appStoreVersion',
        responseTransformer: GameCenterAppVersionsAppStoreVersionGetToOneRelatedResponseTransformer
    });
};

export const gameCenterAppVersionsCompatibilityVersionsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAppVersionsCompatibilityVersionsGetToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterAppVersionsCompatibilityVersionsGetToManyRelationshipResponse, GameCenterAppVersionsCompatibilityVersionsGetToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAppVersions/{id}/relationships/compatibilityVersions'
    });
};

export const gameCenterAppVersionsCompatibilityVersionsCreateToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAppVersionsCompatibilityVersionsCreateToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterAppVersionsCompatibilityVersionsCreateToManyRelationshipResponse, GameCenterAppVersionsCompatibilityVersionsCreateToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAppVersions/{id}/relationships/compatibilityVersions'
    });
};

export const gameCenterAppVersionsCompatibilityVersionsDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAppVersionsCompatibilityVersionsDeleteToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).delete<GameCenterAppVersionsCompatibilityVersionsDeleteToManyRelationshipResponse, GameCenterAppVersionsCompatibilityVersionsDeleteToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAppVersions/{id}/relationships/compatibilityVersions'
    });
};

export const gameCenterAppVersionsCompatibilityVersionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterAppVersionsCompatibilityVersionsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterAppVersionsCompatibilityVersionsGetToManyRelatedResponse, GameCenterAppVersionsCompatibilityVersionsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterAppVersions/{id}/compatibilityVersions'
    });
};

export const gameCenterDetailsAchievementReleasesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterDetailsAchievementReleasesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterDetailsAchievementReleasesGetToManyRelatedResponse, GameCenterDetailsAchievementReleasesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterDetails/{id}/achievementReleases'
    });
};

export const gameCenterDetailsGameCenterAchievementsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterDetailsGameCenterAchievementsGetToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterDetailsGameCenterAchievementsGetToManyRelationshipResponse, GameCenterDetailsGameCenterAchievementsGetToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterDetails/{id}/relationships/gameCenterAchievements'
    });
};

export const gameCenterDetailsGameCenterAchievementsReplaceToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterDetailsGameCenterAchievementsReplaceToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterDetailsGameCenterAchievementsReplaceToManyRelationshipResponse, GameCenterDetailsGameCenterAchievementsReplaceToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterDetails/{id}/relationships/gameCenterAchievements'
    });
};

export const gameCenterDetailsGameCenterAchievementsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterDetailsGameCenterAchievementsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterDetailsGameCenterAchievementsGetToManyRelatedResponse, GameCenterDetailsGameCenterAchievementsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterDetails/{id}/gameCenterAchievements'
    });
};

export const gameCenterDetailsGameCenterAppVersionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterDetailsGameCenterAppVersionsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterDetailsGameCenterAppVersionsGetToManyRelatedResponse, GameCenterDetailsGameCenterAppVersionsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterDetails/{id}/gameCenterAppVersions'
    });
};

export const gameCenterDetailsGameCenterGroupGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterDetailsGameCenterGroupGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterDetailsGameCenterGroupGetToOneRelatedResponse, GameCenterDetailsGameCenterGroupGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterDetails/{id}/gameCenterGroup'
    });
};

export const gameCenterDetailsGameCenterLeaderboardSetsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelationshipResponse, GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterDetails/{id}/relationships/gameCenterLeaderboardSets'
    });
};

export const gameCenterDetailsGameCenterLeaderboardSetsReplaceToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterDetailsGameCenterLeaderboardSetsReplaceToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterDetailsGameCenterLeaderboardSetsReplaceToManyRelationshipResponse, GameCenterDetailsGameCenterLeaderboardSetsReplaceToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterDetails/{id}/relationships/gameCenterLeaderboardSets'
    });
};

export const gameCenterDetailsGameCenterLeaderboardSetsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedResponse, GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterDetails/{id}/gameCenterLeaderboardSets'
    });
};

export const gameCenterDetailsGameCenterLeaderboardsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterDetailsGameCenterLeaderboardsGetToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterDetailsGameCenterLeaderboardsGetToManyRelationshipResponse, GameCenterDetailsGameCenterLeaderboardsGetToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterDetails/{id}/relationships/gameCenterLeaderboards'
    });
};

export const gameCenterDetailsGameCenterLeaderboardsReplaceToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterDetailsGameCenterLeaderboardsReplaceToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterDetailsGameCenterLeaderboardsReplaceToManyRelationshipResponse, GameCenterDetailsGameCenterLeaderboardsReplaceToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterDetails/{id}/relationships/gameCenterLeaderboards'
    });
};

export const gameCenterDetailsGameCenterLeaderboardsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedResponse, GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterDetails/{id}/gameCenterLeaderboards',
        responseTransformer: GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedResponseTransformer
    });
};

export const gameCenterDetailsLeaderboardReleasesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterDetailsLeaderboardReleasesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterDetailsLeaderboardReleasesGetToManyRelatedResponse, GameCenterDetailsLeaderboardReleasesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterDetails/{id}/leaderboardReleases'
    });
};

export const gameCenterDetailsLeaderboardSetReleasesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedResponse, GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterDetails/{id}/leaderboardSetReleases'
    });
};

/**
 * @deprecated
 */
export const gameCenterEnabledVersionsCompatibleVersionsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterEnabledVersionsCompatibleVersionsGetToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterEnabledVersionsCompatibleVersionsGetToManyRelationshipResponse, GameCenterEnabledVersionsCompatibleVersionsGetToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions'
    });
};

/**
 * @deprecated
 */
export const gameCenterEnabledVersionsCompatibleVersionsCreateToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterEnabledVersionsCompatibleVersionsCreateToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterEnabledVersionsCompatibleVersionsCreateToManyRelationshipResponse, GameCenterEnabledVersionsCompatibleVersionsCreateToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions'
    });
};

/**
 * @deprecated
 */
export const gameCenterEnabledVersionsCompatibleVersionsReplaceToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterEnabledVersionsCompatibleVersionsReplaceToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterEnabledVersionsCompatibleVersionsReplaceToManyRelationshipResponse, GameCenterEnabledVersionsCompatibleVersionsReplaceToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions'
    });
};

/**
 * @deprecated
 */
export const gameCenterEnabledVersionsCompatibleVersionsDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterEnabledVersionsCompatibleVersionsDeleteToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).delete<GameCenterEnabledVersionsCompatibleVersionsDeleteToManyRelationshipResponse, GameCenterEnabledVersionsCompatibleVersionsDeleteToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions'
    });
};

/**
 * @deprecated
 */
export const gameCenterEnabledVersionsCompatibleVersionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterEnabledVersionsCompatibleVersionsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterEnabledVersionsCompatibleVersionsGetToManyRelatedResponse, GameCenterEnabledVersionsCompatibleVersionsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterEnabledVersions/{id}/compatibleVersions'
    });
};

export const gameCenterGroupsGameCenterAchievementsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterGroupsGameCenterAchievementsGetToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterGroupsGameCenterAchievementsGetToManyRelationshipResponse, GameCenterGroupsGameCenterAchievementsGetToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterGroups/{id}/relationships/gameCenterAchievements'
    });
};

export const gameCenterGroupsGameCenterAchievementsReplaceToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterGroupsGameCenterAchievementsReplaceToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterGroupsGameCenterAchievementsReplaceToManyRelationshipResponse, GameCenterGroupsGameCenterAchievementsReplaceToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterGroups/{id}/relationships/gameCenterAchievements'
    });
};

export const gameCenterGroupsGameCenterAchievementsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterGroupsGameCenterAchievementsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterGroupsGameCenterAchievementsGetToManyRelatedResponse, GameCenterGroupsGameCenterAchievementsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterGroups/{id}/gameCenterAchievements'
    });
};

export const gameCenterGroupsGameCenterDetailsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterGroupsGameCenterDetailsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterGroupsGameCenterDetailsGetToManyRelatedResponse, GameCenterGroupsGameCenterDetailsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterGroups/{id}/gameCenterDetails'
    });
};

export const gameCenterGroupsGameCenterLeaderboardSetsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterGroupsGameCenterLeaderboardSetsGetToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterGroupsGameCenterLeaderboardSetsGetToManyRelationshipResponse, GameCenterGroupsGameCenterLeaderboardSetsGetToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterGroups/{id}/relationships/gameCenterLeaderboardSets'
    });
};

export const gameCenterGroupsGameCenterLeaderboardSetsReplaceToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterGroupsGameCenterLeaderboardSetsReplaceToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterGroupsGameCenterLeaderboardSetsReplaceToManyRelationshipResponse, GameCenterGroupsGameCenterLeaderboardSetsReplaceToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterGroups/{id}/relationships/gameCenterLeaderboardSets'
    });
};

export const gameCenterGroupsGameCenterLeaderboardSetsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterGroupsGameCenterLeaderboardSetsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterGroupsGameCenterLeaderboardSetsGetToManyRelatedResponse, GameCenterGroupsGameCenterLeaderboardSetsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterGroups/{id}/gameCenterLeaderboardSets'
    });
};

export const gameCenterGroupsGameCenterLeaderboardsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterGroupsGameCenterLeaderboardsGetToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterGroupsGameCenterLeaderboardsGetToManyRelationshipResponse, GameCenterGroupsGameCenterLeaderboardsGetToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterGroups/{id}/relationships/gameCenterLeaderboards'
    });
};

export const gameCenterGroupsGameCenterLeaderboardsReplaceToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterGroupsGameCenterLeaderboardsReplaceToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterGroupsGameCenterLeaderboardsReplaceToManyRelationshipResponse, GameCenterGroupsGameCenterLeaderboardsReplaceToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterGroups/{id}/relationships/gameCenterLeaderboards'
    });
};

export const gameCenterGroupsGameCenterLeaderboardsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterGroupsGameCenterLeaderboardsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterGroupsGameCenterLeaderboardsGetToManyRelatedResponse, GameCenterGroupsGameCenterLeaderboardsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterGroups/{id}/gameCenterLeaderboards',
        responseTransformer: GameCenterGroupsGameCenterLeaderboardsGetToManyRelatedResponseTransformer
    });
};

export const gameCenterLeaderboardLocalizationsGameCenterLeaderboardImageGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardLocalizationsGameCenterLeaderboardImageGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterLeaderboardLocalizationsGameCenterLeaderboardImageGetToOneRelatedResponse, GameCenterLeaderboardLocalizationsGameCenterLeaderboardImageGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardLocalizations/{id}/gameCenterLeaderboardImage'
    });
};

export const gameCenterLeaderboardSetLocalizationsGameCenterLeaderboardSetImageGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetLocalizationsGameCenterLeaderboardSetImageGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterLeaderboardSetLocalizationsGameCenterLeaderboardSetImageGetToOneRelatedResponse, GameCenterLeaderboardSetLocalizationsGameCenterLeaderboardSetImageGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSetLocalizations/{id}/gameCenterLeaderboardSetImage'
    });
};

export const gameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedResponse, GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSetMemberLocalizations/{id}/gameCenterLeaderboard',
        responseTransformer: GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedResponseTransformer
    });
};

export const gameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedResponse, GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSetMemberLocalizations/{id}/gameCenterLeaderboardSet'
    });
};

export const gameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelationshipResponse, GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSets/{id}/relationships/gameCenterLeaderboards'
    });
};

export const gameCenterLeaderboardSetsGameCenterLeaderboardsCreateToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetsGameCenterLeaderboardsCreateToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).post<GameCenterLeaderboardSetsGameCenterLeaderboardsCreateToManyRelationshipResponse, GameCenterLeaderboardSetsGameCenterLeaderboardsCreateToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSets/{id}/relationships/gameCenterLeaderboards'
    });
};

export const gameCenterLeaderboardSetsGameCenterLeaderboardsReplaceToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetsGameCenterLeaderboardsReplaceToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterLeaderboardSetsGameCenterLeaderboardsReplaceToManyRelationshipResponse, GameCenterLeaderboardSetsGameCenterLeaderboardsReplaceToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSets/{id}/relationships/gameCenterLeaderboards'
    });
};

export const gameCenterLeaderboardSetsGameCenterLeaderboardsDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetsGameCenterLeaderboardsDeleteToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).delete<GameCenterLeaderboardSetsGameCenterLeaderboardsDeleteToManyRelationshipResponse, GameCenterLeaderboardSetsGameCenterLeaderboardsDeleteToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSets/{id}/relationships/gameCenterLeaderboards'
    });
};

export const gameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelatedResponse, GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSets/{id}/gameCenterLeaderboards',
        responseTransformer: GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelatedResponseTransformer
    });
};

/**
 * @deprecated
 */
export const gameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelationshipResponse, GameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSets/{id}/relationships/groupLeaderboardSet'
    });
};

/**
 * @deprecated
 */
export const gameCenterLeaderboardSetsGroupLeaderboardSetUpdateToOneRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetsGroupLeaderboardSetUpdateToOneRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterLeaderboardSetsGroupLeaderboardSetUpdateToOneRelationshipResponse, GameCenterLeaderboardSetsGroupLeaderboardSetUpdateToOneRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSets/{id}/relationships/groupLeaderboardSet'
    });
};

/**
 * @deprecated
 */
export const gameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelatedResponse, GameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSets/{id}/groupLeaderboardSet'
    });
};

export const gameCenterLeaderboardSetsLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetsLocalizationsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterLeaderboardSetsLocalizationsGetToManyRelatedResponse, GameCenterLeaderboardSetsLocalizationsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSets/{id}/localizations'
    });
};

export const gameCenterLeaderboardSetsReleasesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardSetsReleasesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterLeaderboardSetsReleasesGetToManyRelatedResponse, GameCenterLeaderboardSetsReleasesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboardSets/{id}/releases'
    });
};

/**
 * @deprecated
 */
export const gameCenterLeaderboardsGroupLeaderboardGetToOneRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardsGroupLeaderboardGetToOneRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterLeaderboardsGroupLeaderboardGetToOneRelationshipResponse, GameCenterLeaderboardsGroupLeaderboardGetToOneRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboards/{id}/relationships/groupLeaderboard'
    });
};

/**
 * @deprecated
 */
export const gameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).patch<GameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationshipResponse, GameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboards/{id}/relationships/groupLeaderboard'
    });
};

/**
 * @deprecated
 */
export const gameCenterLeaderboardsGroupLeaderboardGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedResponse, GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboards/{id}/groupLeaderboard',
        responseTransformer: GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedResponseTransformer
    });
};

export const gameCenterLeaderboardsLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardsLocalizationsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterLeaderboardsLocalizationsGetToManyRelatedResponse, GameCenterLeaderboardsLocalizationsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboards/{id}/localizations'
    });
};

export const gameCenterLeaderboardsReleasesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterLeaderboardsReleasesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterLeaderboardsReleasesGetToManyRelatedResponse, GameCenterLeaderboardsReleasesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterLeaderboards/{id}/releases'
    });
};

export const gameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedResponse, GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingRuleSets/{id}/matchmakingQueues'
    });
};

export const gameCenterMatchmakingRuleSetsRulesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingRuleSetsRulesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterMatchmakingRuleSetsRulesGetToManyRelatedResponse, GameCenterMatchmakingRuleSetsRulesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingRuleSets/{id}/rules'
    });
};

export const gameCenterMatchmakingRuleSetsTeamsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingRuleSetsTeamsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterMatchmakingRuleSetsTeamsGetToManyRelatedResponse, GameCenterMatchmakingRuleSetsTeamsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingRuleSets/{id}/teams'
    });
};

export const inAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<InAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelatedResponse, InAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/inAppPurchaseAvailabilities/{id}/availableTerritories'
    });
};

export const inAppPurchasePricePointsEqualizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchasePricePointsEqualizationsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<InAppPurchasePricePointsEqualizationsGetToManyRelatedResponse, InAppPurchasePricePointsEqualizationsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/inAppPurchasePricePoints/{id}/equalizations'
    });
};

export const inAppPurchasePriceSchedulesAutomaticPricesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchasePriceSchedulesAutomaticPricesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<InAppPurchasePriceSchedulesAutomaticPricesGetToManyRelatedResponse, InAppPurchasePriceSchedulesAutomaticPricesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/inAppPurchasePriceSchedules/{id}/automaticPrices',
        responseTransformer: InAppPurchasePriceSchedulesAutomaticPricesGetToManyRelatedResponseTransformer
    });
};

export const inAppPurchasePriceSchedulesBaseTerritoryGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchasePriceSchedulesBaseTerritoryGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<InAppPurchasePriceSchedulesBaseTerritoryGetToOneRelatedResponse, InAppPurchasePriceSchedulesBaseTerritoryGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/inAppPurchasePriceSchedules/{id}/baseTerritory'
    });
};

export const inAppPurchasePriceSchedulesManualPricesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchasePriceSchedulesManualPricesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<InAppPurchasePriceSchedulesManualPricesGetToManyRelatedResponse, InAppPurchasePriceSchedulesManualPricesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/inAppPurchasePriceSchedules/{id}/manualPrices',
        responseTransformer: InAppPurchasePriceSchedulesManualPricesGetToManyRelatedResponseTransformer
    });
};

export const inAppPurchasesV2AppStoreReviewScreenshotGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchasesV2AppStoreReviewScreenshotGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<InAppPurchasesV2AppStoreReviewScreenshotGetToOneRelatedResponse, InAppPurchasesV2AppStoreReviewScreenshotGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v2/inAppPurchases/{id}/appStoreReviewScreenshot'
    });
};

export const inAppPurchasesV2ContentGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchasesV2ContentGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<InAppPurchasesV2ContentGetToOneRelatedResponse, InAppPurchasesV2ContentGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v2/inAppPurchases/{id}/content',
        responseTransformer: InAppPurchasesV2ContentGetToOneRelatedResponseTransformer
    });
};

export const inAppPurchasesV2IapPriceScheduleGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchasesV2IapPriceScheduleGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<InAppPurchasesV2IapPriceScheduleGetToOneRelatedResponse, InAppPurchasesV2IapPriceScheduleGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v2/inAppPurchases/{id}/iapPriceSchedule'
    });
};

export const inAppPurchasesV2ImagesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchasesV2ImagesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<InAppPurchasesV2ImagesGetToManyRelatedResponse, InAppPurchasesV2ImagesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v2/inAppPurchases/{id}/images'
    });
};

export const inAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<InAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelatedResponse, InAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v2/inAppPurchases/{id}/inAppPurchaseAvailability'
    });
};

export const inAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<InAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelatedResponse, InAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v2/inAppPurchases/{id}/inAppPurchaseLocalizations'
    });
};

export const inAppPurchasesV2PricePointsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchasesV2PricePointsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<InAppPurchasesV2PricePointsGetToManyRelatedResponse, InAppPurchasesV2PricePointsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v2/inAppPurchases/{id}/pricePoints'
    });
};

export const inAppPurchasesV2PromotedPurchaseGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<InAppPurchasesV2PromotedPurchaseGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<InAppPurchasesV2PromotedPurchaseGetToOneRelatedResponse, InAppPurchasesV2PromotedPurchaseGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v2/inAppPurchases/{id}/promotedPurchase'
    });
};

export const merchantIdsCertificatesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<MerchantIdsCertificatesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<MerchantIdsCertificatesGetToManyRelatedResponse, MerchantIdsCertificatesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/merchantIds/{id}/certificates',
        responseTransformer: MerchantIdsCertificatesGetToManyRelatedResponseTransformer
    });
};

export const preReleaseVersionsAppGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PreReleaseVersionsAppGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<PreReleaseVersionsAppGetToOneRelatedResponse, PreReleaseVersionsAppGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/preReleaseVersions/{id}/app'
    });
};

export const preReleaseVersionsBuildsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PreReleaseVersionsBuildsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<PreReleaseVersionsBuildsGetToManyRelatedResponse, PreReleaseVersionsBuildsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/preReleaseVersions/{id}/builds',
        responseTransformer: PreReleaseVersionsBuildsGetToManyRelatedResponseTransformer
    });
};

export const profilesBundleIdGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ProfilesBundleIdGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<ProfilesBundleIdGetToOneRelatedResponse, ProfilesBundleIdGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/profiles/{id}/bundleId'
    });
};

export const profilesCertificatesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ProfilesCertificatesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<ProfilesCertificatesGetToManyRelatedResponse, ProfilesCertificatesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/profiles/{id}/certificates',
        responseTransformer: ProfilesCertificatesGetToManyRelatedResponseTransformer
    });
};

export const profilesDevicesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ProfilesDevicesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<ProfilesDevicesGetToManyRelatedResponse, ProfilesDevicesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/profiles/{id}/devices',
        responseTransformer: ProfilesDevicesGetToManyRelatedResponseTransformer
    });
};

export const reviewSubmissionsItemsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ReviewSubmissionsItemsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReviewSubmissionsItemsGetToManyRelatedResponse, ReviewSubmissionsItemsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/reviewSubmissions/{id}/items'
    });
};

export const scmProvidersRepositoriesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ScmProvidersRepositoriesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<ScmProvidersRepositoriesGetToManyRelatedResponse, ScmProvidersRepositoriesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/scmProviders/{id}/repositories',
        responseTransformer: ScmProvidersRepositoriesGetToManyRelatedResponseTransformer
    });
};

export const scmRepositoriesGitReferencesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ScmRepositoriesGitReferencesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<ScmRepositoriesGitReferencesGetToManyRelatedResponse, ScmRepositoriesGitReferencesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/scmRepositories/{id}/gitReferences',
        responseTransformer: ScmRepositoriesGitReferencesGetToManyRelatedResponseTransformer
    });
};

export const scmRepositoriesPullRequestsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ScmRepositoriesPullRequestsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<ScmRepositoriesPullRequestsGetToManyRelatedResponse, ScmRepositoriesPullRequestsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/scmRepositories/{id}/pullRequests',
        responseTransformer: ScmRepositoriesPullRequestsGetToManyRelatedResponseTransformer
    });
};

export const subscriptionAvailabilitiesAvailableTerritoriesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionAvailabilitiesAvailableTerritoriesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionAvailabilitiesAvailableTerritoriesGetToManyRelatedResponse, SubscriptionAvailabilitiesAvailableTerritoriesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionAvailabilities/{id}/availableTerritories'
    });
};

export const subscriptionGroupsSubscriptionGroupLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionGroupsSubscriptionGroupLocalizationsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionGroupsSubscriptionGroupLocalizationsGetToManyRelatedResponse, SubscriptionGroupsSubscriptionGroupLocalizationsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionGroups/{id}/subscriptionGroupLocalizations'
    });
};

export const subscriptionGroupsSubscriptionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionGroupsSubscriptionsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionGroupsSubscriptionsGetToManyRelatedResponse, SubscriptionGroupsSubscriptionsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionGroups/{id}/subscriptions'
    });
};

export const subscriptionOfferCodeOneTimeUseCodesValuesGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionOfferCodeOneTimeUseCodesValuesGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionOfferCodeOneTimeUseCodesValuesGetToOneRelatedResponse, SubscriptionOfferCodeOneTimeUseCodesValuesGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionOfferCodeOneTimeUseCodes/{id}/values'
    });
};

export const subscriptionOfferCodesCustomCodesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionOfferCodesCustomCodesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionOfferCodesCustomCodesGetToManyRelatedResponse, SubscriptionOfferCodesCustomCodesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionOfferCodes/{id}/customCodes',
        responseTransformer: SubscriptionOfferCodesCustomCodesGetToManyRelatedResponseTransformer
    });
};

export const subscriptionOfferCodesOneTimeUseCodesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionOfferCodesOneTimeUseCodesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionOfferCodesOneTimeUseCodesGetToManyRelatedResponse, SubscriptionOfferCodesOneTimeUseCodesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionOfferCodes/{id}/oneTimeUseCodes',
        responseTransformer: SubscriptionOfferCodesOneTimeUseCodesGetToManyRelatedResponseTransformer
    });
};

export const subscriptionOfferCodesPricesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionOfferCodesPricesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionOfferCodesPricesGetToManyRelatedResponse, SubscriptionOfferCodesPricesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionOfferCodes/{id}/prices'
    });
};

export const subscriptionPricePointsEqualizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionPricePointsEqualizationsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionPricePointsEqualizationsGetToManyRelatedResponse, SubscriptionPricePointsEqualizationsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionPricePoints/{id}/equalizations'
    });
};

export const subscriptionPromotionalOffersPricesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionPromotionalOffersPricesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionPromotionalOffersPricesGetToManyRelatedResponse, SubscriptionPromotionalOffersPricesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptionPromotionalOffers/{id}/prices'
    });
};

export const subscriptionsAppStoreReviewScreenshotGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionsAppStoreReviewScreenshotGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionsAppStoreReviewScreenshotGetToOneRelatedResponse, SubscriptionsAppStoreReviewScreenshotGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptions/{id}/appStoreReviewScreenshot'
    });
};

export const subscriptionsImagesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionsImagesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionsImagesGetToManyRelatedResponse, SubscriptionsImagesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptions/{id}/images'
    });
};

export const subscriptionsIntroductoryOffersGetToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionsIntroductoryOffersGetToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionsIntroductoryOffersGetToManyRelationshipResponse, SubscriptionsIntroductoryOffersGetToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptions/{id}/relationships/introductoryOffers'
    });
};

export const subscriptionsIntroductoryOffersDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionsIntroductoryOffersDeleteToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).delete<SubscriptionsIntroductoryOffersDeleteToManyRelationshipResponse, SubscriptionsIntroductoryOffersDeleteToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptions/{id}/relationships/introductoryOffers'
    });
};

export const subscriptionsIntroductoryOffersGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionsIntroductoryOffersGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionsIntroductoryOffersGetToManyRelatedResponse, SubscriptionsIntroductoryOffersGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptions/{id}/introductoryOffers',
        responseTransformer: SubscriptionsIntroductoryOffersGetToManyRelatedResponseTransformer
    });
};

export const subscriptionsOfferCodesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionsOfferCodesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionsOfferCodesGetToManyRelatedResponse, SubscriptionsOfferCodesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptions/{id}/offerCodes'
    });
};

export const subscriptionsPricePointsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionsPricePointsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionsPricePointsGetToManyRelatedResponse, SubscriptionsPricePointsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptions/{id}/pricePoints'
    });
};

export const subscriptionsPricesGetToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionsPricesGetToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionsPricesGetToManyRelationshipResponse, SubscriptionsPricesGetToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptions/{id}/relationships/prices'
    });
};

export const subscriptionsPricesDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionsPricesDeleteToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).delete<SubscriptionsPricesDeleteToManyRelationshipResponse, SubscriptionsPricesDeleteToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptions/{id}/relationships/prices'
    });
};

export const subscriptionsPricesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionsPricesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionsPricesGetToManyRelatedResponse, SubscriptionsPricesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptions/{id}/prices',
        responseTransformer: SubscriptionsPricesGetToManyRelatedResponseTransformer
    });
};

export const subscriptionsPromotedPurchaseGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionsPromotedPurchaseGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionsPromotedPurchaseGetToOneRelatedResponse, SubscriptionsPromotedPurchaseGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptions/{id}/promotedPurchase'
    });
};

export const subscriptionsPromotionalOffersGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionsPromotionalOffersGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionsPromotionalOffersGetToManyRelatedResponse, SubscriptionsPromotionalOffersGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptions/{id}/promotionalOffers'
    });
};

export const subscriptionsSubscriptionAvailabilityGetToOneRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionsSubscriptionAvailabilityGetToOneRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionsSubscriptionAvailabilityGetToOneRelatedResponse, SubscriptionsSubscriptionAvailabilityGetToOneRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptions/{id}/subscriptionAvailability'
    });
};

export const subscriptionsSubscriptionLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionsSubscriptionLocalizationsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionsSubscriptionLocalizationsGetToManyRelatedResponse, SubscriptionsSubscriptionLocalizationsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptions/{id}/subscriptionLocalizations'
    });
};

export const subscriptionsWinBackOffersGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<SubscriptionsWinBackOffersGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<SubscriptionsWinBackOffersGetToManyRelatedResponse, SubscriptionsWinBackOffersGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/subscriptions/{id}/winBackOffers',
        responseTransformer: SubscriptionsWinBackOffersGetToManyRelatedResponseTransformer
    });
};

export const userInvitationsVisibleAppsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<UserInvitationsVisibleAppsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<UserInvitationsVisibleAppsGetToManyRelatedResponse, UserInvitationsVisibleAppsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/userInvitations/{id}/visibleApps'
    });
};

export const usersVisibleAppsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<UsersVisibleAppsGetToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).get<UsersVisibleAppsGetToManyRelationshipResponse, UsersVisibleAppsGetToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/users/{id}/relationships/visibleApps'
    });
};

export const usersVisibleAppsCreateToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<UsersVisibleAppsCreateToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).post<UsersVisibleAppsCreateToManyRelationshipResponse, UsersVisibleAppsCreateToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/users/{id}/relationships/visibleApps'
    });
};

export const usersVisibleAppsReplaceToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<UsersVisibleAppsReplaceToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).patch<UsersVisibleAppsReplaceToManyRelationshipResponse, UsersVisibleAppsReplaceToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/users/{id}/relationships/visibleApps'
    });
};

export const usersVisibleAppsDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<UsersVisibleAppsDeleteToManyRelationshipData, ThrowOnError>) => {
    return (options?.client ?? client).delete<UsersVisibleAppsDeleteToManyRelationshipResponse, UsersVisibleAppsDeleteToManyRelationshipError, ThrowOnError>({
        ...options,
        url: '/v1/users/{id}/relationships/visibleApps'
    });
};

export const usersVisibleAppsGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<UsersVisibleAppsGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<UsersVisibleAppsGetToManyRelatedResponse, UsersVisibleAppsGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/users/{id}/visibleApps'
    });
};

export const winBackOffersPricesGetToManyRelated = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<WinBackOffersPricesGetToManyRelatedData, ThrowOnError>) => {
    return (options?.client ?? client).get<WinBackOffersPricesGetToManyRelatedResponse, WinBackOffersPricesGetToManyRelatedError, ThrowOnError>({
        ...options,
        url: '/v1/winBackOffers/{id}/prices'
    });
};

export const appsBetaTesterUsagesGetMetrics = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<AppsBetaTesterUsagesGetMetricsData, ThrowOnError>) => {
    return (options?.client ?? client).get<AppsBetaTesterUsagesGetMetricsResponse, AppsBetaTesterUsagesGetMetricsError, ThrowOnError>({
        ...options,
        url: '/v1/apps/{id}/metrics/betaTesterUsages'
    });
};

export const betaGroupsBetaTesterUsagesGetMetrics = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaGroupsBetaTesterUsagesGetMetricsData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaGroupsBetaTesterUsagesGetMetricsResponse, BetaGroupsBetaTesterUsagesGetMetricsError, ThrowOnError>({
        ...options,
        url: '/v1/betaGroups/{id}/metrics/betaTesterUsages'
    });
};

export const betaGroupsPublicLinkUsagesGetMetrics = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaGroupsPublicLinkUsagesGetMetricsData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaGroupsPublicLinkUsagesGetMetricsResponse, BetaGroupsPublicLinkUsagesGetMetricsError, ThrowOnError>({
        ...options,
        url: '/v1/betaGroups/{id}/metrics/publicLinkUsages'
    });
};

export const betaTestersBetaTesterUsagesGetMetrics = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BetaTestersBetaTesterUsagesGetMetricsData, ThrowOnError>) => {
    return (options?.client ?? client).get<BetaTestersBetaTesterUsagesGetMetricsResponse, BetaTestersBetaTesterUsagesGetMetricsError, ThrowOnError>({
        ...options,
        url: '/v1/betaTesters/{id}/metrics/betaTesterUsages'
    });
};

export const buildsBetaBuildUsagesGetMetrics = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<BuildsBetaBuildUsagesGetMetricsData, ThrowOnError>) => {
    return (options?.client ?? client).get<BuildsBetaBuildUsagesGetMetricsResponse, BuildsBetaBuildUsagesGetMetricsError, ThrowOnError>({
        ...options,
        url: '/v1/builds/{id}/metrics/betaBuildUsages'
    });
};

export const gameCenterDetailsClassicMatchmakingRequestsGetMetrics = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterDetailsClassicMatchmakingRequestsGetMetricsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterDetailsClassicMatchmakingRequestsGetMetricsResponse, GameCenterDetailsClassicMatchmakingRequestsGetMetricsError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterDetails/{id}/metrics/classicMatchmakingRequests'
    });
};

export const gameCenterDetailsRuleBasedMatchmakingRequestsGetMetrics = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsResponse, GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterDetails/{id}/metrics/ruleBasedMatchmakingRequests'
    });
};

export const gameCenterMatchmakingQueuesExperimentMatchmakingQueueSizesGetMetrics = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingQueuesExperimentMatchmakingQueueSizesGetMetricsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterMatchmakingQueuesExperimentMatchmakingQueueSizesGetMetricsResponse, GameCenterMatchmakingQueuesExperimentMatchmakingQueueSizesGetMetricsError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingQueues/{id}/metrics/experimentMatchmakingQueueSizes'
    });
};

export const gameCenterMatchmakingQueuesExperimentMatchmakingRequestsGetMetrics = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingQueuesExperimentMatchmakingRequestsGetMetricsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterMatchmakingQueuesExperimentMatchmakingRequestsGetMetricsResponse, GameCenterMatchmakingQueuesExperimentMatchmakingRequestsGetMetricsError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingQueues/{id}/metrics/experimentMatchmakingRequests'
    });
};

export const gameCenterMatchmakingQueuesMatchmakingQueueSizesGetMetrics = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingQueuesMatchmakingQueueSizesGetMetricsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterMatchmakingQueuesMatchmakingQueueSizesGetMetricsResponse, GameCenterMatchmakingQueuesMatchmakingQueueSizesGetMetricsError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingQueues/{id}/metrics/matchmakingQueueSizes'
    });
};

export const gameCenterMatchmakingQueuesMatchmakingRequestsGetMetrics = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingQueuesMatchmakingRequestsGetMetricsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterMatchmakingQueuesMatchmakingRequestsGetMetricsResponse, GameCenterMatchmakingQueuesMatchmakingRequestsGetMetricsError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingQueues/{id}/metrics/matchmakingRequests'
    });
};

export const gameCenterMatchmakingQueuesMatchmakingSessionsGetMetrics = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingQueuesMatchmakingSessionsGetMetricsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterMatchmakingQueuesMatchmakingSessionsGetMetricsResponse, GameCenterMatchmakingQueuesMatchmakingSessionsGetMetricsError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingQueues/{id}/metrics/matchmakingSessions'
    });
};

export const gameCenterMatchmakingRulesMatchmakingBooleanRuleResultsGetMetrics = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingRulesMatchmakingBooleanRuleResultsGetMetricsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterMatchmakingRulesMatchmakingBooleanRuleResultsGetMetricsResponse, GameCenterMatchmakingRulesMatchmakingBooleanRuleResultsGetMetricsError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingRules/{id}/metrics/matchmakingBooleanRuleResults'
    });
};

export const gameCenterMatchmakingRulesMatchmakingNumberRuleResultsGetMetrics = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingRulesMatchmakingNumberRuleResultsGetMetricsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterMatchmakingRulesMatchmakingNumberRuleResultsGetMetricsResponse, GameCenterMatchmakingRulesMatchmakingNumberRuleResultsGetMetricsError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingRules/{id}/metrics/matchmakingNumberRuleResults'
    });
};

export const gameCenterMatchmakingRulesMatchmakingRuleErrorsGetMetrics = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GameCenterMatchmakingRulesMatchmakingRuleErrorsGetMetricsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GameCenterMatchmakingRulesMatchmakingRuleErrorsGetMetricsResponse, GameCenterMatchmakingRulesMatchmakingRuleErrorsGetMetricsError, ThrowOnError>({
        ...options,
        url: '/v1/gameCenterMatchmakingRules/{id}/metrics/matchmakingRuleErrors'
    });
};